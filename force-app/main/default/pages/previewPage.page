<apex:page showHeader="false" sidebar="false" standardStylesheets="false" applyHtmlTag="true" docType="html-5.0" controller="mainController">
   <html lang="en">
      <head>
         <meta charset="UTF-8" />
         <meta name="viewport" content="width=device-width, initial-scale=1.0" />
         <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css" integrity="sha512-z3gLpd7yknf1YoNbCzqRKc4qyor8gaKU1qmn+CShxbuBusANI9QpRohGBreCFkKxLhei6S9CQXFEbbKuqLg0DA==" crossorigin="anonymous" referrerpolicy="no-referrer"
            />
         <link rel="preconnect" href="https://fonts.googleapis.com" />
         <link rel="preconnect" href="https://fonts.gstatic.com" />
         <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;600;700;800&display=swap" rel="stylesheet" />
         <title>Details page</title>
         <style>
            * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            }
            :root {
            --poppins: 'Poppins', sans-serif;
            --lato: 'Lato', sans-serif;
            --light: #F9F9F9;
            --blue: #3C91E6;
            --light-blue: #CFE8FF;
            --grey: #eee;
            --dark-grey: #AAAAAA;
            --dark: #342E37;
            --red: #DB504A;
            --yellow: #FFCE26;
            --light-yellow: #FFF2C6;
            --orange: #FD7238;
            --light-orange: #FFE0D3;
            --TransparentBlue: rgba(11, 24, 76, .85);
            --secondaryColor: #ca041b;
            }
            html,
            body {
            font-family: 'Montserrat', sans-serif;
            overflow-x: hidden;
            font-size: 10px;
            font-weight: 400;
            width: 100vw;
            display: flex;
            background-color: var(--grey);
            position: relative;
            }
            ::-webkit-scrollbar {
            width: 7px;
            /* width of the scrollbar */
            }
            /* Track */
            ::-webkit-scrollbar-track {
            background: var(--dark-grey);
            /* color of the track */
            }
            /* Handle */
            ::-webkit-scrollbar-thumb {
            background: var(--TransparentBlue);
            /* color of the handle */
            border-radius: 6px;
            /* roundness of the handle */
            }
            .sidebar {
            width: 25rem;
            height: 100vh;
            margin-top:72px;
            background-color: var(--TransparentBlue);
            color: var(--light);
            padding: 0rem 0;
            }
            .logo {
            width: 20rem;
            margin-left: 1rem;
            margin-top:1rem;
            }
            .sidebar .menu {
            font-size: 1.6rem;
            font-weight: 400;
            width: 100%;
            list-style: none;
            margin-top: 6rem;
            display: flex;
            flex-direction: column;
            align-items: center;
            }
            .sidebar .menu li {
            height: 5rem;
            display: flex;
            font-weight: 700;
            letter-spacing: 1px;
            justify-content: flex-start;
            align-items: center;
            padding-left: 3rem;
            width: 100%;
            cursor: pointer;
            }
            .sidebar_active {
            background-color: var(--blue);
            }
            .main {
            width: calc(100vw - 25rem);
            height: 100vh;
            overflow-y: scroll;
            }
            .navbar {
            width: 100vw;
            height: 7.2rem;
            background-color: var(--TransparentBlue);
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            align-items: center;
            position: fixed;
            z-index: 1000;
            top: 0;
            right: 0;
            }
            .navbar .left {
            grid-column: 1 / 3;
            }
            .navbar .left h1 {
            font-size: 2.5rem;
            font-weight: 700;
            letter-spacing: -.5px;
            color: var(--dark);
            text-align: center;
            text-transform: uppercase;
            }
            .navbar .right {
            grid-column: 3 / -1;
            display: flex;
            padding: 0rem 2rem;
            justify-content: flex-end;
            }
            .emp_form label{
            color: var(--TransparentBlue);
            }
            .navbar .right .btn {
            width: 15rem;
            cursor: pointer;
            height: 4rem;
            font-weight: 700;
            letter-spacing: 1px;
            margin-right: 2rem;
            outline: none;
            border: none;
            border-radius: 0.5rem;
            font-size: 1.6rem;
            color: var(--TransparentBlue);
            border: 1px solid var(--dark-grey);
            background-color: #fff;
            transition: all .3s linear;
            }
            textarea {
            resize: none !important;
            }
            .navbar .right .btn:hover {
            background-color: var(--TransparentBlue);
            color: var(--light);
            }
            .form_div {
            width: 80%;
            min-height: 70%;
            background-color: var(--light);
            margin: 10rem auto;
            border-radius: 2rem;
            }
            .form {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            padding: 1rem 5rem 2rem 5rem;
            row-gap: 3rem;
            column-gap: 6rem;
            }
            .form label {
            font-size: 1.6rem;
            font-weight: 400;
            /*color: #888; */
            color: var(--TransparentBlue);
            }
            .form .input,
            .form select {
            width: 100%;
            font-size: 1.6rem;
            padding-left: .5rem;
            color: var(--TransparentBlue);
            height: 5rem;
            margin-top: 1rem;
            outline: none;
            border: 1px solid var(--grey);
            border-radius: 1rem;
            transition: all .15s;
            }
            .form .input:focus,
            .form textarea:focus {
            border: 2px solid var(--blue);
            }
            .form .button_container {
            grid-column: 1/-1;
            margin-top: 5rem;
            display: flex;
            align-items: center;
            justify-content: center;
            }
            .address {
            grid-column: 1/-1;
            }
            .address textarea {
            width: 100%;
            height: 5rem;
            outline: none;
            margin-top: 1rem;
            border: 1px solid var(--grey);
            border-radius: 1rem;
            }
            .button_container button  {
            width: 12rem;
            height: 4rem;
            font-size: 1.6rem;
            font-weight: 700;
            letter-spacing: 1px;
            color: #fff;
            outline: none;
            border: none;
            background-color: var(--TransparentBlue);
            border-radius: .6rem;
            margin-right: 2rem;
            }
            .checkbox {
            display: flex;
            align-items: center;
            justify-content: space-between;
            }
            .input_div_group {
            background-color:#eee;
            color:#fff;
            grid-column: 1/-1;
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            row-gap: 3rem;
            column-gap: 6rem;
            border-radius: 2rem;
            padding: 2rem 5rem 4rem 5rem;
            }
            .btn-container {
            grid-column: 1/-1;
            display: flex;
            align-items: center;
            justify-content: flex-end;
            padding: 0rem;
            }
            .btn-container_prevNext{
            grid-column: 1/-1;
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 1rem 2rem;
            }
            .input_div_group .button_container {
            margin-top: 0;
            }
            .input_checkbox_div {
            grid-column: 1/-1;
            display: flex;
            align-items: center;
            justify-content: flex-start
            }
            .input_checkbox_div label {
            width: 80% !important;
            margin-left: 2rem;
            font-size: 1.6rem;
            }
            .checkbox input,
            .input_checkbox_div input {
            width: 3rem !important;
            }
            .mailingInfo {
            grid-column: 1/-1;
            }
            .employee_section,
            .kyc_section,
            .family_section,
            .education_section,
            .workexp_section ,
            .checklist_section,
            .preview_section,
            .submission_section
            {
                display: none !important;
            }
            .active {
            display: block !important; 
            }
            .disablebtn {
            display: none;
            }
            select:disabled {
            background-color: #fff;
            cursor: not-allowed;
            }
            .inputdisabled {
            background-color: #fff !important;
            border: none !important;
            cursor: not-allowed
            }
            .education_section .hidden{
            display: none;
            }
            /* document checklist style */
            .document_checklist_table{
            font-size: 1.6rem;
            border-collapse: collapse;
            }
            .document_checklist_table h2{
            text-align: center;
            }
            .checklistSaveBtn{
            width: 12rem;
            height: 4rem;
            font-size: 1.6rem;
            font-weight: 700;
            letter-spacing: 1px;
            color: #fff;
            outline: none;
            border: none;
            background-color: var(--TransparentBlue) !important;
            border-radius: .6rem;
            margin-right: 2rem;
            margin-left:40%;
            margin-top:1rem;
            }
            .document_checklist_table table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 20px;
            }
            .document_checklist_table th, td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: left;
            }
            .document_checklist_table th {
            background-color: #f2f2f2;
            }
            /* end of document checklist */

             /* preview section style */
             
             .preview_section input{
                outline: none !important;
                border: none !important;
                cursor: pointer;
               
            }
            .preview_section  select::-ms-expand {
                display: none !important;
              }
             
              .button_container .FsubmitBtn{
                background-color: rgb(146 146 149 / 85%);
                cursor: pointer;
              }
              .button_container  .FsubmitBtn:disabled{
                cursor:not-allowed;
             }

             /* End of preview section style */

            .buffer {
            position: absolute;
            width: 100vw;
            height: 100vh;
            top: 0;
            left: 0;
            background-color: rgba(0, 0, 0, .5);
            display: none;
            }
            .wrapper {
            position: absolute;
            left: 50%;
            top: 50%;
            margin: -100px;
            width: 200px;
            height: 200px;
            background-color: transparent;
            border: none;
            }
            .wrapper .box-wrap {
            width: 70%;
            height: 70%;
            margin: calc((100% - 70%)/2) calc((100% - 70%)/2);
            position: relative;
            transform: rotate(-45deg);
            }
            .wrapper .box-wrap .box {
            width: 100%;
            height: 100%;
            position: absolute;
            left: 0;
            top: 0;
            background: rgba(135, 0, 0, 0.6);
            background: linear-gradient(to right, #141562, #486FBC, #EAB5A1, #8DD6FF, #4973C9, #D07CA7, #F4915E, #F5919E, #B46F89, #141562, #486FBC);
            background-position: 0% 50%;
            background-size: 1000% 1000%;
            visibility: hidden;
            }
            .wrapper .box-wrap .box.one {
            -webkit-animation: moveGradient 15s infinite, oneMove 3.5s infinite;
            animation: moveGradient 15s infinite, oneMove 3.5s infinite;
            }
            .wrapper .box-wrap .box.two {
            -webkit-animation: moveGradient 15s infinite, twoMove 3.5s 0.15s infinite;
            animation: moveGradient 15s infinite, twoMove 3.5s 0.15s infinite;
            }
            .wrapper .box-wrap .box.three {
            -webkit-animation: moveGradient 15s infinite, threeMove 3.5s 0.3s infinite;
            animation: moveGradient 15s infinite, threeMove 3.5s 0.3s infinite;
            }
            .wrapper .box-wrap .box.four {
            -webkit-animation: moveGradient 15s infinite, fourMove 3.5s 0.575s infinite;
            animation: moveGradient 15s infinite, fourMove 3.5s 0.575s infinite;
            }
            .wrapper .box-wrap .box.five {
            -webkit-animation: moveGradient 15s infinite, fiveMove 3.5s 0.725s infinite;
            animation: moveGradient 15s infinite, fiveMove 3.5s 0.725s infinite;
            }
            .wrapper .box-wrap .box.six {
            -webkit-animation: moveGradient 15s infinite, sixMove 3.5s 0.875s infinite;
            animation: moveGradient 15s infinite, sixMove 3.5s 0.875s infinite;
            }
            @-webkit-keyframes moveGradient {
            to {
            background-position: 100% 50%;
            }
            }
            @keyframes moveGradient {
            to {
            background-position: 100% 50%;
            }
            }
            @-webkit-keyframes oneMove {
            0% {
            visibility: visible;
            -webkit-clip-path: inset(0% 35% 70% round 5%);
            clip-path: inset(0% 35% 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            14.2857% {
            -webkit-clip-path: inset(0% 35% 70% round 5%);
            clip-path: inset(0% 35% 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            28.5714% {
            -webkit-clip-path: inset(35% round 5%);
            clip-path: inset(35% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            42.8571% {
            -webkit-clip-path: inset(35% 70% 35% 0 round 5%);
            clip-path: inset(35% 70% 35% 0 round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            57.1428% {
            -webkit-clip-path: inset(35% 70% 35% 0 round 5%);
            clip-path: inset(35% 70% 35% 0 round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            71.4285% {
            -webkit-clip-path: inset(0% 70% 70% 0 round 5%);
            clip-path: inset(0% 70% 70% 0 round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            85.7142% {
            -webkit-clip-path: inset(0% 70% 70% 0 round 5%);
            clip-path: inset(0% 70% 70% 0 round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            100% {
            -webkit-clip-path: inset(0% 35% 70% round 5%);
            clip-path: inset(0% 35% 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            }
            @keyframes oneMove {
            0% {
            visibility: visible;
            -webkit-clip-path: inset(0% 35% 70% round 5%);
            clip-path: inset(0% 35% 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            14.2857% {
            -webkit-clip-path: inset(0% 35% 70% round 5%);
            clip-path: inset(0% 35% 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            28.5714% {
            -webkit-clip-path: inset(35% round 5%);
            clip-path: inset(35% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            42.8571% {
            -webkit-clip-path: inset(35% 70% 35% 0 round 5%);
            clip-path: inset(35% 70% 35% 0 round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            57.1428% {
            -webkit-clip-path: inset(35% 70% 35% 0 round 5%);
            clip-path: inset(35% 70% 35% 0 round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            71.4285% {
            -webkit-clip-path: inset(0% 70% 70% 0 round 5%);
            clip-path: inset(0% 70% 70% 0 round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            85.7142% {
            -webkit-clip-path: inset(0% 70% 70% 0 round 5%);
            clip-path: inset(0% 70% 70% 0 round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            100% {
            -webkit-clip-path: inset(0% 35% 70% round 5%);
            clip-path: inset(0% 35% 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            }
            @-webkit-keyframes twoMove {
            0% {
            visibility: visible;
            -webkit-clip-path: inset(0% 70% 70% 0 round 5%);
            clip-path: inset(0% 70% 70% 0 round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            14.2857% {
            -webkit-clip-path: inset(0% 70% 70% 0 round 5%);
            clip-path: inset(0% 70% 70% 0 round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            28.5714% {
            -webkit-clip-path: inset(0% 35% 70% round 5%);
            clip-path: inset(0% 35% 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            42.8571% {
            -webkit-clip-path: inset(0% 35% 70% round 5%);
            clip-path: inset(0% 35% 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            57.1428% {
            -webkit-clip-path: inset(35% round 5%);
            clip-path: inset(35% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            71.4285% {
            -webkit-clip-path: inset(35% 70% 35% 0 round 5%);
            clip-path: inset(35% 70% 35% 0 round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            85.7142% {
            -webkit-clip-path: inset(35% 70% 35% 0 round 5%);
            clip-path: inset(35% 70% 35% 0 round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            100% {
            -webkit-clip-path: inset(0% 70% 70% 0 round 5%);
            clip-path: inset(0% 70% 70% 0 round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            }
            @keyframes twoMove {
            0% {
            visibility: visible;
            -webkit-clip-path: inset(0% 70% 70% 0 round 5%);
            clip-path: inset(0% 70% 70% 0 round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            14.2857% {
            -webkit-clip-path: inset(0% 70% 70% 0 round 5%);
            clip-path: inset(0% 70% 70% 0 round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            28.5714% {
            -webkit-clip-path: inset(0% 35% 70% round 5%);
            clip-path: inset(0% 35% 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            42.8571% {
            -webkit-clip-path: inset(0% 35% 70% round 5%);
            clip-path: inset(0% 35% 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            57.1428% {
            -webkit-clip-path: inset(35% round 5%);
            clip-path: inset(35% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            71.4285% {
            -webkit-clip-path: inset(35% 70% 35% 0 round 5%);
            clip-path: inset(35% 70% 35% 0 round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            85.7142% {
            -webkit-clip-path: inset(35% 70% 35% 0 round 5%);
            clip-path: inset(35% 70% 35% 0 round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            100% {
            -webkit-clip-path: inset(0% 70% 70% 0 round 5%);
            clip-path: inset(0% 70% 70% 0 round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            }
            @-webkit-keyframes threeMove {
            0% {
            visibility: visible;
            -webkit-clip-path: inset(35% 70% 35% 0 round 5%);
            clip-path: inset(35% 70% 35% 0 round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            14.2857% {
            -webkit-clip-path: inset(35% 70% 35% 0 round 5%);
            clip-path: inset(35% 70% 35% 0 round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            28.5714% {
            -webkit-clip-path: inset(0% 70% 70% 0 round 5%);
            clip-path: inset(0% 70% 70% 0 round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            42.8571% {
            -webkit-clip-path: inset(0% 70% 70% 0 round 5%);
            clip-path: inset(0% 70% 70% 0 round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            57.1428% {
            -webkit-clip-path: inset(0% 35% 70% round 5%);
            clip-path: inset(0% 35% 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            71.4285% {
            -webkit-clip-path: inset(0% 35% 70% round 5%);
            clip-path: inset(0% 35% 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            85.7142% {
            -webkit-clip-path: inset(35% round 5%);
            clip-path: inset(35% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            100% {
            -webkit-clip-path: inset(35% 70% 35% 0 round 5%);
            clip-path: inset(35% 70% 35% 0 round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            }
            @keyframes threeMove {
            0% {
            visibility: visible;
            -webkit-clip-path: inset(35% 70% 35% 0 round 5%);
            clip-path: inset(35% 70% 35% 0 round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            14.2857% {
            -webkit-clip-path: inset(35% 70% 35% 0 round 5%);
            clip-path: inset(35% 70% 35% 0 round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            28.5714% {
            -webkit-clip-path: inset(0% 70% 70% 0 round 5%);
            clip-path: inset(0% 70% 70% 0 round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            42.8571% {
            -webkit-clip-path: inset(0% 70% 70% 0 round 5%);
            clip-path: inset(0% 70% 70% 0 round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            57.1428% {
            -webkit-clip-path: inset(0% 35% 70% round 5%);
            clip-path: inset(0% 35% 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            71.4285% {
            -webkit-clip-path: inset(0% 35% 70% round 5%);
            clip-path: inset(0% 35% 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            85.7142% {
            -webkit-clip-path: inset(35% round 5%);
            clip-path: inset(35% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            100% {
            -webkit-clip-path: inset(35% 70% 35% 0 round 5%);
            clip-path: inset(35% 70% 35% 0 round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            }
            @-webkit-keyframes fourMove {
            0% {
            visibility: visible;
            -webkit-clip-path: inset(35% 0% 35% 70% round 5%);
            clip-path: inset(35% 0% 35% 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            14.2857% {
            -webkit-clip-path: inset(35% 0% 35% 70% round 5%);
            clip-path: inset(35% 0% 35% 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            28.5714% {
            -webkit-clip-path: inset(35% round 5%);
            clip-path: inset(35% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            42.8571% {
            -webkit-clip-path: inset(70% 35% 0% 35% round 5%);
            clip-path: inset(70% 35% 0% 35% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            57.1428% {
            -webkit-clip-path: inset(70% 35% 0% 35% round 5%);
            clip-path: inset(70% 35% 0% 35% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            71.4285% {
            -webkit-clip-path: inset(70% 0 0 70% round 5%);
            clip-path: inset(70% 0 0 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            85.7142% {
            -webkit-clip-path: inset(70% 0 0 70% round 5%);
            clip-path: inset(70% 0 0 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            100% {
            -webkit-clip-path: inset(35% 0% 35% 70% round 5%);
            clip-path: inset(35% 0% 35% 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            }
            @keyframes fourMove {
            0% {
            visibility: visible;
            -webkit-clip-path: inset(35% 0% 35% 70% round 5%);
            clip-path: inset(35% 0% 35% 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            14.2857% {
            -webkit-clip-path: inset(35% 0% 35% 70% round 5%);
            clip-path: inset(35% 0% 35% 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            28.5714% {
            -webkit-clip-path: inset(35% round 5%);
            clip-path: inset(35% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            42.8571% {
            -webkit-clip-path: inset(70% 35% 0% 35% round 5%);
            clip-path: inset(70% 35% 0% 35% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            57.1428% {
            -webkit-clip-path: inset(70% 35% 0% 35% round 5%);
            clip-path: inset(70% 35% 0% 35% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            71.4285% {
            -webkit-clip-path: inset(70% 0 0 70% round 5%);
            clip-path: inset(70% 0 0 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            85.7142% {
            -webkit-clip-path: inset(70% 0 0 70% round 5%);
            clip-path: inset(70% 0 0 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            100% {
            -webkit-clip-path: inset(35% 0% 35% 70% round 5%);
            clip-path: inset(35% 0% 35% 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            }
            @-webkit-keyframes fiveMove {
            0% {
            visibility: visible;
            -webkit-clip-path: inset(70% 0 0 70% round 5%);
            clip-path: inset(70% 0 0 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            14.2857% {
            -webkit-clip-path: inset(70% 0 0 70% round 5%);
            clip-path: inset(70% 0 0 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            28.5714% {
            -webkit-clip-path: inset(35% 0% 35% 70% round 5%);
            clip-path: inset(35% 0% 35% 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            42.8571% {
            -webkit-clip-path: inset(35% 0% 35% 70% round 5%);
            clip-path: inset(35% 0% 35% 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            57.1428% {
            -webkit-clip-path: inset(35% round 5%);
            clip-path: inset(35% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            71.4285% {
            -webkit-clip-path: inset(70% 35% 0% 35% round 5%);
            clip-path: inset(70% 35% 0% 35% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            85.7142% {
            -webkit-clip-path: inset(70% 35% 0% 35% round 5%);
            clip-path: inset(70% 35% 0% 35% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            100% {
            -webkit-clip-path: inset(70% 0 0 70% round 5%);
            clip-path: inset(70% 0 0 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            }
            @keyframes fiveMove {
            0% {
            visibility: visible;
            -webkit-clip-path: inset(70% 0 0 70% round 5%);
            clip-path: inset(70% 0 0 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            14.2857% {
            -webkit-clip-path: inset(70% 0 0 70% round 5%);
            clip-path: inset(70% 0 0 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            28.5714% {
            -webkit-clip-path: inset(35% 0% 35% 70% round 5%);
            clip-path: inset(35% 0% 35% 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            42.8571% {
            -webkit-clip-path: inset(35% 0% 35% 70% round 5%);
            clip-path: inset(35% 0% 35% 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            57.1428% {
            -webkit-clip-path: inset(35% round 5%);
            clip-path: inset(35% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            71.4285% {
            -webkit-clip-path: inset(70% 35% 0% 35% round 5%);
            clip-path: inset(70% 35% 0% 35% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            85.7142% {
            -webkit-clip-path: inset(70% 35% 0% 35% round 5%);
            clip-path: inset(70% 35% 0% 35% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            100% {
            -webkit-clip-path: inset(70% 0 0 70% round 5%);
            clip-path: inset(70% 0 0 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            }
            @-webkit-keyframes sixMove {
            0% {
            visibility: visible;
            -webkit-clip-path: inset(70% 35% 0% 35% round 5%);
            clip-path: inset(70% 35% 0% 35% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            14.2857% {
            -webkit-clip-path: inset(70% 35% 0% 35% round 5%);
            clip-path: inset(70% 35% 0% 35% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            28.5714% {
            -webkit-clip-path: inset(70% 0 0 70% round 5%);
            clip-path: inset(70% 0 0 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            42.8571% {
            -webkit-clip-path: inset(70% 0 0 70% round 5%);
            clip-path: inset(70% 0 0 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            57.1428% {
            -webkit-clip-path: inset(35% 0% 35% 70% round 5%);
            clip-path: inset(35% 0% 35% 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            71.4285% {
            -webkit-clip-path: inset(35% 0% 35% 70% round 5%);
            clip-path: inset(35% 0% 35% 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            85.7142% {
            -webkit-clip-path: inset(35% round 5%);
            clip-path: inset(35% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            100% {
            -webkit-clip-path: inset(70% 35% 0% 35% round 5%);
            clip-path: inset(70% 35% 0% 35% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            }
            @keyframes sixMove {
            0% {
            visibility: visible;
            -webkit-clip-path: inset(70% 35% 0% 35% round 5%);
            clip-path: inset(70% 35% 0% 35% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            14.2857% {
            -webkit-clip-path: inset(70% 35% 0% 35% round 5%);
            clip-path: inset(70% 35% 0% 35% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            28.5714% {
            -webkit-clip-path: inset(70% 0 0 70% round 5%);
            clip-path: inset(70% 0 0 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            42.8571% {
            -webkit-clip-path: inset(70% 0 0 70% round 5%);
            clip-path: inset(70% 0 0 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            57.1428% {
            -webkit-clip-path: inset(35% 0% 35% 70% round 5%);
            clip-path: inset(35% 0% 35% 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            71.4285% {
            -webkit-clip-path: inset(35% 0% 35% 70% round 5%);
            clip-path: inset(35% 0% 35% 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            85.7142% {
            -webkit-clip-path: inset(35% round 5%);
            clip-path: inset(35% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            100% {
            -webkit-clip-path: inset(70% 35% 0% 35% round 5%);
            clip-path: inset(70% 35% 0% 35% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            }
            .message {
            width: 50rem;
            top: 2rem;
            left: 50%;
            transform: translateX(-50%);
            position: absolute;
            height: 8rem;
            border-radius: 2px;
            z-index: 100000;
            background-color: var(--TransparentBlue);
            display: none;
            flex-direction: column;
            }
            .progressbar {
            height: .7rem;
            background-color: red;
            border-radius: 2px;
            animation-duration: 5s;
            }
            @keyframes progressbarAnimation {
            from {
            width: 100%
            }
            to {
            width: 0%;
            }
            }
            .errormsg {
            height: calc(100% - .7rem);
            color: white;
            font-size: 1.6rem;
            font-weight: 600;
            display: flex;
            align-items: center;
            padding: 0 3rem;
            justify-content: space-between;
            }
            .cancel {
            cursor: pointer;
            }
            .verification_table {
            width: 100%;
            grid-column: 1/-1;
            border-collapse: collapse;
            margin-bottom: 20px;
            font-size: 1.6rem;
            }
            .verification_form{
            padding:0rem !important;
            }
            .verification_table th{
            font-size: 1.8rem;
            }
            .verification_table th,.verification_table td {
            border: 1px solid #ddd;
            padding: 2rem;
            text-align: left;
            }
            /* .verification_table input[type='checkbox']{
            cursor: pointer;
            } */
            .deletebtn{
            background-color: var(--secondaryColor) !important;
            }
            .submission_section .left{
            grid-column: 1/2;
            width: 100%;
            height: 13rem;
            margin-top: 2rem;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            }
            .submission_section .right{
            grid-column: 3/-1;
            width: 100%;
            padding: 1rem;
            margin-top: 2rem;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            }
            .submission_section .middle{
            grid-column: 2/3;
            display: flex;
            align-items: center;
            justify-content: center;
            }
            .submission_section .middle .submitbtn{
            background-color: var(--TransparentBlue);
            width:22rem;
            height: 5rem;
            color:#fff;
            border: none;
            font-size: 1.6rem;
            border-radius: 10px;
            }
            .error_count , .warning_count{
            font-size: 3.6rem;
            font-weight: 700;
            color:var(--TransparentBlue);
            position: relative;
            z-index:4;
            }
            .error_count::before{
            content: " ";
            display: block;
            top:50%;
            left: 50%;
            transform: translate(-50%,-50%);
            position: absolute;
            border-radius: 50%;
            background-color: #fff;
            width: 12rem;
            height: 12rem;
            z-index: -1;
            }
            .error_count::after{
            content: " ";
            display: block;
            top:50%;
            left: 50%;
            transform: translate(-50%,-50%);
            position: absolute;
            width: 15rem;
            height: 15rem;
            border-radius: 50%;
            background-color: rgba(255, 0, 0, 0.671);
            z-index: -2;
            }
            .warning_count::before{
            content: " ";
            display: block;
            top:50%;
            left: 50%;
            transform: translate(-50%,-50%);
            position: absolute;
            border-radius: 50%;
            width: 12rem;
            height: 12rem;
            background-color: #fff;
            z-index: -1;
            }
            .warning_count::after{
            content: " ";
            display: block;
            top:50%;
            left: 50%;
            transform: translate(-50%,-50%);
            position: absolute;
            width: 15rem;
            height: 15rem;
            border-radius: 50%;
            background-color:rgba(255, 166, 0, 0.671);
            z-index: -2;
            }
            .count_span{
            margin-top:.5rem;
            z-index: 4;
            font-size: 1rem;
            font-weight: 700;
            color:var(--TransparentBlue);
            }
            .errorContents{
            grid-column: 1/-1;
            margin-top: 2rem;
            }
            .content{
            width: 100%;
            height: 4rem;
            display: flex;
            align-items: center;
            margin-top: 1rem;
            padding-left: 2rem;
            font-size: 1.6rem;
            color:#fff;
            background-color:var(--TransparentBlue);
            border-left: 5px solid red;
            }
         </style>
      </head>
      <body>
         <div class="message">
            <div class="errormsg">
               <p class="error"></p>
               <i class="fa-solid fa-xmark cancel"></i>
            </div>
            <div class="progressbar"></div>
         </div>
         <div class="buffer">
            <div class="wrapper">
               <div class="box-wrap">
                  <div class="box one"></div>
                  <div class="box two"></div>
                  <div class="box three"></div>
                  <div class="box four"></div>
                  <div class="box five"></div>
                  <div class="box six"></div>
               </div>
            </div>
         </div>
         <div class="sidebar">
            <!-- <img src="{!URLFOR($Resource.Novigo, '')}" alt="Image Description" class="logo" style="margin-top:3px;"/> -->
            <ul class="menu">
               <li data-goto="employee_section" class="menu_options sidebar_active">
                  <p>Employee Details</p>
               </li>
               <li data-goto="family_section" class="menu_options">
                  <p>Family Details</p>
               </li>
               <li data-goto="kyc_section" class="menu_options">
                  <p>KYC Details</p>
               </li>
               <li data-goto="education_section" class="menu_options">
                  <p>Education Details</p>
               </li>
               <li data-goto="workexp_section" class="menu_options">
                  <p>Work Experience</p>
               </li>
               <li data-goto="checklist_section" class="menu_options">
                  <p>Document Checklist</p>
               </li>
               <li data-goto="preview_section" class="menu_options">
                <p>Preview Employee Details</p>
               </li>
               <li data-goto="submission_section" class="menu_options">
                  <p>Submission</p>
               </li>
            </ul>
         </div>
         <div class="main">
            <nav class="navbar" style="z-index:9999;">
               <div class="left">
                <img src="{!URLFOR($Resource.Novigo, '')}" alt="Image Description" class="logo" style="margin-top:3px;z-index:999999;overflow:hidden;"/>
                <!-- <h1>Employee Joining Form</h1></div> -->
               </div>
               <div class="right">
                  <button class="btn refresh-btn">Refresh</button>
                  <button class="btn">Logout</button>
               </div>
            </nav>
            <section class="form_div employee_section  active">
               <form action="" class="form emp_form">
                  <div class="input_div">
                     <label for="">First name</label><br/>
                     <input class="input" type="text" name="" id="Emp_firstName__c" />
                  </div>
                  <div class="input_div">
                     <label for="">Middle name</label><br/>
                     <input class="input" type="text" name="" id="Emp_midName__c" />
                  </div>
                  <div class="input_div">
                     <label for="">Last name</label><br/>
                     <input class="input" type="text" name="" id="Emp_lastName__c" />
                  </div>
                  <div class="input_div ">
                     <label for="">Date of Birth</label><br/>
                     <input class="input" type="date" name="" id="Emp_dateOfBirth__c" />
                  </div>
                  <div class="input_div">
                     <label for="">Marital Status</label><br/>
                     <select name="Marital Status" id="Emp_maritalStatus__c">
                        <option value="Married">Married</option>
                        <option value="Unmarried">Unmarried</option>
                        <option value="Other">Other</option>
                     </select>
                  </div>
                  <div class="input_div">
                     <label for="">Gender</label><br/>
                     <select name="Gender" id="Emp_gender__c">
                        <option value="Male">Male</option>
                        <option value="Female">Female</option>
                     </select>
                  </div>
                  <div class="input_div">
                     <label for="">Blood Group</label><br/>
                     <select name="" id="Emp_bloodGroup__c">
                        <option value="A+ve">A+ve</option>
                        <option value="A-ve">A-ve</option>
                        <option value="B+ve">B+ve</option>
                        <option value="B-ve">B-ve</option>
                        <option value="AB+ve">AB+ve</option>
                        <option value="AB-ve">AB-ve</option>
                        <option value="O+ve">O+ve</option>
                        <option value="O-ve">O-ve</option>
                     </select>
                  </div>
                  <div class="input_div span-2">
                     <label for="">Nationality</label><br/>
                     <select name="" id="Emp_nationality__c">
                        <option value="INDIAN">INDIAN</option>
                        <option value="AMERICIAN">AMERICIAN</option>
                     </select>
                  </div>
                  <div class="input_div">
                     <label for="">Email id</label><br/>
                     <input class="input" type="email" name="" id="Emp_emailId__c" />
                  </div>
                  <div class="input_div">
                     <label for="">Telephone</label><br/>
                     <input class="input" type="text"  name="" id="Emp_telephone__c" />
                  </div>
                  <div class="input_div">
                     <label for="">Mobile</label><br/>
                     <input class="input" type="text" name="" id="Emp_mobilePhone__c" />
                  </div>
                  <div class="input_div">
                     <label for="">T shirt Size</label><br/>
                     <select name="T Shirt Size" id="Emp_tShirtSize__c">
                        <option value="XS">XS</option>
                        <option value="S">S</option>
                        <option value="M">M</option>
                        <option value="L">L</option>
                        <option value="XL">XL</option>
                        <option value="XXL">XXL</option>
                     </select>
                  </div>
                  <div class=" address">
                     <label for="">Residential Address / Permanent Address</label><br/>
                     <input name="" class="input" id="Emp_resAddress__c" cols="30" rows="10" />
                  </div>
                  <div class="input_div">
                     <label for="">City</label><br/>
                     <input class="input" type="text" name="" id="Emp_resCity__c" />
                  </div>
                  <div class="input_div">
                     <label for="">State</label><br/>
                     <input class="input" type="text" name="" id="Emp_resState__c" />
                  </div>
                  <div class="input_div">
                     <label for="">Zipcode</label><br/>
                     <input class="input" type="text" name="" id="Emp_resZipCode__c" />
                  </div>
                  <div class="input_div input_checkbox_div">
                     <div>
                        <input class="input mailing_checkbox" type="checkbox" name="" id="Emp_commonAddressCheck__c" />
                     </div>
                     <label for=""> Residential address same as Mailing address?</label><br/>
                  </div>
                  <div class=" address mailing_div">
                     <label for="">Mailing Address</label><br/>
                     <input name="" class="input" id="Emp_commAddress__c" cols="30" rows="10" />
                  </div>
                  <div class="input_div mailing_div">
                     <label for="">Mailing City</label><br/>
                     <input class="input" type="text" name="" id="Emp_commCity__c" />
                  </div>
                  <div class="input_div mailing_div">
                     <label for="">Mailing State</label><br/>
                     <input class="input" type="text" name="" id="Emp_commState__c" />
                  </div>
                  <div class="input_div mailing_div">
                     <label for="">Mailing Zipcode</label><br/>
                     <input class="input" type="text" name="" id="Emp_commZipCode__c" />
                  </div>
                  <div class="input_div">
                     <label for="">Food Preference</label><br/>
                     <select name="Food Preferences" id="Emp_foodPref__c">
                        <option value="Veg">Veg</option>
                        <option value="Non Veg">Non Veg</option>
                     </select>
                  </div>
                  <div></div>
                  <div></div>
                  <div class="input_div">
                     <label for="">Language 1</label><br/>
                     <input class="input" type="text" name="" id="Emp_lang1__c" /> <br/>
                     <div class="checkbox">
                        <div>
                           <input class="input" type="checkbox" name="" id="Emp_lang1Read__c" />
                        </div>
                        <label for="">Read</label><br/>
                        <div>
                           <input class="input" type="checkbox" name="" id="Emp_lang1Write__c" />
                        </div>
                        <label for="">Write</label><br/>
                        <div>
                           <input class="input" type="checkbox" name="" id="Emp_lang1Speak__c" />
                        </div>
                        <label for="">Speak</label><br/>
                     </div>
                  </div>
                  <div class="input_div">
                     <label for="">Language 2</label><br/>
                     <input class="input" type="text" name="" id="Emp_lang2__c" /> <br/>
                     <div class="checkbox">
                        <input class="input" type="checkbox" name="" id="Emp_lang2Read__c" />
                        <label for="">Read</label><br/>
                        <input class="input" type="checkbox" name="" id="Emp_lang2Write__c" />
                        <label for="">Write</label><br/>
                        <input class="input" type="checkbox" name="" id="Emp_lang2Speak__c" />
                        <label for="">Speak</label><br/>
                     </div>
                  </div>
                  <div class="input_div">
                     <label for="">Language 3</label><br/>
                     <input class="input" type="text" name="" id="Emp_lang3__c" /> <br/>
                     <div class="checkbox">
                        <input class="input" type="checkbox" name="" id="Emp_lang3Read__c" />
                        <label for="">Read</label><br/>
                        <input class="input" type="checkbox" name="" id="Emp_lang3Write__c" />
                        <label for="">Write</label><br/>
                        <input class="input" type="checkbox" name="" id="Emp_lang3Speak__c" />
                        <label for="">Speak</label><br/>
                     </div>
                  </div>
                  <div class="input_div">
                    <label for="">Emergency Contact Name</label><br/>
                    <input class="input" type="text" name="" id="Emp_Emergency__c" />
                 </div>
                 <div class="input_div">
                    <label for="">Emergency Contact Phone</label><br/>
                    <input class="input" type="text" name="" id="Emp_EmergencyContact_Phone__c" />
                 </div>
                 <div class="input_div">
                    <label for="">Emergency Contact Relation</label><br/>
                    <input class="input" type="text" name="" id="Emp_EmergencyContact_Relation__c" />
                 </div>
                  <div class="button_container">
                     <button class="savebtn">Save</button>
                  </div>
                  <div class="btn-container_prevNext">
                     <div class="button_container">
                        <button class="previousbtn"  style="opacity:0;">Previous</button>
                     </div>
                     <div class="button_container">
                        <button class="nextbtn" data-goto='family_section'>Next</button>
                     </div>
                  </div>
               </form>
            </section>
            <section class="form_div kyc_section ">
               <form action="" class="form kyc_form">
                  <div class="btn-container">
                     <div class="button_container">
                        <button class="savebtn">Save</button>
                     </div>
                     <div class="button_container">
                        <button class="add">Add</button>
                     </div>
                  </div>
                  <div class="input_div_group aadhar_kyc_input_div_group" >
                     <div class="input_div ">
                        <label for="">Document Type</label><br/>
                        <select name="Document type" id="Kyc_documentType__c" class="Kyc_documentType__c">
                           <option value="Aadhar Card">Aadhar Card</option>
                        </select>
                     </div>
                     <div class="input_div IFSC_input_div" style="display:none">
                        <label for="">IFSC</label><br/>
                        <input class="input" type="text" name="" id="Kyc_ifsc" />
                     </div>
                     <div class="input_div Passport_exp_input_div" style="display:none">
                        <label for="">Expiry date</label><br/>
                        <input class="input" type="text" name="" id="Kyc_expDate" />
                     </div>
                     <div class="input_div">
                        <label for="Kyc_nameOnDocument__c">Name as on Document</label><br/>
                        <input class="input" type="text" name="" id="Kyc_nameOnDocument__c" />
                     </div>
                     <div class="input_div">
                        <label for="Kyc_documentNumber__c">Document no</label><br/>
                        <input class="input" type="text" name="" id="Kyc_documentNumber__c" />
                     </div>
                     <div class=" address">
                        <label for="Kyc_remarks__c">Remarks if any</label><br/>
                        <input type="text" name="" id="Kyc_remarks__c" class="input" cols="30" rows="10" />
                     </div>
                     <input type="hidden" id="Kyc_Id" value="new" class="Id" />
                     <div class="btn-container">
                     </div>
                  </div>
                  <div class="input_div_group passport_kyc_input_div_group" >
                     <div class="input_div ">
                        <label for="">Document Type</label><br/>
                        <select name="Document type" id="Kyc_documentType__c" class="Kyc_documentType__c">
                           <option value="Passport">Passport</option>
                        </select>
                     </div>
                     <div class="input_div IFSC_input_div" style="display:none">
                        <label for="">IFSC</label><br/>
                        <input class="input" type="text" name="" id="Kyc_ifsc" />
                     </div>
                     <div class="input_div Passport_exp_input_div" style="display:block">
                        <label for="Kyc_nameOnDocument__c">Expiry date</label><br/>
                        <input class="input" type="text" name="" id="Kyc_expDate" />
                     </div>
                     <div class="input_div">
                        <label for="Kyc_nameOnDocument__c">Name as on Document</label><br/>
                        <input class="input" type="text" name="" id="Kyc_nameOnDocument__c" />
                     </div>
                     <div class="input_div">
                        <label for="Kyc_documentNumber__c">Document no</label><br/>
                        <input class="input" type="text" name="" id="Kyc_documentNumber__c" />
                     </div>
                     <div class=" address">
                        <label for="Kyc_remarks__c">Remarks if any</label><br/>
                        <input type="text" name="" id="Kyc_remarks__c" class="input" cols="30" rows="10" />
                     </div>
                     <input type="hidden" id="Kyc_Id" value="new" class="Id" />
                     <div class="btn-container">
                     </div>
                  </div>
                  <div class="input_div_group pan_kyc_input_div_group" >
                     <div class="input_div ">
                        <label for="">Document Type</label><br/>
                        <select name="Document type" id="Kyc_documentType__c" class="Kyc_documentType__c">
                           <option value="Pan Card">Pan Card</option>
                        </select>
                     </div>
                     <div class="input_div IFSC_input_div" style="display:none">
                        <label for="">IFSC</label><br/>
                        <input class="input" type="text" name="" id="Kyc_ifsc" />
                     </div>
                     <div class="input_div Passport_exp_input_div" style="display:none">
                        <label for="Kyc_nameOnDocument__c">Expiry date</label><br/>
                        <input class="input" type="text" name="" id="" />
                     </div>
                     <div class="input_div">
                        <label for="Kyc_nameOnDocument__c">Name as on Document</label><br/>
                        <input class="input" type="text" name="" id="Kyc_nameOnDocument__c" />
                     </div>
                     <div class="input_div">
                        <label for="Kyc_documentNumber__c">Document no</label><br/>
                        <input class="input" type="text" name="" id="Kyc_documentNumber__c" />
                     </div>
                     <div class=" address">
                        <label for="Kyc_remarks__c">Remarks if any</label><br/>
                        <input type="text" name="" id="Kyc_remarks__c" class="input" cols="30" rows="10" />
                     </div>
                     <input type="hidden" id="Kyc_Id" value="new" class="Id" />
                     <div class="btn-container">
                     </div>
                  </div>
                  <div class="btn-container_prevNext">
                     <div class="button_container">
                        <button class="previousbtn" data-goto='family_section'>Previous</button>
                     </div>
                     <div class="button_container">
                        <button class="nextbtn" data-goto='education_section'>Next</button>
                     </div>
                  </div>
               </form>
            </section>
            <section class="form_div family_section ">
               <form action="" class="form family_form">
                  <div class="btn-container">
                     <div class="button_container">
                        <button class="savebtn">Save</button>
                     </div>
                     <div class="button_container">
                        <button class="addRelation">Add</button>
                     </div>
                  </div>
                  <div class="input_div_group">
                     <div class="input_div ">
                        <label for="">Relation</label><br/>
                        <select name="Relation" id="Fi_relation">
                           <option value="Father">Father</option>
                           <option value="Mother">Mother</option>
                           <option value="Spouse">Spouse</option>
                           <option value="Son">Son</option>
                           <option value="Daughter">Daughter</option>
                        </select>
                     </div>
                     <div class="input_div">
                        <label for="">FirstName</label><br/>
                        <input class="input" type="text" name="" id="Fi_firstName" />
                     </div>
                     <div class="input_div">
                        <label for="">MiddleName</label><br/>
                        <input class="input" type="text" name="" id="Fi_middleName" />
                     </div>
                     <div class="input_div">
                        <label for="">LastName</label><br/>
                        <input class="input" type="text" name="" id="Fi_lastName" />
                     </div>
                     <div class="input_div">
                        <label for="">Date of Birth</label><br/>
                        <input class="input" type="date" name="" id="Fi_dob" />
                     </div>
                     <input class="input" type="hidden" name="" id="Fi_id" value="new" />
                     <div class="btn-container">
                        <div class="button_container">
                           <button class="deletebtn"><i class="fa-solid fa-trash" ></i></button>
                        </div>
                     </div>
                  </div>
                  <div class="btn-container_prevNext">
                     <div class="button_container">
                        <button class="previousbtn" data-goto='employee_section'>Previous</button>
                     </div>
                     <div class="button_container">
                        <button class="nextbtn" data-goto='kyc_section'>Next</button>
                     </div>
                  </div>
               </form>
            </section>
            <section class="form_div education_section">
               <form action="" class="form education_form">
                  <div class="btn-container">
                     <div class="button_container">
                        <button class="savebtn">Save</button>
                     </div>
                     <div class="button_container">
                        <button class="addEducation">Add</button>
                     </div>
                  </div>
                  <div class="input_div_group">
                     <div class="input_div ">
                        <label for="educationLevel"> Education Level</label>
                        <select name="educationLevel" id="EQ_educationalLevel__c" class="EQ_educationalLevel__c" >
                           <option value="10th">10th</option>
                           <option value="12th">12th</option>
                           <option value="Graduation">Graduation</option>
                           <option value="Post-Graduation">Post-Graduation</option>
                           <option value="Other">Other</option>
                        </select>
                     </div>
                     <div class="input_div twelth" style="display:none">
                        <label for="">Branch</label><br/>
                        <select name="" id="EQ_branchTwelth__c">
                           <option value=""> </option>
                           <option value="Science">Science</option>
                           <option value="Commerce">Commerce</option>
                           <option value="Arts">Arts</option>
                        </select>
                     </div>
                     <div class="input_div graduation" style="display:none">
                        <label for="">Degree</label><br/>
                        <select name="" id="EQ_degree__c">
                           <option value=""> </option>
                           <option value="Bachelor Of Engineering">Bachelor Of Engineering</option>
                           <option value="Bachelor Of Technology">Bachelor Of Technology</option>
                           <option value="Bachelor Of Computer Applications">Bachelor Of Computer Applications</option>
                           <option value="Bachelor Of Science">Bachelor Of Science</option>
                           <option value="Other">Other</option>
                        </select>
                        <input class="input" type="text" id="EQ_degree__c" style="display:none"/>
                     </div>
                     <div class="input_div postgraduation" style="display:none">
                        <label for="">Degree</label><br/>
                        <select name="" id="EQ_postGradDegree__c">
                           <option value=""> </option>
                           <option value="Master Of Engineering">Master Of Engineering</option>
                           <option value="Master Of Technology">Master Of Technology</option>
                           <option value="Master Of Computer Applications">Master Of Computer Applications</option>
                           <option value="Master Of Science">Master Of Science</option>
                           <option value="Other">Other</option>
                        </select>
                        <input class="input" type="text" id="EQ_postGradDegree__c" style="display:none"/>
                     </div>
                     <div class="input_div specialisation" style="display:none">
                        <label for="">Specialisation</label><br/>
                        <input class="input" type="text" id="EQ_specialisation__c"/>
                     </div>
                     <div class="input_div">
                        <label for="">Board / University</label><br/>
                        <input  class="input" type="text" name="" id="EQ_boardOrUniversity__c"/>
                     </div>
                     <div class="input_div">
                        <label for="">School / College Name</label><br/>
                        <input  class="input" type="text" name="" id="EQ_schoolOrCollegeName__c"/>
                     </div>
                     <div class="input_div">
                        <label for="">Year of Passing</label><br/>
                        <input  class="input" type="text" name="" id="EQ_yearOfPassing__c"/>
                     </div>
                     <div class="input_div">
                        <label for="">GPA/Percentage</label><br/>
                        <select name="marksType" id="EQ_marksType__c">
                           <option value="CGPA">CGPA</option>
                           <option value="Percentage">Percentage</option>
                        </select>
                     </div>
                     <div class="input_div">
                        <label for="">Marks</label><br/>
                        <input  class="input" type="text" name="" id="EQ_percentageMarks__c"/>
                     </div>
                     <input type="hidden" id="EQId" value="new" class="EQId input" />
                     <div class="btn-container">
                        <div class="button_container">
                           <button class="deletebtn"><i class="fa-solid fa-trash"></i></button>
                        </div>
                     </div>
                  </div>
                  <div class="btn-container_prevNext">
                     <div class="button_container">
                        <button class="previousbtn" data-goto='kyc_section'>Previous</button>
                     </div>
                     <div class="button_container">
                        <button class="nextbtn" data-goto='workexp_section'>Next</button>
                     </div>
                  </div>
               </form>
            </section>
            <section class="form_div workexp_section">
               <form action="" class="form workexp_form">
                  <div class="btn-container">
                     <div class="button_container">
                        <button class="savebtn">Save</button>
                     </div>
                     <div class="button_container">
                        <button class="addWorkexp">Add</button>
                     </div>
                  </div>
                  <div class="input_div_group">
                     <div class="input_div ">
                        <label for="">Organisation Name</label><br/>
                        <input class="input" type="text" name="" placeholder="Ex: ABC Company" id="WE_orgName" />
                     </div>
                     <div class="input_div">
                        <label for="">Designation while leaving</label><br/>
                        <input class="input" type="text" name="" placeholder="Ex: Senior Software Engineer" id="WE_des" />
                     </div>
                     <div class="input_div">
                        <label for="">From</label><br/>
                        <input class="input" type="date" name="" placeholder="Ex: 20/8/2022 (FORMAT:dd/mm/yyyy)" id="WE_from" />
                     </div>
                     <div class="input_div">
                        <label for="">To</label><br/>
                        <input class="input" type="date" name="" placeholder="Ex: 20/11/2023 (FORMAT:dd/mm/yyyy)" id="WE_to" />
                     </div>
                     <div class="input_div">
                        <label for="">Reason for leaving</label><br/>
                        <input class="input" type="text" name="" id="WE_reason" />
                     </div>
                     <input class="input" type="hidden" name="" id="WE_id" value="new" />
                     <div class="btn-container">
                        <div class="button_container">
                           <button class="deletebtn"><i class="fa-solid fa-trash" ></i></button>
                        </div>
                     </div>
                  </div>
                  <div class="btn-container_prevNext">
                     <div class="button_container">
                        <button class="previousbtn" data-goto='education_section'>Previous</button>
                     </div>
                     <div class="button_container">
                        <button class="nextbtn" data-goto='checklist_section'>Next</button>
                     </div>
                  </div>
               </form>
            </section>
            <section class="form_div checklist_section">
               <form action="" class="document_checklist">
                  <table class="document_checklist_table">
                     <tr>
                        <th>Document</th>
                        <th>Availability</th>
                     </tr>
                     <tr>
                        <td>1. Updated resume / Curriculum Vitae (C.V.)</td>
                        <td>
                           <input type="checkbox" name="resume_yes" id="resume" />
                        </td>
                     </tr>
                     <tr>
                        <td>2. 6 additional Passport size photographs(Self) with Employee Code and Full name written on the reverse</td>
                        <td>
                           <input type="checkbox" name="photo_yes" id="photo" />
                        </td>
                     </tr>
                     <tr>
                        <td>3.  Photocopy of all Educational Certificates as mentioned in the section “Educational
                           Qualification”in the Employee Joining form
                        </td>
                        <td>
                           <input type="checkbox" name="educational_certificates" id="edu_certificates"/>
                        </td>
                     </tr>
                     <tr>
                        <td>4. Salary slips of previous company (last 2 months) – if applicable (Original)</td>
                        <td><input type="checkbox" name="salary_slip" id="salary_slip"/></td>
                     </tr>
                     <tr>
                        <td>5. PAN Card Copy (Self Attested) with Full Name, Employee Code, Phone/Mobile 
                           number
                        </td>
                        <td><input type="checkbox" name="pancard" id="pancard"/></td>
                     </tr>
                     <tr>
                        <td>6. Proof of Address and Photo Identification Proof - Voter’s ID Card / Driving License / 
                           Passport Copy / Aadhar Card Copy
                        </td>
                        <td><input type="checkbox" name="address_proof" id="address_proof"/></td>
                     </tr>
                     <tr>
                        <td>7. Provident Fund Nomination and Declaration Form (Form 2) duly filled</td>
                        <td><input type="checkbox" name="provident_fund" id="provident_fund"/></td>
                     </tr>
                     <tr>
                        <td>8. Gratuity Nomination Form (Form F) duly filled * pre-filled sample copy enclosed</td>
                        <td><input type="checkbox" name="gratuity_form" id="gratuity_form"/></td>
                     </tr>
                     <tr>
                        <td>9. Signed Acknowledged copy of the Offer Letter / Appointment letter</td>
                        <td><input type="checkbox" name="experience_letter" id="offer_letter"/></td>
                     </tr>
                     <tr>
                        <td>10.  Previous Employer Relieving and Experience Letter</td>
                        <td><input type="checkbox" name="experience_letter" id="experience_letter"/></td>
                     </tr>
                     <tr>
                        <td>11. Bank Statement – 6 months (Original)</td>
                        <td> <input type="checkbox" name="bank_statement" id="bank_statement"/></td>
                     </tr>
                     <tr>
                        <td>12. Blood Group Report (Original)</td>
                        <td> <input type="checkbox" name="bloodgroup_report" id="bloodgroup_report"/></td>
                     </tr>
                     <tr>
                        <td>13. Code of Conduct</td>
                        <td>
                           <input type="checkbox" name="code_of_conduct" id="code_of_conduct" />
                        </td>
                     </tr>
                  </table>
                  <div class="button_container">
                     <button type="submit" class="savebtn checklistSaveBtn">Save</button>
                  </div>
                  <div class="btn-container_prevNext">
                    <div class="button_container">
                       <button class="previousbtn" data-goto='workexp_section'>Previous</button>
                    </div>
                    <div class="button_container">
                       <button class="nextbtn" data-goto='preview_section'>Next</button>
                    </div>
                 </div>
                  <!-- <div class="btn-container_prevNext">
                     <div class="button_container">
                        <button class="previousbtn" data-goto='workexp_section'>Previous</button>
                     </div>
                     <div class="button_container">
                        <button class="nextbtn" data-goto='submission_section'>Next</button>
                     </div>
                  </div> -->
               </form>
            </section>
            <section class="form_div preview_section">
             <form class="form empinfo_preview_form">

             </form>
             <form action="" class="form familyinfo_preview_form"></form>
             <form action="" class="form kycinfo_preview_form"></form>
             <form action="" class="form eduinfo_preview_form"></form>
             <form action="" class="form workexp_preview_form"></form>
             <form action="" class="form acknowledgement_form"></form>


            </section>
            <section class="form_div submission_section">
               <form class="form submission_form">
                  <div class="left">
                     <p class="error_count">0</p>
                     <p class="count_span">ERRORS</p>
                  </div>
                  <div class="middle">
                     <button class="submitbtn">Finalize</button>
                  </div>
                  <div class="right">
                     <p class="warning_count">2</p>
                     <p class="count_span">WARNINGS</p>
                  </div>
                  <div class="errorContents">
                  </div>
               </form>
            </section>
         </div>
         <script>
            // getting employee id from the url
            let params = new URLSearchParams(document.location.search);
            const empId = params.get("id");
            
            // Date functions 
            
            const date = new Date();
            console.log(date);
            
            function hello(h) {
                let params = new URLSearchParams(document.location.search);
                return params.get(h);
            }
            console.log(empId);
            //refresh button logic
            document.querySelector('.refresh-btn').addEventListener('click', (e) => {
                location.reload();
            });
            // changing in the section through sidebar
            let activeMenuSection = 'employee_section';
            let isInputChanged = false;
            const changeSection=(moveTo)=>{
                document.querySelectorAll('section').forEach((e) => {
                    if (e.classList.contains('active')) {
                        e.classList.remove('active');
                    }
                });
                activeMenuSection=moveTo;
                document.querySelector(`.${moveTo}`).classList.add('active');
            }
            // const sidebarMenu = document.querySelector('.menu');
            // sidebarMenu.addEventListener('click', (e) => {
            //     const target = e.target.closest('li');
            //     activeMenuSection =  target.dataset.goto;
            //     if(isInputChanged == true)
            //     {
            //         generateErrorMsg(' Please consider saving your changes before navigating to another section to ensure your progress is preserved.','warning');
            //     }
            //     console.log('the active section rn is '+activeMenuSection);
            //     document.querySelectorAll('section').forEach((e) => {
            //         if (e.classList.contains('active')) {
            //             e.classList.remove('active');
            //         }
            //     })
            //     document.querySelector(`.${target.dataset.goto}`).classList.add('active');
            //     isInputChanged=false;
            //     const menuOptions = document.querySelectorAll('.menu_options');
            //     menuOptions.forEach((e) => {
            //         if (e.classList.contains('sidebar_active')) {
            //             e.classList.remove('sidebar_active');
            //         }
            //     });
            //     target.classList.add('sidebar_active');
            // });
            //removing the mailing input div
            const mailingCheckbox = document.querySelector('.mailing_checkbox');
            mailingCheckbox.addEventListener('click', (e) => {
                    const mailingInfoDiv = document.querySelectorAll('.mailing_div');
                    mailingInfoDiv.forEach((e) => {
                        if (e.style.display == 'none') {
                            e.style.display = 'block';
                        } else {
                            e.style.display = 'none';
                        }
                    })
                })
                // adding new key input class="input" block
            const addNewKyc = document.querySelector('.add');
            addNewKyc.addEventListener('click', (e) => {
                e.preventDefault();
                const html = `
                <div class="input_div_group" data-count="1">
                <div class="input_div ">
                    <label for="">Document Type</label><br/>
                    <select name="Document type" id="Kyc_documentType__c" class="Kyc_documentType__c">
                                <!-- <option value="Aadhar Card">Aadhar Card</option> -->
                                <option value="Voter Card">Voter Card</option>
                                <option value="Bank Account (ICICI)">Bank Account (ICICI)</option>
                                <!-- <option value="Pan Card">Pan Card</option> -->
                                <option value="ESIC Card">ESIC Card</option>
                                <option value="Ration Card">Ration Card</option>
                                <!-- <option value="Passport">Passport</option> -->
                                <option value="UAN">UAN</option>
                            </select>
                </div>
                <div class="input_div IFSC_input_div" style="display:none">
                    <label for="">IFSC</label><br/>
                    <input class="input" type="text" name="" id="Kyc_ifscCode" />
                </div>
                <div class="input_div Passport_exp_input_div" style="display:none">
                    <label for="">Expiry date</label><br/>
                    <input class="input" type="text" name="" id="Kyc_expDate" />
                </div>
                <div class="input_div">
                    <label for="Kyc_nameOnDocument__c">Name as on Document</label><br/>
                    <input class="input" type="text" name="" id="Kyc_nameOnDocument__c" />
                </div>
                <div class="input_div">
                    <label for="Kyc_documentNumber__c">Document no</label><br/>
                    <input class="input" type="text" name="" id="Kyc_documentNumber__c" />
                </div>
                <div class=" address">
                    <label for="Kyc_remarks__c">Remarks if any</label><br/>
                    <input type="text" name="" id="Kyc_remarks__c" class="input" cols="30" rows="10" />
                </div>
                <input type="hidden" id="Kyc_Id" value="new" class="Id" />
                <div class="btn-container">
                    <div class="button_container">
                        <button class="deletebtn"><i class="fa-solid fa-trash" ></i></button>
                    </div>
                </div>
            </div>
                `;
                const parent = document.querySelector('.kyc_form');
                parent.firstElementChild.insertAdjacentHTML("afterend", html);
            });
            // adding new education block
            const addNewEducation = document.querySelector('.addEducation');
            addNewEducation.addEventListener('click', (e) => {
                e.preventDefault();
                const html = `<div class="input_div_group">
                    <div class="input_div ">
                            <label for="educationLevel"> Education Level</label>
                            <select name="educationLevel" id="EQ_educationalLevel__c" class="EQ_educationalLevel__c" >
                                <option value="10th">10th</option>
                                <option value="12th">12th</option>
                                <option value="Graduation">Graduation</option>
                                <option value="Post-Graduation">Post-Graduation</option>
                                <option value="Other">Other</option>
                            </select>
                        </div>
                        <div class="input_div twelth" style="display:none">
                            <label for="">Branch</label><br/>
                            <select name="" id="EQ_branchTwelth__c">
                                <option value=""> </option>
                                <option value="Science">Science</option>
                                <option value="Commerce">Commerce</option>
                                <option value="Arts">Arts</option>
                            </select>
                        </div>
                        <div class="input_div graduation" style="display:none">
                            <label for="">Degree</label><br/>
                            <select name="" id="EQ_degree__c">
                                <option value=""> </option>
                                <option value="Bachelor Of Engineering">Bachelor Of Engineering</option>
                                <option value="Bachelor Of Technology">Bachelor Of Technology</option>
                                <option value="Bachelor Of Computer Applications">Bachelor Of Computer Applications</option>
                                <option value="Bachelor Of Science">Bachelor Of Science</option>
                                <option value="Other">Other</option>
                            </select>
                            <div class="input_div specifydegree" style="display:none">
                                <label for=""> Specify your Degree</label><br/>
                                <input class="input" type="text" id="EQ_degree__c"/>
                            </div>
                        </div>
                        <div class="input_div postgraduation" style="display:none">
                            <label for="">Degree</label><br/>
                            <select name="" id="EQ_postGradDegree__c">
                                <option value=""> </option>
                                <option value="Master Of Engineering">Master Of Engineering</option>
                                <option value="Master Of Technology">Master Of Technology</option>
                                <option value="Master Of Computer Applications">Master Of Computer Applications</option>
                                <option value="Master Of Science">Master Of Science</option>
                            </select>
                        </div>
                        <div class="input_div specialisation" style="display:none">
                            <label for="">Specialisation</label><br/>
                            <input class="input" type="text" id="EQ_specialisation__c"/>
                        </div>
                        <div class="input_div">
                            <label for="">Board / University</label><br/>
                            <input  class="input" type="text" name="" id="EQ_boardOrUniversity__c"/>
                        </div>
                        <div class="input_div">
                            <label for="">School / College Name</label><br/>
                            <input  class="input" type="text" name="" id="EQ_schoolOrCollegeName__c"/>
                        </div>
                        <div class="input_div">
                            <label for="">Year of Passing</label><br/>
                            <input  class="input" type="text" name="" id="EQ_yearOfPassing__c"/>
                        </div>
                        <div class="input_div">
                            <label for="">GPA/Percentage</label><br/>
                            <select name="marksType" id="EQ_marksType__c">
                                <option value="CGPA">CGPA</option>
                                <option value="Percentage">Percentage</option>
                            </select>
                        </div>
                        <div class="input_div">
                            <label for="">Marks</label><br/>
                            <input  class="input" type="text" name="" id="EQ_percentageMarks__c"/>
                        </div>
                <input type="hidden" id="EQId" value="new" class="EQId" />
                <div class="btn-container">
                    <div class="button_container">
                        <button class="deletebtn"><i class="fa-solid fa-trash"></i></button>
                    </div>
                    </div>
            </div>`;
            
                const parent = document.querySelector('.education_form');
                parent.firstElementChild.insertAdjacentHTML("afterend", html);
            });
            
            // adding new work exp block
            const addNewWorkexp = document.querySelector('.addWorkexp');
            addNewWorkexp.addEventListener('click', (e) => {
                e.preventDefault();
                const html = `<div class="input_div_group">
                    <div class="input_div ">
                        <label for="">Organisation Name</label><br/>
                        <input class="input" type="text" name="" placeholder="Ex: ABC Company" id="WE_orgName"/>
                    </div>
                    <div class="input_div">
                        <label for="">Designation while leaving</label><br/>
                        <input class="input" type="text" name="" placeholder="Ex: Senior Software Engineer" id="WE_des"/>
                    </div>
                    <div class="input_div">
                        <label for="">From</label><br/>
                        <input class="input" type="date" name="" placeholder="Ex: 20/8/2022 (FORMAT:dd/mm/yyyy)" id="WE_from"/>
                    </div>
                    <div class="input_div">
                        <label for="">To</label><br/>
                        <input class="input" type="date" name="" placeholder="Ex: 20/11/2023 (FORMAT:dd/mm/yyyy)" id="WE_to"/>
                    </div>
                    <div class="input_div">
                        <label for="">Reason for leaving</label><br/>
                        <input class="input" type="text" name="" id="WE_reason"/>
                    </div>
                    <input class="input" type="hidden" name="" id="WE_id"  value="new" />
                    <div class="btn-container">
                        <div class="button_container">
                            <button class="deletebtn"><i class="fa-solid fa-trash" ></i></button>
                        </div>
                    </div>
                </div>`;
                const parent = document.querySelector('.workexp_form');
                parent.firstElementChild.insertAdjacentHTML("afterend", html);
            });
            
            // add new family member
            const addNewFamily = document.querySelector('.addRelation');
            addNewFamily.addEventListener('click', (e) => {
                e.preventDefault();
                const html = `<div class="input_div_group">
                    <div class="input_div ">
                        <label for="">Relation</label><br/>
                        <select name="Relation" id="Fi_relation">
                                    <option value="Father">Father</option>
                                    <option value="Mother">Mother</option>
                                    <option value="Spouse">Spouse</option>
                                    <option value="Son">Son</option>
                                    <option value="Daughter">Daughter</option>
                        </select>
                    </div>
                    <div class="input_div">
                        <label for="">FirstName</label><br/>
                        <input class="input" type="text" name="" id="Fi_firstName">
                    </div>
                    <div class="input_div">
                        <label for="">MiddleName</label><br/>
                        <input class="input" type="text" name="" id="Fi_middleName">
                    </div>
                    <div class="input_div">
                        <label for="">LastName</label><br/>
                        <input class="input" type="text" name="" id="Fi_lastName">
                    </div>
                    <div class="input_div">
                        <label for="">Date of Birth</label><br/>
                        <input class="input" type="date" name="" id="Fi_dob" >
                    </div>
                    <input class="input" type="hidden" name="" id="Fi_id"  value="new" />
                    <div class="btn-container">
                        <div class="button_container">
                            <button class="deletebtn"><i class="fa-solid fa-trash" ></i></button>
                        </div>
                    </div>
                </div>`;
                const parent = document.querySelector('.family_form');
                parent.firstElementChild.insertAdjacentHTML("afterend", html);
            });
            
            
            // save , addd, delete button logic for every single form
            const generateErrorMsg = (message,type)=>
                {
                    let errorMsg = document.querySelector('.error');
                    let messageContainer = document.querySelector('.message');
                    let progressbar = document.querySelector('.progressbar');
                    switch(type)
                    {
                        case 'success':
                            progressbar.style.backgroundColor='green';
                            break;
                        case 'error':
                            progressbar.style.backgroundColor='red';
                            break;
                        case 'warning':
                            progressbar.style.backgroundColor='orange';
                            break;
                    }
                    errorMsg.innerHTML='';
                    errorMsg.innerHTML=message;
                    progressbar.style.animationName = 'progressbarAnimation';
                    messageContainer.style.display='flex';
                    setTimeout(() => {
                        messageContainer.style.display='none';
                    }, 5000);
                }
            const regexValidation =(inputString , typeToCheck)=>{
                const pincode = /^[1-9]{1}[0-9]{2}\s{0,1}[0-9]{3}$/;
                const mobileNumber = /^[\+]?[(]?[0-9]{3}[)]?[-\s\.]?[0-9]{3}[-\s\.]?[0-9]{4,6}$/;
                const date = /^(\d{4})-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$/;
                const names = /^[A-Za-z' -]+$/;
                const aadhar = /^\d{12}$/;
                const pan =/^[A-Z]{5}[0-9]{4}[A-Z]$/;
                const year = /^[0-9]{4}/;
            
                switch(typeToCheck)
                {
                    case 'names':
                                console.log('check names')
                                 return names.test(inputString);
                                break;
                    case 'date' :
                                console.log('date check');
                                return date.test(inputString);
                                break;
                    case 'mobileNumber' :
                                        console.log('mobilie check') 
                                        return mobileNumber.test(inputString);
                                        break;
                    case 'pincode' :
                                    console.log('pincode check'); 
                                    return pincode.test(inputString);
                                    break;
                    case 'aadhar': console.log('aadhar check');
                                    return aadhar.test(inputString);
                                    break;
                    case 'pan' : console.log('pan card check');
                                    return pan.test(inputString);
                                break;
                    case 'year' : console.log('year check');
                                return year.test(inputString);
                                break;
                }
            }
            const toggleSaveAndEditButtons = (parent) => {
                parent.querySelector('.editbtn').classList.toggle('disablebtn');
                parent.querySelector('.savebtn').classList.toggle('disablebtn');
            }
            const employeeSaveLogic = document.querySelector('.employee_section');
            employeeSaveLogic.addEventListener('click', (e) => {
                //e.preventDefault()
                if(e.target.type !=='checkbox')
                {
                    e.preventDefault();
                }
                if(e.target.closest('.savebtn'))
                {
                    console.log("hello u r saving emp details");
                    isInputChanged=false;
                    const Emp_firstName__c = document.querySelector('#Emp_firstName__c').value;
                    const Emp_midName__c = document.querySelector('#Emp_midName__c').value;
                    const Emp_lastName__c = document.querySelector('#Emp_lastName__c').value;
                    const Emp_dateOfBirth__c = document.querySelector('#Emp_dateOfBirth__c').value;
                    const Emp_maritalStatus__c = document.querySelector('#Emp_maritalStatus__c').value;
                    const Emp_gender__c = document.querySelector('#Emp_gender__c').value;
                    const Emp_bloodGroup__c = document.querySelector('#Emp_bloodGroup__c').value;
                    const Emp_nationality__c = document.querySelector('#Emp_nationality__c').value;
                    const Emp_emailId__c = document.querySelector('#Emp_emailId__c').value;
                    const Emp_telephone__c = document.querySelector('#Emp_telephone__c').value;
                    const Emp_mobilePhone__c = document.querySelector('#Emp_mobilePhone__c').value;
                    const Emp_tShirtSize__c = document.querySelector('#Emp_tShirtSize__c').value;
                    const Emp_resAddress__c = document.querySelector('#Emp_resAddress__c').value;
                    const Emp_resCity__c = document.querySelector('#Emp_resCity__c').value;
                    const Emp_resState__c = document.querySelector('#Emp_resState__c').value;
                    const Emp_resZipCode__c = document.querySelector('#Emp_resZipCode__c').value;
                    const Emp_foodPref__c = document.querySelector('#Emp_foodPref__c').value;
                    const Emp_lang1__c = document.querySelector('#Emp_lang1__c').value;
                    const Emp_lang1Read__c = document.querySelector('#Emp_lang1Read__c').checked;
                    const Emp_lang1Write__c = document.querySelector('#Emp_lang1Write__c').checked;
                    const Emp_lang1Speak__c = document.querySelector('#Emp_lang1Speak__c').checked;
                    const Emp_lang2__c = document.querySelector('#Emp_lang2__c').value;
                    const Emp_lang2Read__c = document.querySelector('#Emp_lang2Read__c').checked;
                    const Emp_lang2Write__c = document.querySelector('#Emp_lang2Write__c').checked;
                    const Emp_lang2Speak__c = document.querySelector('#Emp_lang2Speak__c').checked;
                    const Emp_lang3__c = document.querySelector('#Emp_lang3__c').value;
                    const Emp_lang3Read__c = document.querySelector('#Emp_lang3Read__c').checked;
                    const Emp_lang3Write__c = document.querySelector('#Emp_lang3Write__c').checked;
                    const Emp_lang3Speak__c = document.querySelector('#Emp_lang3Speak__c').checked;
                    const Emp_commonAddressCheck__c = document.querySelector('#Emp_commonAddressCheck__c').checked;
                    Emp_commAddress__c = document.querySelector('#Emp_commAddress__c').value;
                    let Emp_commCity__c = document.querySelector('#Emp_commCity__c').value;
                    let Emp_commState__c = document.querySelector('#Emp_commState__c').value;
                    let Emp_commZipCode__c = document.querySelector('#Emp_commZipCode__c').value;
                    let Emp_Emergency__c = document.querySelector('#Emp_Emergency__c').value;
                    let Emp_EmergencyContact_Phone__c = document.querySelector('#Emp_EmergencyContact_Phone__c').value;
                    let Emp_EmergencyContact_Relation__c = document.querySelector('#Emp_EmergencyContact_Relation__c').value;
                    const tempDate = new Date(Emp_dateOfBirth__c);
                    let dateDiff = date - tempDate;
                    let ageInYears = Math.floor(dateDiff / (365.25 * 24 * 60 * 60 * 1000));
                    if(!( regexValidation(Emp_firstName__c ,'names') && regexValidation(Emp_midName__c,'names') && regexValidation(Emp_lastName__c,'names') && regexValidation(Emp_Emergency__c,'names')))
                    {
                        generateErrorMsg('invalid name format','error');
                        return;
                    }
                    console.log(Emp_dateOfBirth__c);
                    if(!(regexValidation(Emp_dateOfBirth__c , 'date')))
                    {
                        generateErrorMsg('invalid date format','error');
                        return;
                    }
                    if(!(regexValidation(Emp_mobilePhone__c , 'mobileNumber') && regexValidation(Emp_EmergencyContact_Phone__c , 'mobileNumber')))
                    {
                        generateErrorMsg('invalid Phone Number','error');
                        return;
                    }
                    if(!(regexValidation(Emp_resZipCode__c , 'pincode') && regexValidation(Emp_commZipCode__c , 'pincode')))
                    {
                        console.log(Emp_resZipCode__c);
                        generateErrorMsg('invalid Zipcode','error');
                        return;
                    }
                    if (ageInYears < 18) {
                        console.log(Emp_dateOfBirth__c);
                        generateErrorMsg('age should be more than 18','error')
                        return;
                    }
                    if (Emp_commonAddressCheck__c) {
                        Emp_commAddress__c = Emp_resAddress__c;
                        Emp_commCity__c = Emp_resCity__c;
                        Emp_commState__c = Emp_resState__c;
                        Emp_commZipCode__c = Emp_resZipCode__c;
                    }
                    Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.mainController.saveEmployeefunction}',
                        Emp_firstName__c, Emp_midName__c, Emp_lastName__c,
                        Emp_dateOfBirth__c, Emp_maritalStatus__c,
                        Emp_gender__c, Emp_bloodGroup__c, Emp_nationality__c,
                        Emp_emailId__c, Emp_telephone__c, Emp_mobilePhone__c,
                        Emp_tShirtSize__c, Emp_resAddress__c, Emp_resCity__c,
                        Emp_resState__c, Emp_resZipCode__c, Emp_foodPref__c,
                        Emp_lang1__c, Emp_lang1Read__c, Emp_lang1Write__c,
                        Emp_lang1Speak__c, Emp_lang2__c, Emp_lang2Read__c,
                        Emp_lang2Write__c, Emp_lang2Speak__c, Emp_lang3__c,
                        Emp_lang3Read__c, Emp_lang3Write__c, Emp_lang3Speak__c,
                        empId,
                        function(result, event) {
                            console.log(result);
                        }
                    );
                    Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.mainController.saveCommAddress}',
                        Emp_commonAddressCheck__c, Emp_commAddress__c,
                        Emp_commCity__c, Emp_commState__c, Emp_commZipCode__c,
                        empId,
                        function(result, event) {
                                generateErrorMsg('Employee details have been saved','success')
                        });
                    return;
                }
                if(e.target.closest('.nextbtn'))
                {
                    console.log('next button is clicked in employee')
                    const moveTo = e.target.dataset.goto;
                    console.log('Moving to.')
                    console.log(moveTo)
                    changeSection(moveTo);
                    return;
                }
                if(e.target.closest('input') || e.target.closest('select'))
                {
                    isInputChanged=true;
                    return;
                }
            });
            const kycSaveDeleteEditLogic = document.querySelector('.kyc_form');
            kycSaveDeleteEditLogic.addEventListener('change', (e) => {
            if (e.target.closest('select')) {
                const parent = e.target.closest('.input_div_group');
                const selectTag = parent.querySelector('select');
                console.log(selectTag.value);
                if (selectTag.value == 'Passport') {
                    parent.querySelector('.Passport_exp_input_div').style.display = 'block';
                    parent.querySelector('.IFSC_input_div').style.display = 'none';
                } else if (selectTag.value == 'Bank Account (ICICI)') {
                    parent.querySelector('.IFSC_input_div').style.display = 'block';
                    parent.querySelector('.Passport_exp_input_div').style.display = 'none';
                } else {
                    parent.querySelector('.Passport_exp_input_div').style.display = 'none';
                    parent.querySelector('.IFSC_input_div').style.display = 'none';
                }
                isInputChanged=true;
                console.log('the select is getting changed');
                return;
            }
            if(e.target.closest('input'))
            {
                isInputChanged=true;
                console.log("the input is getting changed");
            }
            });
            kycSaveDeleteEditLogic.addEventListener('click', (e) => {
                e.preventDefault();
                let clearedValidation = true;
                if (e.target.closest('.savebtn')) {
                    isInputChanged=false;
                    let containerArray = [];
                    const allInputDivGroups = kycSaveDeleteEditLogic.querySelectorAll('.input_div_group');
                    allInputDivGroups.forEach((index)=>{
                        const Kyc_documentType__c = index.querySelector("#Kyc_documentType__c").value;
                        const Kyc_nameOnDocument__c = index.querySelector("#Kyc_nameOnDocument__c").value;
                        const Kyc_documentNumber__c = index.querySelector("#Kyc_documentNumber__c").value;
                        const Kyc_remarks__c = index.querySelector("#Kyc_remarks__c").value;
                        const Id = index.querySelector("#Kyc_Id").value;
                        console.log("************************************************");
                        console.log(Kyc_documentType__c+" "+Kyc_documentNumber__c+" "+Kyc_nameOnDocument__c+" "+Kyc_remarks__c);
                        let expDate = null;
                        let ifscCode = null;
                        if(Kyc_documentType__c === 'Passport')
                        {
                            expDate = index.querySelector('#Kyc_expDate').value;
                        }
                        if(Kyc_documentType__c === 'Bank Account (ICICI)' )
                        {
                            ifscCode = index.querySelector('#Kyc_ifscCode').value;
                        }
                        if( Kyc_nameOnDocument__c!='' && !(regexValidation(Kyc_nameOnDocument__c,'names')))
                        {
                            clearedValidation=false;
                            generateErrorMsg('enter valid name on document','error');
                            return;
                        }
                        if(Kyc_documentType__c == 'Aadhar Card' && Kyc_documentNumber__c!='' && !(regexValidation(Kyc_documentNumber__c , 'aadhar') ))
                        {
                            clearedValidation=false;
                            generateErrorMsg('incorrect Aadhar number format','error');
                            return;
                        }
                        if( Kyc_documentType__c == 'Pan Card' && Kyc_documentNumber__c!='' &&  !(regexValidation(Kyc_documentNumber__c,'pan')) )
                        {
                            clearedValidation=false;
                            generateErrorMsg('incorrect Pan number format', 'error');
                            return;
                        }
                        let obj;
                        if(Id === 'new')
                        {
                            if(Kyc_documentType__c === 'Passport')
                            {
                                obj ={
                                    Kyc_documentType__c ,
                                    Kyc_nameOnDocument__c,
                                    Kyc_documentNumber__c,
                                    Kyc_remarks__c,
                                    Kyc_expDate__c:expDate,
                                    KycToEmp__c:empId
                                }
                            }
                            if(Kyc_documentType__c == 'Bank Account (ICICI)' )
                            {
                                obj ={
                                    Kyc_documentType__c ,
                                    Kyc_nameOnDocument__c,
                                    Kyc_documentNumber__c,
                                    Kyc_remarks__c,
                                    Kyc_ifscCode__c:ifscCode,
                                    KycToEmp__c:empId
                                }
                            }
                            else
                            {
                                obj ={
                                    Kyc_documentType__c ,
                                    Kyc_nameOnDocument__c,
                                    Kyc_documentNumber__c,
                                    Kyc_remarks__c,
                                    KycToEmp__c:empId
                                }
                            }
                        }
                        else
                        {   
                            if(Kyc_documentType__c === 'Passport')
                            {
                                obj ={
                                    Id:Id,
                                    Kyc_documentType__c ,
                                    Kyc_nameOnDocument__c,
                                    Kyc_documentNumber__c,
                                    Kyc_remarks__c,
                                    Kyc_expDate__c:expDate,
                                    KycToEmp__c:empId
                                }
                            }
                            if(Kyc_documentType__c == 'Bank Account (ICICI)' )
                            {
                                obj ={
                                    Id:Id,
                                    Kyc_documentType__c ,
                                    Kyc_nameOnDocument__c,
                                    Kyc_documentNumber__c,
                                    Kyc_remarks__c,
                                    Kyc_ifscCode__c:ifscCode,
                                    KycToEmp__c:empId
                                }
                            }
                            else
                            {
                                obj ={
                                    Id,
                                    Kyc_documentType__c ,
                                    Kyc_nameOnDocument__c,
                                    Kyc_documentNumber__c,
                                    Kyc_remarks__c,
                                    KycToEmp__c:empId
                                }
                            }
                        }
                        containerArray.push(obj);
                    });
                    const jsonFormat = JSON.stringify(containerArray);
                    if(clearedValidation)
                    {
                        Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.mainController.insertUpdateKycBulk}',
                        jsonFormat,
                        function(result, event) {
                            if(event.statusCode == 200)
                            {
                                fetchKycInfo();
                                generateErrorMsg(` Your data has been saved successfully 🎉`,'success');
                            }   
                            else
                            {
                                generateErrorMsg(`Oops! 😬 Your data wasn't saved. Please try again or reach out to the admin for assistance🚀`,'error');
                            }
                        });
                    }
                    return;
                }
                if (e.target.closest('.deletebtn')) {
                    const parent = e.target.closest('.input_div_group');
                    const Id = parent.querySelector("#Kyc_Id").value;
                    if (Id != null) {
                        Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.mainController.deleteKyc}', Id,
                            function(result, event) {
                                console.log(result);
                            }
                        );
                    }
                    parent.remove();
                    return;
                }
                if(e.target.closest('.nextbtn'))
                {
                    if(isInputChanged)
                    {
                        generateErrorMsg('please save the details first before going to next page','warning');
                        return;
                    }
                    const moveTo = e.target.dataset.goto;
                    changeSection(moveTo);
                    console.log("u clicked on next btn");
                    return;
                }
                if(e.target.closest('.previousbtn'))
                {
                    if(isInputChanged)
                    {
                        generateErrorMsg('please save the details first before going to next page','warning');
                        return;
                    }
                    const moveTo = e.target.dataset.goto;
                    changeSection(moveTo);
                    console.log('u cliedk on prvious btn');
                    return;
                }
                if(e.target.closest('input') || e.target.closest('select'))
                {
                    isInputChanged=true;
                    return;
                }
            });
            
            //logic to save, update and delete workExpData
            const workExpSaveEditDeleteLogic = document.querySelector('.workexp_form');
            workExpSaveEditDeleteLogic.addEventListener('click', (e) => {
                if (e.target.type !== 'date') {
                    e.preventDefault();
                }
                if (e.target.closest('.savebtn')) {
                    isInputChanged=false;
                    const containerArray=[];
                    const AllinputDivGroups = workExpSaveEditDeleteLogic.querySelectorAll('.input_div_group');
                    AllinputDivGroups.forEach((index)=>{
                        let organisationName = index.querySelector("#WE_orgName").value;
                        let designation = index.querySelector("#WE_des").value;
                        let startDate = index.querySelector("#WE_from").value;
                        let endDate = index.querySelector("#WE_to").value;
                        let reason = index.querySelector("#WE_reason").value;
                        let recordId = index.querySelector("#WE_id").value;
                        var dateObj1 = new Date(startDate);
                        var dateObj2 = new Date(endDate);
                        var totalExp = (dateObj2-dateObj1)/(1000 * 60 * 60 * 24 * 365.25);
                        console.log(totalExp);
                        console.log('*********************************************');
                        let obj;
                        if(recordId == 'new')
                        {
                            obj={
                                WE_organizationName__c:organisationName,
                                WE_designationWhenLeaving__c:designation,
                                WE_from__c:startDate,
                                WE_to__c:endDate,
                                WE_reasonForLeaving__c:reason,
                                WE_duration__c:totalExp,
                                WeToEmp__c :empId
                            }
                        }
                        else
                        {
                            obj={
                                Id:recordId,
                                WE_organizationName__c:organisationName,
                                WE_designationWhenLeaving__c:designation,
                                WE_from__c:startDate,
                                WE_to__c:endDate,
                                WE_duration__c:totalExp,
                                WE_reasonForLeaving__c:reason,
                                WeToEmp__c :empId
                            }
                        }
                        containerArray.push(obj);
                    });
                    const jsonFormat = JSON.stringify(containerArray);
                    Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.mainController.insertUpdateWorkDataBulk}',
                        jsonFormat,
                        function(result, event) {
                        if(event.statusCode == 200)
                        {
                            fetchWorkExpInfo();
                            generateErrorMsg(` Your data has been saved successfully 🎉`,'success');
                        }   
                        else
                        {
                            generateErrorMsg(`Oops! 😬 Your data wasn't saved. Please try again or reach out to the admin for assistance🚀`,'error');
                        }
                    });
                    return;
                }
                if (e.target.closest('.deletebtn')) {
                    const parent = e.target.closest('.input_div_group');
                    let recordId = parent.querySelector("#WE_id");
                    if (!(recordId.value == 'new')) {
                        Visualforce.remoting.Manager.invokeAction(
                            '{!$RemoteAction.mainController.deleteWorkExpData}',
                            recordId.value, empId,
                            function(result, event) {});
                    }
                    parent.remove();
                    return;
                }
                if(e.target.closest('.previousbtn'))
                {
                    moveTo = e.target.dataset.goto;
                    changeSection(moveTo);
                    return;
                }
                if(e.target.closest('.nextbtn')){
                    moveTo = e.target.dataset.goto;
                    console.log(moveTo);
                    changeSection(moveTo);
                    return;
                }
                if(e.target.closest('input') || target.closest('select'))
                {
                    isInputChanged=true;
                    return;
                }
            });
            
            const educationSaveDeleteEditLogic = document.querySelector('.education_form');
            educationSaveDeleteEditLogic.addEventListener('change', (e) => {
            if (e.target.closest('select')) {
                const parent = e.target.closest('.input_div_group');
                const selectTag = parent.querySelector('select');
                console.log(selectTag.value);
                if (selectTag.value == '12th') {
                    parent.querySelector('.twelth').style.display = 'block';
                    parent.querySelector('.specialisation').style.display = 'none';
                    parent.querySelector('.postgraduation').style.display = 'none';
                    parent.querySelector('.graduation').style.display = 'none';
            
                } else if (selectTag.value == 'Graduation') {
                    parent.querySelector('.twelth').style.display = 'none';
                    parent.querySelector('.specialisation').style.display = 'block';
                    parent.querySelector('.postgraduation').style.display = 'none';
                    parent.querySelector('.graduation').style.display = 'block';
                    
            
                } else if (selectTag.value == 'Post-Graduation'){
                    parent.querySelector('.twelth').style.display = 'none';
                    parent.querySelector('.specialisation').style.display = 'block';
                    parent.querySelector('.postgraduation').style.display = 'block';
                    parent.querySelector('.graduation').style.display = 'none';
            
                }else if (selectTag.value == "Other"){
                    parent.querySelector('.twelth').style.display = 'none';
                    parent.querySelector('.specialisation').style.display = 'block';
                    parent.querySelector('.postgraduation').style.display = 'none';
                    parent.querySelector('.graduation').style.display = 'none';
                }
                else{
                    parent.querySelector('.twelth').style.display = 'none';
                    parent.querySelector('.specialisation').style.display = 'none';
                    parent.querySelector('.postgraduation').style.display = 'none';
                    parent.querySelector('.graduation').style.display = 'none';
                }
                }
            
            });
            
            educationSaveDeleteEditLogic.addEventListener('click', (e) => {
                e.preventDefault();
                let clearedValidation=true;
                if (e.target.closest('.savebtn')) {
                    isInputChanged=false;
                    const AllInputDivGroups = educationSaveDeleteEditLogic.querySelectorAll('.input_div_group');
                    const arrayOfAllEducationInputDivGroups=[];
                    AllInputDivGroups.forEach((record)=>{
                        console.log(record);
                        const EQ_educationalLevel__c = record.querySelector("#EQ_educationalLevel__c").value;
                        const EQ_degree__c = record.querySelector("#EQ_degree__c").value;
                        const EQ_schoolOrCollegeName__c = record.querySelector("#EQ_schoolOrCollegeName__c").value;
                        const EQ_boardOrUniversity__c = record.querySelector("#EQ_boardOrUniversity__c").value;
                        const EQ_percentageMarks__c = record.querySelector("#EQ_percentageMarks__c").value;
                        const EQ_yearOfPassing__c = record.querySelector("#EQ_yearOfPassing__c").value;
                        const EQ_branchTwelth__c = record.querySelector('#EQ_branchTwelth__c').value;
                        const EQ_specialisation__c = record.querySelector('#EQ_specialisation__c').value;
                        const EQ_postGradDegree__c = record.querySelector('#EQ_postGradDegree__c').value;
                        const EQ_marksType__c = record.querySelector('#EQ_marksType__c').value;
                        const Id = record.querySelector('#EQId').value;
            
                        if(EQ_marksType__c==='CGPA' &&  Number(EQ_percentageMarks__c) >10)
                        {
                            generateErrorMsg('CGPA Should be in the range of 0-10','error');
                            clearedValidation=false;
                            return;
                        }
                        if(EQ_marksType__c == 'Percentage' && Number(EQ_percentageMarks__c )>100)
                        {
                            generateErrorMsg('percentage should be in the range of 0-100','error');
                            clearedValidation=false;
                            return;
                        }
                        if(!(regexValidation(EQ_yearOfPassing__c,'year')))
                        {
                            generateErrorMsg(`Year should be in 'YYYY' format`,'error');
                            clearedValidation=false
                            return;
                        }
                        let obj;
                        if(Id === 'new')
                        {
                            obj ={
                                EQ_educationalLevel__c,
                                EQ_degree__c,
                                EQ_schoolOrCollegeName__c,
                                EQ_boardOrUniversity__c,
                                EQ_percentageMarks__c,
                                EQ_yearOfPassing__c,
                                EQ_branchTwelth__c,
                                EQ_specialisation__c,
                                EQ_postGradDegree__c,
                                EQ_marksType__c,
                                EqToEmp__c:empId
                            }
                        }
                        else
                        {
                            obj ={
                                Id:Id,
                                EQ_educationalLevel__c,
                                EQ_degree__c,
                                EQ_schoolOrCollegeName__c,
                                EQ_boardOrUniversity__c,
                                EQ_percentageMarks__c,
                                EQ_yearOfPassing__c,
                                EQ_branchTwelth__c,
                                EQ_specialisation__c,
                                EQ_postGradDegree__c,
                                EQ_marksType__c,
                                EqToEmp__c:empId
                            }
                        }
                        arrayOfAllEducationInputDivGroups.push(obj);
                    });
                    const jsonFormat = JSON.stringify(arrayOfAllEducationInputDivGroups);
                    if(clearedValidation)
                    {
                        Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.mainController.saveOrUpdateEducationalDetailBulk}',
                        jsonFormat,       
                        function(result, event) {
                            if(event.statusCode == 200)
                            {
                                fetchEducationalInfo();
                                generateErrorMsg(` Your data has been saved successfully 🎉`,'success');
                            }   
                            else
                            {
                                generateErrorMsg(`Oops! 😬 Your data wasn't saved. Please try again or reach out to the admin for assistance🚀`,'error');
                            }
                        });
                    }
                    return;
                }
                if (e.target.closest('.deletebtn')) {
                    const parent = e.target.closest('.input_div_group');
                    console.log('parent details');
                    console.log(parent);
                    const Id = parent.querySelector("#EQId").value;
            
                    if (Id != null) {
                        Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.mainController.deleteEducationalDetail}',
                            Id,
                            function(result, event) {
                                console.log(result);
                            });
                        parent.remove();
                    }
                    parent.remove();
                    return;
                }
                if(e.target.closest('.previousbtn'))
                {
                    console.log('hello prevois btn')
                    const moveTo = e.target.dataset.goto;
                    changeSection(moveTo);
                    return;
                }
                if(e.target.closest('.nextbtn'))
                {
                    console.log('hello next btn');
                    const moveTo= e.target.dataset.goto;
                    changeSection(moveTo);
                    return;
                }
                if(e.target.closest('input') || target.closest('select'))
                {
                    isInputChanged=true;
                    return;
                }
            });
            const familySaveEditDeleteLogic = document.querySelector('.family_form');
            familySaveEditDeleteLogic.addEventListener('click', (e) => {
                let clearedValidation=true;
                if (e.target.type !== 'date') {
                    e.preventDefault();
                }
                if (e.target.closest('.savebtn')) {
                    isInputChanged=false;
                    const containerArray=[];
                    const inputDivGroups = familySaveEditDeleteLogic.querySelectorAll('.input_div_group');
                    inputDivGroups.forEach((index)=>{
                        console.log('**********************************************');
                        const relation = index.querySelector('#Fi_relation').value;
                        const firstname = index.querySelector('#Fi_firstName').value;
                        const lastname = index.querySelector('#Fi_lastName').value;
                        const middlename = index.querySelector('#Fi_middleName').value;
                        const dob = index.querySelector('#Fi_dob').value;
                        const id = index.querySelector('#Fi_id').value;                         
                        const tempDate = new Date(dob);
                        let dateDiff = date - tempDate;
                        let ageInYears = Math.floor(dateDiff / (365.25 * 24 * 60 * 60 * 1000));
                        if(!(  regexValidation(firstname,'names') && regexValidation(middlename,'names') && regexValidation(lastname,'names') ))
                        {
                            generateErrorMsg(`Data not saved <br> invalid name format in ${relation}`,'error');
                            clearedValidation=false;
                            return;
                        }
                        if( dob!=''  &&   !(regexValidation(dob,'date') )){
                            generateErrorMsg(`invalid date format in ${relation}`,'error');
                            clearedValidation=false;
                            return;
                        }
                        if(ageInYears < 18)
                        {
                            generateErrorMsg(`age is less than 18 in ${relation}`,'error');
                            clearedValidation=false;
                            return;
                        }
                        if(id ==='new')
                        {
                            obj ={
                            Fi_relation__c:relation,
                            Fi_firstName__c:firstname,
                            Fi_middleName__c:middlename,
                            Fi_lastName__c:lastname,
                            Fi_dob__c:dob,
                            EmpToFi__c:empId
                            }
                        }
                        else 
                        {
                            obj ={
                            Id:id,
                            Fi_relation__c:relation,
                            Fi_firstName__c:firstname,
                            Fi_middleName__c:middlename,
                            Fi_lastName__c:lastname,
                            Fi_dob__c:dob,
                            EmpToFi__c:empId
                            }
                        }
                        containerArray.push(obj);
                    })
                    const jsonFormat = JSON.stringify(containerArray);
                    if(clearedValidation)
                    {
                        Visualforce.remoting.Manager.invokeAction(
                         '{!$RemoteAction.mainController.insertUpdateFamilyInfoBulk}',
                            jsonFormat,
                         function(result, event) {
                            console.log(event);
                             if(event.statusCode == 200)
                             {
                                fetchFamilyInfo();
                                generateErrorMsg(` Your data has been saved successfully 🎉`,'success');
                             }
                             else if(event.statusCode != 200){
                                generateErrorMsg(`Oops! 😬 Your data wasn't saved. Please try again or reach out to the admin for assistance🚀`,'error');
                             }
                         });
                    }
                    return;
                }
                if(e.target.closest('.previousbtn'))
                {
                    const moveTo = e.target.dataset.goto;
                    changeSection(moveTo);
                    return;
                }
                if(e.target.closest('.nextbtn'))
                {
                    const moveTo = e.target.dataset.goto;
                    changeSection(moveTo);
                    return;
                }
                if (e.target.closest('.deletebtn')) {
                    const parent = e.target.closest('.input_div_group');
                    const relation = parent.querySelector('#Fi_relation').value;
                    const firstname = parent.querySelector('#Fi_firstName').value;
                    const lastname = parent.querySelector('#Fi_lastName').value;
                    const middlename = parent.querySelector('#Fi_middleName').value;
                    const dob = parent.querySelector('#Fi_dob').value;
                    const id = parent.querySelector('#Fi_id');
                    console.log(relation + " " + firstname + " " + middlename + " " + lastname + " " + dob + " " + id.value);
                    if (!(id.value == 'new')) {
                        console.log(id.value);
                        Visualforce.remoting.Manager.invokeAction(
                            '{!$RemoteAction.mainController.deleteFamilyInfoRecord}',
                            id.value, empId,
                            function(result, event) {});
                    }
                    parent.remove();
                    return;
                }
                if(e.target.closest('input') || target.closest('select'))
                {
                    isInputChanged=true;
                    return;
                }
            });
            
            
            const documentCheckListSaveEditLogic=document.querySelector('.checklist_section');
            documentCheckListSaveEditLogic.addEventListener('click',(e)=>{
                e.preventDefault();
                
                if(e.target.closest('.savebtn'))
                {
                                    console.log('submit document checklist');
                            
                            let isResumeAvailable=document.getElementById('resume').checked;
                        
                        
                            let isPhotoAvailable=document.getElementById('photo').checked;
                        
                        
                            let isEduCertificatesAvailable=document.getElementById('edu_certificates').checked;
                        
                        
                            let isSalarySlipAvailable=document.getElementById('salary_slip').checked;
                            
                        
                            let isPanCardAvailable=document.getElementById('pancard').checked;
                        
                        
                            let isAddressProofAvailable=document.getElementById('address_proof').checked;
                        
                        
                            let isProvidentFormAvailable=document.getElementById('provident_fund').checked;
                        
                        
                            let isGratuityFormAvailable=document.getElementById('gratuity_form').checked;
                        
                        
                            let isOfferLetterAvailable=document.getElementById('offer_letter').checked;
                        
                        
                            let isExperienceLetterAvailable=document.getElementById('experience_letter').checked;
                        
                        
                            let isBankStatementAvailable=document.getElementById('bank_statement').checked;
                        
                        
                            let isBloodGroupAvailable=document.getElementById('bloodgroup_report').checked;
                        
                        
                            let isCodeOfConductAvailable=document.getElementById('code_of_conduct').checked;
                        
                        
                        Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.mainController.saveCheckList}',empId,
                        isResumeAvailable,isPhotoAvailable, isEduCertificatesAvailable,isSalarySlipAvailable,isPanCardAvailable,isAddressProofAvailable,
                        isProvidentFormAvailable,isGratuityFormAvailable,isOfferLetterAvailable,isExperienceLetterAvailable,
                        isBankStatementAvailable,isBloodGroupAvailable,isCodeOfConductAvailable
                        , function(result,event){
                            if(event.statusCode === 200)
                            {
                                fetchDocumentCheckList();
                                generateErrorMsg(` Your data has been saved successfully 🎉`,'success');
                            }
                            else
                            {
                                generateErrorMsg(`Oops! 😬 Your data wasn't saved. Please try again or reach out to the admin for assistance🚀`,'error');
                            }
                        }); 
                    return;
                }
                if(e.target.closest('.previousbtn'))
                {
                    console.log('ljfdgkldfgjbkd')
                    const moveTo =e.target.dataset.goto;
                    changeSection(moveTo);
                    return;
                } 
                if(e.target.closest('.nextbtn'))
                {
                    console.log('hello sdsdf');
                    const moveTo =e.target.dataset.goto;
                    if(moveTo==='preview_section'){
                         displayPreviewPage();
                    }
                    // call fetch preview 
                    changeSection(moveTo);
                    return;
                }  
            });


            const fetchEmployeeInfo = () => {
                let empHtml=``;
                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.mainController.fetchEmployee}', empId,
                    function(result, event) {

                        empHtml=`
                <form action="" class="form emp_form">
                  <div class="input_div">
                     <label for="">First name</label><br/>
                     <input class="input" type="text" name="" id="Emp_firstName__c" />
                  </div>
                  <div class="input_div">
                     <label for="">Middle name</label><br/>
                     <input class="input" type="text" name="" id="Emp_midName__c" />
                  </div>
                  <div class="input_div">
                     <label for="">Last name</label><br/>
                     <input class="input" type="text" name="" id="Emp_lastName__c" />
                  </div>
                  <div class="input_div ">
                     <label for="">Date of Birth</label><br/>
                     <input class="input" type="date" name="" id="Emp_dateOfBirth__c" />
                  </div>
                  <div class="input_div">
                     <label for="">Marital Status</label><br/>
                     <input class="input" type="text" name="" id="Emp_maritalStatus__c" />
                  </div>
                  <div class="input_div">
                     <label for="">Gender</label><br/>
                     <input class="input" type="text" name="" id="Emp_gender__c" />
                  </div>
                  <div class="input_div">
                     <label for="">Blood Group</label><br/>
                     <input class="input" type="text" name="" id="Emp_bloodGroup__c" />
                  </div>
                  <div class="input_div span-2">
                     <label for="">Nationality</label><br/>
                     <input class="input" type="text" name="" id="Emp_nationality__c" />
                  </div>
                  <div class="input_div">
                     <label for="">Email id</label><br/>
                     <input class="input" type="email" name="" id="Emp_emailId__c"  />
                  </div>
                  <div class="input_div">
                     <label for="">Telephone</label><br/>
                     <input class="input" type="text"  name="" id="Emp_telephone__c" />
                  </div>
                  <div class="input_div">
                     <label for="">Mobile</label><br/>
                     <input class="input" type="text" name="" id="Emp_mobilePhone__c" />
                  </div>
                  <div class="input_div">
                     <label for="">T shirt Size</label><br/>
                     <input class="input" type="text" name="" id="Emp_tShirtSize__c" />
                  </div>
                  <div class=" address">
                     <label for="">Residential Address / Permanent Address</label><br/>
                     <input name="" class="input" id="Emp_resAddress__c" cols="30" rows="10" />
                  </div>
                  <div class="input_div">
                     <label for="">City</label><br/>
                     <input class="input" type="text" name="" id="Emp_resCity__c" />
                  </div>
                  <div class="input_div">
                     <label for="">State</label><br/>
                     <input class="input" type="text" name="" id="Emp_resState__c" />
                  </div>
                  <div class="input_div">
                     <label for="">Zipcode</label><br/>
                     <input class="input" type="text" name="" id="Emp_resZipCode__c" />
                  </div>
                  <div class="input_div input_checkbox_div">
                     <div>
                        <input class="input mailing_checkbox" type="checkbox" name="" id="Emp_commonAddressCheck__c" />
                     </div>
                     <label for=""> Residential address same as Mailing address?</label><br/>
                  </div>
                  <div class=" address mailing_div">
                     <label for="">Mailing Address</label><br/>
                     <input name="" class="input" id="Emp_commAddress__c" cols="30" rows="10" />
                  </div>
                  <div class="input_div mailing_div">
                     <label for="">Mailing City</label><br/>
                     <input class="input" type="text" name="" id="Emp_commCity__c" />
                  </div>
                  <div class="input_div mailing_div">
                     <label for="">Mailing State</label><br/>
                     <input class="input" type="text" name="" id="Emp_commState__c" />
                  </div>
                  <div class="input_div mailing_div">
                     <label for="">Mailing Zipcode</label><br/>
                     <input class="input" type="text" name="" id="Emp_commZipCode__c" />
                  </div>
                  <div class="input_div">
                     <label for="">Food Preference</label><br/>
                     <input class="input" type="text" name="" id="Emp_foodPref__c" />
                  </div>
                  <div></div>
                  <div></div>
                  <div class="input_div">
                     <label for="">Language 1</label><br/>
                     <input class="input" type="text" name="" id="Emp_lang1__c" /> <br/>
                     <div class="checkbox">
                        <div>
                           <input class="input" type="checkbox" name="" id="Emp_lang1Read__c" />
                        </div>
                        <label for="">Read</label><br/>
                        <div>
                           <input class="input" type="checkbox" name="" id="Emp_lang1Write__c" />
                        </div>
                        <label for="">Write</label><br/>
                        <div>
                           <input class="input" type="checkbox" name="" id="Emp_lang1Speak__c" />
                        </div>
                        <label for="">Speak</label><br/>
                     </div>
                  </div>
                  <div class="input_div">
                     <label for="">Language 2</label><br/>
                     <input class="input" type="text" name="" id="PEmp_lang2__c" /> <br/>
                     <div class="checkbox">
                        <input class="input" type="checkbox" name="" id="Emp_lang2Read__c" />
                        <label for="">Read</label><br/>
                        <input class="input" type="checkbox" name="" id="Emp_lang2Write__c" />
                        <label for="">Write</label><br/>
                        <input class="input" type="checkbox" name="" id="Emp_lang2Speak__c" />
                        <label for="">Speak</label><br/>
                     </div>
                  </div>
                  <div class="input_div">
                     <label for="">Language 3</label><br/>
                     <input class="input" type="text" name="" id="PEmp_lang3__c" /> <br/>
                     <div class="checkbox">
                        <input class="input" type="checkbox" name="" id="Emp_lang3Read__c" />
                        <label for="">Read</label><br/>
                        <input class="input" type="checkbox" name="" id="Emp_lang3Write__c" />
                        <label for="">Write</label><br/>
                        <input class="input" type="checkbox" name="" id="Emp_lang3Speak__c" />
                        <label for="">Speak</label><br/>
                     </div>
                  </div>
                  <div class="input_div">
                    <label for="">Emergency Contact Name</label><br/>
                    <input class="input" type="text" name="" id="Emp_Emergency__c" />
                 </div>
                 <div class="input_div">
                    <label for="">Emergency Contact Phone</label><br/>
                    <input class="input" type="text" name="" id="Emp_EmergencyContact_Phone__c" />
                 </div>
                 <div class="input_div">
                    <label for="">Emergency Contact Relation</label><br/>
                    <input class="input" type="text" name="" id="Emp_EmergencyContact_Relation__c" />
                 </div>
                  <div class="btn-container_prevNext">
                     <div class="button_container">
                        <button class="previousbtn"  style="opacity:0;">Previous</button>
                     </div>
                     <div class="button_container">
                        <button class="nextbtn" data-goto='family_section'>Next</button>
                     </div>
                  </div>
               </form>
                `;
                        console.log(result);
                        document.getElementById('Emp_firstName__c').value = result.Emp_firstName__c ? result.Emp_firstName__c : '';
                        document.getElementById('Emp_midName__c').value = result.Emp_midName__c ? result.Emp_midName__c : '';
                        document.getElementById('Emp_lastName__c').value = result.Emp_lastName__c ? result.Emp_lastName__c : '';
                        document.getElementById('Emp_dateOfBirth__c').value = result.Emp_dateOfBirth__c ? result.Emp_dateOfBirth__c : '';
                        document.getElementById('Emp_maritalStatus__c').value = result.Emp_maritalStatus__c ? result.Emp_maritalStatus__c : '';
                        document.getElementById('Emp_gender__c').value = result.Emp_gender__c ? result.Emp_gender__c : '';
                        document.getElementById('Emp_bloodGroup__c').value = result.Emp_bloodGroup__c ? result.Emp_bloodGroup__c : '';
                        document.getElementById('Emp_nationality__c').value = result.Emp_nationality__c ? result.Emp_nationality__c : '';
                        document.getElementById('Emp_emailId__c').value = result.Emp_emailId__c ? result.Emp_emailId__c : '';
                        document.getElementById('Emp_telephone__c').value = result.Emp_telephone__c ? result.Emp_telephone__c : '';
                        document.getElementById('Emp_mobilePhone__c').value = result.Emp_mobilePhone__c ? result.Emp_mobilePhone__c : '';
                        document.getElementById('Emp_tShirtSize__c').value = result.Emp_tShirtSize__c ? result.Emp_tShirtSize__c : '';
                        document.getElementById('Emp_resAddress__c').value = result.Emp_resAddress__c ? result.Emp_resAddress__c : '';
                        document.getElementById('Emp_resCity__c').value = result.Emp_resCity__c ? result.Emp_resCity__c : '';
                        document.getElementById('Emp_resState__c').value = result.Emp_resState__c ? result.Emp_resState__c : '';
                        document.getElementById('Emp_resZipCode__c').value = result.Emp_resZipCode__c ? result.Emp_resZipCode__c : '';
                        document.getElementById('Emp_foodPref__c').value = result.Emp_foodPref__c ? result.Emp_foodPref__c : '';
                        document.getElementById('Emp_lang1__c').value = result.Emp_lang1__c ? result.Emp_lang1__c : '';
                        document.getElementById('Emp_lang1Read__c').checked = result.Emp_lang1Read__c;
                        document.getElementById('Emp_lang1Write__c').checked = result.Emp_lang1Write__c;
                        document.getElementById('Emp_lang1Speak__c').checked = result.Emp_lang1Speak__c;
                        document.getElementById('Emp_lang2__c').value = result.Emp_lang2__c ? result.Emp_lang2__c : '';
                        document.getElementById('Emp_lang2Read__c').checked = result.Emp_lang2Read__c;
                        document.getElementById('Emp_lang2Write__c').checked = result.Emp_lang2Write__c;
                        document.getElementById('Emp_lang2Speak__c').checked = result.Emp_lang2Speak__c;
                        document.getElementById('Emp_lang3__c').value = result.Emp_lang3__c ? result.Emp_lang3__c : '';
                        document.getElementById('Emp_lang3Read__c').checked = result.Emp_lang3Read__c;
                        document.getElementById('Emp_lang3Write__c').checked = result.Emp_lang3Write__c;
                        document.getElementById('Emp_lang3Speak__c').checked = result.Emp_lang3Speak__c;
                        document.getElementById('Emp_commonAddressCheck__c').checked = result.Emp_commonAddressCheck__c;
                        document.getElementById('Emp_Emergency__c').value = result.Emp_Emergency__c ? result.Emp_Emergency__c : '';
                        document.getElementById('Emp_EmergencyContact_Phone__c').value = result.Emp_EmergencyContact_Phone__c ? result.Emp_EmergencyContact_Phone__c : '';
                        document.getElementById('Emp_EmergencyContact_Relation__c').value = result.Emp_EmergencyContact_Relation__c ? result.Emp_EmergencyContact_Relation__c: '';
                        if (result.Emp_commonAddressCheck__c) {
                            const mailingInfoDiv = document.querySelectorAll('.mailing_div');
                            mailingInfoDiv.forEach((e) => {
                                e.style.display = 'none';
                            });
                        } else {
                            const mailingInfoDiv = document.querySelectorAll('.mailing_div');
                            mailingInfoDiv.forEach((e) => {
                                e.style.display = 'block';
                            });
                            document.getElementById('Emp_commAddress__c').value = result.Emp_commAddress__c ? result.Emp_commAddress__c : '';
                            document.getElementById('Emp_commCity__c').value = result.Emp_commCity__c ? result.Emp_commCity__c : '';
                            document.getElementById('Emp_commState__c').value = result.Emp_commState__c ? result.Emp_commState__c : '';
                            document.getElementById('Emp_commZipCode__c').value = result.Emp_commZipCode__c ? result.Emp_commZipCode__c : '';
                        }
                    },{escape:true});      
                    
            }
            const fetchFamilyInfo = () => {
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.mainController.getFamilyInfo}',
                    empId,
                    function(result, event) {
                        console.log(result);
                        const parent = document.querySelector('.family_form');
                        parent.querySelectorAll('.input_div_group').forEach((e)=>{e.remove()});
                        result.forEach((index) => {
                            const html = `
                                    <div class="input_div_group">
                            <div class="input_div ">
                                <label for="">Relation</label><br/>
                                <select name="Relation" id="Fi_relation">
                                            <option value="Father" ${index.Fi_relation__c == 'Father' ? 'selected':''}>Father</option>
                                            <option value="Mother" ${index.Fi_relation__c == 'Mother' ? 'selected':''}>Mother</option>
                                            <option value="Spouse" ${index.Fi_relation__c == 'Spouse' ? 'selected':''}>Spouse</option>
                                            <option value="Son"    ${index.Fi_relation__c == 'Son'? 'selected':''}>Son</option>
                                            <option value="Daughter" ${index.Fi_relation__c == 'Daughter'? 'selected':''}>Daughter</option>
                                </select>
                            </div>
                            <div class="input_div">
                                <label for="">FirstName</label><br/>
                                <input class="input" type="text" name="" id="Fi_firstName" value='${index.Fi_firstName__c ? index.Fi_firstName__c: '' }'>
                            </div>
                            <div class="input_div">
                                <label for="">MiddleName</label><br/>
                                <input class="input" type="text" name="" id="Fi_middleName" value='${index.Fi_middleName__c ? index.Fi_middleName__c : ''}'>
                            </div>
                            <div class="input_div">
                                <label for="">LastName</label><br/>
                                <input class="input" type="text" name="" id="Fi_lastName" value='${index.Fi_lastName__c ? index.Fi_lastName__c : '' }'>
                            </div>
                            <div class="input_div">
                                <label for="">Date of Birth</label><br/>
                                <input class="input" type="date" name="" id="Fi_dob" value=${index.Fi_dob__c ? index.Fi_dob__c : ''}>
                            </div>
                            <input class="input" type="hidden" name="" id="Fi_id"  value="${index.Id}" />
                        </div>
                            `;
                            parent.firstElementChild.insertAdjacentHTML("afterend", html);
                            //enableInputFields(parent);
                            return html;
                        });
                    });
            }
            const fetchKycInfo = () => {
                let thereareresults=false;
                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.mainController.fetchKyc}', empId,
                    function(result, event) {
                        const parent = document.querySelector('.kyc_form');
                        const allInputDivGroups = parent.querySelectorAll('.input_div_group');
                        allInputDivGroups.forEach((e)=>{
            
                            const docType = e.querySelector('#Kyc_documentType__c').value;
                            if(docType ==='Passport' || docType === 'Aadhar Card' || docType === 'Pan Card')
                            {
            
                            }
                            else
                            {
                                e.remove();
                            }
                        })
                        result.forEach((e) => {
                            thereareresults=true;
                            if(e.Kyc_documentType__c == 'Aadhar Card'){
                                const parent = document.querySelector('.aadhar_kyc_input_div_group');
                                console.log(parent);
                                console.log(parent.querySelector('#Kyc_documentType__c'));
                                parent.querySelector('#Kyc_documentType__c').value=e.Kyc_documentType__c ? e.Kyc_documentType__c:'';
                                parent.querySelector('#Kyc_nameOnDocument__c').value= e.Kyc_nameOnDocument__c ? e.Kyc_nameOnDocument__c:'';
                                parent.querySelector('#Kyc_documentNumber__c').value =e.Kyc_documentNumber__c ? e.Kyc_documentNumber__c:'';
                                parent.querySelector('#Kyc_remarks__c').value = e.Kyc_remarks__c ? e.Kyc_remarks__c : '';
                                parent.querySelector('#Kyc_Id').value = e.Id;
                            }
                            else if (e.Kyc_documentType__c == 'Pan Card'){
                                const parent = document.querySelector('.pan_kyc_input_div_group');
                                parent.querySelector('#Kyc_documentType__c').value=e.Kyc_documentType__c ? e.Kyc_documentType__c:'';
                                parent.querySelector('#Kyc_nameOnDocument__c').value= e.Kyc_nameOnDocument__c ? e.Kyc_nameOnDocument__c:'';
                                parent.querySelector('#Kyc_documentNumber__c').value =e.Kyc_documentNumber__c ? e.Kyc_documentNumber__c:'';
                                parent.querySelector('#Kyc_remarks__c').value = e.Kyc_remarks__c ? e.Kyc_remarks__c:'';
                                parent.querySelector('#Kyc_Id').value = e.Id;
                            }
                            else if(e.Kyc_documentType__c == 'Passport')
                            {
                                const parent = document.querySelector('.passport_kyc_input_div_group');
                                parent.querySelector('#Kyc_documentType__c').value=e.Kyc_documentType__c ? e.Kyc_documentType__c:'';
                                parent.querySelector('#Kyc_nameOnDocument__c').value= e.Kyc_nameOnDocument__c ? e.Kyc_nameOnDocument__c:'';
                                parent.querySelector('#Kyc_documentNumber__c').value =e.Kyc_documentNumber__c ? e.Kyc_documentNumber__c:'';
                                parent.querySelector('#Kyc_remarks__c').value = e.Kyc_remarks__c ? e.Kyc_remarks__c:'';
                                parent.querySelector('#Kyc_expDate').value = e.Kyc_expDate__c ? e.Kyc_expDate__c:'';
                                parent.querySelector('#Kyc_Id').value = e.Id;
                            }
                            else
                            {
                                const ifscVisibility = (e.Kyc_documentType__c == 'Bank Account (ICICI)' ? true : false);
                                const expDateVisibility = (e.Kyc_documentType__c == 'Passport' ? true : false);
                                const html = `<div class="input_div_group" >
                                <div class="input_div ">
                                    <label for="">Document Type</label><br/>
                                        <select name="Document type" id="Kyc_documentType__c" class="Kyc_documentType__c">
                                            <option value="Bank Account (ICICI)" ${e.Kyc_documentType__c === 'Bank Account (ICICI)' ? 'selected' : ''}>Bank Account (ICICI)</option>
                                            <option value="Aadhar Card" ${e.Kyc_documentType__c === 'Aadhar Card' ? 'selected' : ''}>Aadhar Card</option>
                                            <option value="Pan Card" ${e.Kyc_documentType__c === 'Pan Card' ? 'selected' : ''}>Pan Card</option>
                                            <option value="Voter Card" ${e.Kyc_documentType__c === 'Voter Card' ? 'selected' : ''}>Voter Card</option>
                                            <option value="ESIC Card" ${e.Kyc_documentType__c === 'ESIC Card' ? 'selected' : ''}>ESIC Card</option>
                                            <option value="Ration Card" ${e.Kyc_documentType__c === 'Ration Card' ? 'selected' : ''}>Ration Card</option>
                                            <option value="Passport" ${e.Kyc_documentType__c === 'Passport' ? 'selected' : ''}>Passport</option>
                                            <option value="UAN" ${e.Kyc_documentType__c === 'UAN' ? 'selected' : ''}>UAN</option>
                                        </select>                                                    
                                </div>
                                <div class="input_div IFSC_input_div" style="display:${ifscVisibility?'block':'none'}">
                                    <label for="">IFSC</label><br/>
                                    <input class="input" type="text" name="" id="Kyc_ifscCode" value='${e.Kyc_ifscCode__c ? e.Kyc_ifscCode__c :''}' />
                                </div>
                                <div class="input_div Passport_exp_input_div" style="display:${expDateVisibility?'block':'none'}">
                                    <label for="">Expiry date</label><br/>
                                    <input class="input" type="text" name="" id="Kyc_expDate" value='${e.Kyc_Kyc_ ? e.Kyc_expDate__c : ''}' />
                                </div>
                                <div class="input_div">
                                    <label for="Kyc_nameOnDocument__c">Name as on document</label><br/>
                                    <input type="text" id="Kyc_nameOnDocument__c" class="input" value="${e.Kyc_nameOnDocument__c ?e.Kyc_nameOnDocument__c:'' }"/>
                                </div>
                                <div class="input_div">
                                    <label for="Kyc_documentNumber__c">Document no</label><br/>
                                    <input type="text" class="input" name="Kyc_documentNumber__c" id="Kyc_documentNumber__c" value="${e.Kyc_documentNumber__c ?e.Kyc_documentNumber__c:'' }"/>
                                </div>
                                <div class=" address">
                                    <label for="remarks">Remarks if any</label><br/>
                                    <input type="text" name="remarks" class="input" id="Kyc_remarks__c" value="${e.Kyc_remarks__c ? e.Kyc_remarks__c :''}"cols="30" rows="10"/>
                                </div>
                                <input type="hidden" id="Kyc_Id" value="${e.Id}" class="Id"/>
                                `;
                                document.querySelector('.pan_kyc_input_div_group').insertAdjacentHTML('afterend', html);
                            }
                        });
                        if(thereareresults)
                        {
                            const parent = document.querySelector('.kyc_form');
                        }
                });
            }
            
            const fetchEducationalInfo = () => {

                return new Promise((resolve, reject) => {

                let eduhtml=``; 
               Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.mainController.fetchEducationalQualificationData}', empId,
                    function(result, event) {
                        
                        
                        console.log('Education Result');
                        console.log(result);

                            if (result.length <= 0) return;
                            var eduInfohtml=``;
                            result.forEach(record => {
                                const html = `
                                            <div class="input_div_group">
                                            <div class="input_div">
                                                    <label for="educationLevel">Education Level </label>
                                                    <select name="educationLevel" id="EQ_educationalLevel__c" value='${record.EQ_educationalLevel__c}'>
                                                    <option value="10th" ${record.EQ_educationalLevel__c==='10th'?'selected':''}>10th</option>
                                                    <option value="12th" ${record.EQ_educationalLevel__c==='12th'?'selected':''}>12th</option>
                                                    <option value="Graduation" ${record.EQ_educationalLevel__c==='Graduation'?'selected':''}>Graduation</option>
                                                    <option value="Post-Graduation" ${record.EQ_educationalLevel__c==='Post-Graduation'?'selected':''}>Post-Graduation</option>
                                                    <option value="Other" ${record.EQ_educationalLevel__c==='Other'?'selected':''}>Other</option>
                                                    </select>           
                                            </div>
                                            <div class="input_div twelth" style="${record.EQ_educationalLevel__c ==='12th' ? 'display:block' : 'display:none'}">
                                                    <label for="">Branch</label><br/>
                                                    <select name="" id="EQ_branchTwelth__c">
                                                        <option value=""${record.EQ_branchTwelth__c===''?'selected':''}> </option>
                                                        <option value="Science"${record.EQ_branchTwelth__c==='Science'?'selected':''}>Science</option>
                                                        <option value="Commerce"${record.EQ_branchTwelth__c==='Commerce'?'selected':''}>Commerce</option>
                                                        <option value="Arts"${record.EQ_branchTwelth__c==='Arts'?'selected':''}>Arts</option>
                                                    </select>
                                            </div>
                                            <div class="input_div graduation" style="${record.EQ_educationalLevel__c ==='Graduation' ? 'display:block' :'display:none'}">
                                                    <label for="">Degree</label><br/>
                                                    <select name="" id="EQ_degree__c">
                                                        <option value=""${record.EQ_degree__c===''?'selected':''}> </option>
                                                        <option value="Bachelor Of Engineering"${record.EQ_degree__c==='Bachelor Of Engineering'?'selected':''}>Bachelor Of Engineering</option>
                                                        <option value="Bachelor Of Technology"${record.EQ_degree__c==='Bachelor Of Technology'?'selected':''}>Bachelor Of Technology</option>
                                                        <option value="Bachelor Of Computer Applications"${record.EQ_degree__c==='Bachelor Of Computer Applications'?'selected':''}>Bachelor Of Computer Applications</option>
                                                        <option value="Bachelor Of Science"${record.EQ_degree__c==='Bachelor Of Science'?'selected':''}>Bachelor Of Science</option>
                                                    </select>
                                            </div>
                                            <div class="input_div postgraduation" style="${record.EQ_educationalLevel__c ==='Post-Graduation' ? 'display:block' :'display:none'}">
                                                    <label for="">Degree</label><br/>
                                                    <select name="" id="EQ_postGradDegree__c">
                                                        <option value=""${record.EQ_postGradDegree__c===''?'selected':''}> </option>
                                                        <option value="Master Of Engineering"${record.EQ_postGradDegree__c==='Master Of Engineering'?'selected':''}>Master Of Engineering</option>
                                                        <option value="Master Of Technology"${record.EQ_postGradDegree__c==='Master Of Technology'?'selected':''}>Master Of Technology</option>
                                                        <option value="Master Of Computer Applications"${record.EQ_postGradDegree__c==='Master Of Computer Applications'?'selected':''}>Master Of Computer Applications</option>
                                                        <option value="Master Of Science"${record.EQ_postGradDegree__c==='Master Of Science'?'selected':''}>Master Of Science</option>
                                                    </select>
                                            </div>
                                            <div class="input_div specialisation" style="${record.EQ_educationalLevel__c ==='10th' ? 'display:none' :record.EQ_educationalLevel__c ==='12th' ? 'display:none' : 'display:block'}">
                                                <label for="">Specialisation</label><br/>
                                                    <input class="input" type="text" id="EQ_specialisation__c" value='${record.EQ_specialisation__c}'/>
                                            </div>
                                            <div class="input_div">
                                                <label>Board/University</label>
                                                <input class="input" id="EQ_boardOrUniversity__c" type="text" value='${record.EQ_boardOrUniversity__c?record.EQ_boardOrUniversity__c:''}' />                                           
                                            </div>
                                            <div class="input_div">
                                                <label>School/College Name</label>
                                                <input class="input" id="EQ_schoolOrCollegeName__c" type="text" value='${record.EQ_schoolOrCollegeName__c?record.EQ_schoolOrCollegeName__c:''}'/>      
                                            </div>
                                            <div class="input_div">
                                                <label>Year of Passing</label>
                                                    <input class="input" id="EQ_yearOfPassing__c" type="text" value='${record.EQ_yearOfPassing__c?record.EQ_yearOfPassing__c:''}'/>
                                                    
                                            </div>
                                            <div class="input_div">
                                                <label for="">GPA/Percentage</label><br/>
                                                    <select name="marksType" id="EQ_marksType__c">
                                                        <option value="CGPA"${record.EQ_marksType__c==='CGPA'?'selected':''}>CGPA</option>
                                                        <option value="Percentage"${record.EQ_marksType__c==='Percentage'?'selected':''}>Percentage</option>
                                                </select>
                                            </div>
                                            <div class="input_div">
                                                <label>Percentage Marks</label>
                                                    <input class="input" id="EQ_percentageMarks__c" type="text" value='${record.EQ_percentageMarks__c?record.EQ_percentageMarks__c:''}'/>
                                    
                                            </div>
                                            <input type="hidden" id="EQId" value="${record.Id}" class="EQId" />
                               
                                                `;
                           
                                //parent.firstElementChild.insertAdjacentHTML("afterend", html);
                                        eduhtml+=html;
                                      
                                        })
                                        
                                        console.log('Inside success');
                                        resolve(eduhtml)
                            },{escape:true}
                            );
                    })
                }

            const fetchWorkExpInfo = () => {
                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.mainController.fetchWorkExpData}', empId,
                    function(result, event) {
                        console.log(result);
                        document.querySelector('.buffer').style.display='none';
                        const parent = document.querySelector('.workexp_form');
                        parent.querySelector('.input_div_group').remove();
                        result.forEach((index) => {
                            const html = `<div class="input_div_group">
                                    <div class="input_div ">
                                        <label for="">Organisation Name</label><br/>
                                        <input class="input" type="text" name="" id="WE_orgName" value="${index.WE_organizationName__c ? index.WE_organizationName__c:''}"/>
                                    </div>
                                    <div class="input_div">
                                        <label for="">Designation while leaving</label><br/>
                                        <input class="input" type="text" name="" id="WE_des" value="${index.WE_designationWhenLeaving__c ? index.WE_designationWhenLeaving__c:''}"/>
                                    </div>
                                    <div class="input_div">
                                        <label for="">From</label><br/>
                                        <input class="input" type="date" name="" id="WE_from" value="${index.WE_from__c ? index.WE_from__c: ''}"/>
                                    </div>
                                    <div class="input_div">
                                        <label for="">To</label><br/>
                                        <input class="input" type="date" name="" id="WE_to" value="${index.WE_to__c ? index.WE_to__c : ''}"/>
                                    </div>
                                    <div class="input_div">
                                        <label for="">Reason for leaving</label><br/> 
                                        <input class="input" type="text" name="" id="WE_reason" value="${index.WE_reasonForLeaving__c ? index.WE_reasonForLeaving__c : ''}"/>
                                    </div>
                                    <input class="input" type="hidden" name="" id="WE_id"  value="${index.Id}" />
                                </div>`;
                            document.querySelector('.workexp_form').firstElementChild.insertAdjacentHTML('afterend', html);
                        });
                    });
            }
            
            const fetchDocumentCheckList=()=>{
            
                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.mainController.fetchCheckList}',empId,
                function(result,event){
                    console.log(result);
                if(result==null) return;
                document.getElementById('resume').checked=result.Emp_isResumeAvailable__c?result.Emp_isResumeAvailable__c:'';
                document.getElementById('photo').checked=result.Emp_isPhotoAvailable__c?result.Emp_isPhotoAvailable__c:'';
                document.getElementById('edu_certificates').checked=result.Emp_isEduCertificatesAvailable__c?result.Emp_isEduCertificatesAvailable__c:'';
                document.getElementById('salary_slip').checked=result.Emp_isSalaryS__c?result.Emp_isSalaryS__c:'';
                document.getElementById('pancard').checked=result.Emp_isPanCardAvailable__c?result.Emp_isPanCardAvailable__c:'';
                document.getElementById('address_proof').checked=result.Emp_isProofOfAddressAvailable__c?result.Emp_isProofOfAddressAvailable__c:'';
                document.getElementById('provident_fund').checked=result.Emp_isPFNominationAvailable__c?result.Emp_isPFNominationAvailable__c:'';
                document.getElementById('gratuity_form').checked=result.Emp_isGratuityFormAvailable__c?result.Emp_isGratuityFormAvailable__c:'';
                document.getElementById('offer_letter').checked=result.Emp_isSignedOfferLetterAvailable__c?result.Emp_isSignedOfferLetterAvailable__c:'';
                document.getElementById('experience_letter').checked=result.Emp_isExperienceLetterAvailable__c?result.Emp_isExperienceLetterAvailable__c:'';
                document.getElementById('bank_statement').checked=result.Emp_isBankStatementAvailable__c?result.Emp_isBankStatementAvailable__c:'';
                document.getElementById('bloodgroup_report').checked=result.Emp_isBloodGroupReportAvailable__c?result.Emp_isBloodGroupReportAvailable__c:'';
                document.getElementById('code_of_conduct').checked=result.Emp_isCodeOfConductAvailable__c?result.Emp_isCodeOfConductAvailable__c:'';
                });
                console.log('fetched')
            }



            const displayPreviewPage=()=>{
        //         let empInfo=await fetchEmployeeInfo();
        //         let eduInfo='';
        //             try {
                
        //         // Use await to wait for the promise to resolve
        //         eduInfo = await fetchEducationalInfo();
        //         console.log('Printing eduInfo:', eduInfo);

        //         // Continue with the code that depends on eduInfo
        //         console.log('Done building preview page');
        //     } catch (error) {
        //         console.error('Error:', error);
        //     }
        //     finally{
        //        // console.log(eduInfo);
        //     }
        //     const data=empInfo+eduInfo;
        //     const preview_section=document.querySelector('.preview_section ');
        //     preview_section.insertAdjacentHTML('afterbegin',data )
        //    //  console.log(empInfo+eduInfo)




        
        //    Fetch Employee Info
        function reverseString(str) {
           return str.split("-").reverse().join("-");
        }



        let empInfoPreview=``;
        console.log('empid',empId);
        Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.mainController.fetchEmployee}', empId,
                    function(result, event) {
                        console.log(result);
                        empInfoPreview=`
                                        <h1>Employee Information</h1>
                                        <br/>
                                        <div class="input_div_group">
                                        <div class="input_div">
                                            <label for="">First name</label><br/>
                                            <input class="input" type="text" name="" id="PEmp_firstName__c" value="${result.Emp_firstName__c ? result.Emp_firstName__c : ' '}" readonly="true"/>
                                        </div>
                                        <div class="input_div">
                                            <label for="">Middle name</label><br/>
                                            <input class="input" type="text" name="" id="PEmp_midName__c" value="${ result.Emp_midName__c ? result.Emp_midName__c : ' '}" readonly="true"/>
                                        </div>
                                        <div class="input_div">
                                            <label for="">Last name</label><br/>
                                            <input class="input" type="text" name="" id="PEmp_lastName__c"  value="${result.Emp_lastName__c?result.Emp_lastName__c:' '}" readonly="true"/>
                                        </div>
                                        <div class="input_div ">
                                            <label for="">Date of Birth</label><br/>
                                            <input class="input"  name="" id="PEmp_dateOfBirth__c" readonly="true" value="${result.Emp_dateOfBirth__c?reverseString(result.Emp_dateOfBirth__c):' '}"/>
                                        </div>
                                        <div class="input_div">
                                            <label for="">Marital Status</label><br/>
                                            <input class="input" name="Marital Status" id="PEmp_maritalStatus__c" value="${result.Emp_maritalStatus__c?result.Emp_maritalStatus__c:' '}" readonly="true"/>
                                                
                                        </div>
                                        <div class="input_div">
                                            <label for="">Gender</label><br/>
                                            <input class="input" name="Gender" id="PEmp_gender__c" value="${result.Emp_gender__c?result.Emp_gender__c:''}" readonly="true"/>
                                                
                                        </div>
                                        <div class="input_div">
                                            <label for="">Blood Group</label><br/>
                                            <input class="input" name="" id="PEmp_bloodGroup__c" value="${result.Emp_bloodGroup__c?result.Emp_bloodGroup__c:''}" readonly="true"/>
                                                
                                        </div>
                                        <div class="input_div span-2">
                                            <label for="">Nationality</label><br/>
                                            <input name="" class="input" id="PEmp_nationality__c" value="${result.Emp_nationality__c?result.Emp_nationality__c:''}" readonly="true"/>
                                                
                                        </div>
                                        <div class="input_div">
                                            <label for="">Email id</label><br/>
                                            <input class="input" type="email" name="" id="PEmp_emailId__c" value="${result.Emp_emailId__c?result.Emp_emailId__c:''}" readonly="true"/>
                                        </div>
                                        <div class="input_div">
                                            <label for="">Telephone</label><br/>
                                            <input class="input" type="text"  name="" id="PEmp_telephone__c" value="${result.Emp_telephone__c?result.Emp_telephone__c:''}" readonly="true"/>
                                        </div>
                                        <div class="input_div">
                                            <label for="">Mobile</label><br/>
                                            <input class="input" type="text" name="" id="PEmp_mobilePhone__c" value="${result.Emp_mobilePhone__c?result.Emp_mobilePhone__c:''}" readonly="true"/>
                                        </div>
                                        <div class="input_div">
                                            <label for="">T shirt Size</label><br/>
                                            <input name="T Shirt Size" class="input" id="PEmp_tShirtSize__c" value="${result.Emp_tShirtSize__c?result.Emp_tShirtSize__c:''}" readonly="true"/>
                                                
                                        </div>
                                        <div class=" address">
                                            <label for="">Residential Address / Permanent Address</label><br/>
                                            <input name="" class="input" id="PEmp_resAddress__c" cols="30" rows="10" value="${result.Emp_resAddress__c?result.Emp_resAddress__c:''}" readonly="true"/>
                                        </div>
                                        <div class="input_div">
                                            <label for="">City</label><br/>
                                            <input class="input" type="text" name="" id="PEmp_resCity__c" value="${result.Emp_resCity__c?result.Emp_resCity__c:''}" readonly="true"/>
                                        </div>
                                        <div class="input_div">
                                            <label for="">State</label><br/>
                                            <input class="input" type="text" name="" id="PEmp_resState__c" value="${result.Emp_resState__c?result.Emp_resState__c:''}" readonly="true"/>
                                        </div>
                                        <div class="input_div">
                                            <label for="">Zipcode</label><br/>
                                            <input class="input" type="text" name="" id="PEmp_resZipCode__c" value="${result.Emp_resZipCode__c?result.Emp_resZipCode__c:''}" readonly="true"/>
                                        </div>
                                        <div class="input_div input_checkbox_div">
                                            <div>
                                                <input class="input mailing_checkbox" type="checkbox" name="" id="PEmp_commonAddressCheck__c" ${result.Emp_commonAddressCheck__c?'checked="true"':''}" disabled="true"/>
                                            </div>
                                            <label for=""> Residential address same as Mailing address?</label><br/>
                                        </div>
                                        <div class=" address mailing_div">
                                            <label for="">Mailing Address</label><br/>
                                            <input name="" class="input" id="PEmp_commAddress__c" cols="30" rows="10" value="${result.Emp_commAddress__c?result.Emp_commAddress__c:''}" readonly="true"/>
                                        </div>
                                        <div class="input_div mailing_div">
                                            <label for="">Mailing City</label><br/>
                                            <input class="input" type="text" name="" id="PEmp_commCity__c" value="${result.Emp_commCity__c?result.Emp_commCity__c:''}" readonly="true"/>
                                        </div>
                                        <div class="input_div mailing_div">
                                            <label for="">Mailing State</label><br/>
                                            <input class="input" type="text" name="" id="PEmp_commState__c" value="${result.Emp_commState__c?result.Emp_commState__c:''}" readonly="true"/>
                                        </div>
                                        <div class="input_div mailing_div">
                                            <label for="">Mailing Zipcode</label><br/>
                                            <input class="input" type="text" name="" id="PEmp_commZipCode__c" value="${result.Emp_commZipCode__c?result.Emp_commZipCode__c:''}" readonly="true"/>
                                        </div>
                                        <div class="input_div">
                                            <label for="">Food Preference</label><br/>
                                            <input class="input" name="Food Preferences" id="PEmp_foodPref__c" value="${result.Emp_foodPref__c?result.Emp_foodPref__c:''}" readonly="true"/>
                                                
                                        </div>
                                        <div></div>
                                        <div></div>
                                        <div class="input_div">
                                            <label for="">Language 1</label><br/>
                                            <input class="input" type="text" name="" id="PEmp_lang1__c" value=${result.Emp_lang1__c?result.Emp_lang1__c:''} readonly="true" /> <br/>
                                            <div class="checkbox">
                                                <div>
                                                <input class="input" type="checkbox" name="" id="PEmp_lang1Read__c" ${result.Emp_lang1Read__c?'checked="true"':''} disabled="true"/>
                                                </div>
                                                <label for="">Read</label><br/>
                                                <div>
                                                <input class="input" type="checkbox" name="" id="PEmp_lang1Write__c" ${result.Emp_lang1Write__c?'checked="true"':''} disabled="true"/>
                                                </div>
                                                <label for="">Write</label><br/>
                                                <div>
                                                <input class="input" type="checkbox" name="" id="PEmp_lang1Speak__c" ${result.Emp_lang1Speak__c?'checked="true"':''} disabled="true"/>
                                                </div>
                                                <label for="">Speak</label><br/>
                                            </div>
                                        </div>
                                        <div class="input_div">
                                            <label for="">Language 2</label><br/>
                                            <input class="input" type="text" name="" id="PEmp_lang2__c" value="${result.Emp_lang2__c?result.Emp_lang2__c:''}" readonly="true"/> <br/>
                                            <div class="checkbox">
                                                <input class="input" type="checkbox" name="" id="PEmp_lang2Read__c"  ${result.Emp_lang2Read__c?'checked="true"':''} disabled="true"/>
                                                <label for="">Read</label><br/>
                                                <input class="input" type="checkbox" name="" id="PEmp_lang2Write__c" ${result.Emp_lang2Write__c?'checked="true"':''} disabled="true"/>
                                                <label for="">Write</label><br/>
                                                <input class="input" type="checkbox" name="" id="PEmp_lang2Speak__c" ${result.Emp_lang2Speak__c?'checked="true"':''} disabled="true"/>
                                                <label for="">Speak</label><br/>
                                            </div>
                                        </div>
                                        <div class="input_div">
                                            <label for="">Language 3</label><br/>
                                            <input class="input" type="text" name="" id="PEmp_lang3__c" value="${result.Emp_lang3__c?result.Emp_lang3__c:''}" readonly="true"/> <br/>
                                            <div class="checkbox">
                                                <input class="input" type="checkbox" name="" id="PEmp_lang3Read__c" ${result.Emp_lang3Read__c?'checked="true"':''} disabled="true"/>
                                                <label for="">Read</label><br/>
                                                <input class="input" type="checkbox" name="" id="PEmp_lang3Write__c" ${result.Emp_lang3Write__c?'checked="true"':''} disabled="true"/>
                                                <label for="">Write</label><br/>
                                                <input class="input" type="checkbox" name="" id="PEmp_lang3Speak__c" ${result.Emp_lang3Speak__c?'checked="true"':''} disabled="true"/>
                                                <label for="">Speak</label><br/>
                                            </div>
                                        </div>
                                        <div class="input_div">
                                            <label for="">Emergency Contact Name</label><br/>
                                            <input class="input" type="text" name="" id="Emp_Emergency__c" value="${result.Emp_Emergency__c?result.Emp_Emergency__c:''}" readonly="true"/>
                                        </div>
                                        <div class="input_div">
                                            <label for="">Emergency Contact Phone</label><br/>
                                            <input class="input" type="text" name="" id="Emp_EmergencyContact_Phone__c" value="${result.Emp_EmergencyContact_Phone__c?result.Emp_EmergencyContact_Phone__c:''}" readonly="true"/>
                                        </div>
                                        <div class="input_div">
                                            <label for="">Emergency Contact Relation</label><br/>
                                            <input class="input" type="text" name="" id="Emp_EmergencyContact_Relation__c" value="${result.Emp_EmergencyContact_Relation__c?result.Emp_EmergencyContact_Relation__c:''}" readonly="true"/>
                                        </div>
                                        </div>`;

                const preview_section=document.querySelector('.empinfo_preview_form ');
                preview_section.insertAdjacentHTML('afterBegin',empInfoPreview);
                    console.log('empHtml',empInfoPreview); 
                    });

 
                    // Fetch Family Details 
                    let Familyhtml=`<h2>Employee Family Details</h2>`;
                    Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.mainController.getFamilyInfo}',
                    empId,
                    function(result, event) {
                        console.log(result);
                        result.forEach((index) => {
                            const html = `
                                    <div class="input_div_group">
                            <div class="input_div ">
                                <label for="">Relation</label><br/>
                                <select name="Relation" id="Fi_relation" disabled="true">
                                            <option value="Father" ${index.Fi_relation__c == 'Father' ? 'selected':''}>Father</option>
                                            <option value="Mother" ${index.Fi_relation__c == 'Mother' ? 'selected':''}>Mother</option>
                                            <option value="Spouse" ${index.Fi_relation__c == 'Spouse' ? 'selected':''}>Spouse</option>
                                            <option value="Son"    ${index.Fi_relation__c == 'Son'? 'selected':''}>Son</option>
                                            <option value="Daughter" ${index.Fi_relation__c == 'Daughter'? 'selected':''}>Daughter</option>
                                </select>
                            </div>
                            <div class="input_div">
                                <label for="">FirstName</label><br/>
                                <input class="input" type="text" name="" id="Fi_firstName" value='${index.Fi_firstName__c ? index.Fi_firstName__c: '' }' readonly="true"/>
                            </div>
                            <div class="input_div">
                                <label for="">MiddleName</label><br/>
                                <input class="input" type="text" name="" id="Fi_middleName" value='${index.Fi_middleName__c ? index.Fi_middleName__c : ''}' readonly="true"/>
                            </div>
                            <div class="input_div">
                                <label for="">LastName</label><br/>
                                <input class="input" type="text" name="" id="Fi_lastName" value='${index.Fi_lastName__c ? index.Fi_lastName__c : '' }' readonly="true"/
                            </div>
                            <div class="input_div">
                                <label for="">Date of Birth</label><br/>
                                <input class="input"  name="" id="Fi_dob" value=${index.Fi_dob__c ? reverseString(index.Fi_dob__c) : ''} readonly="true"/>
                            </div>
                            <input class="input" type="hidden" name="" id="Fi_id"  value="${index.Id}" />
                            
                        </div>
                        </div>
                            `;
                            Familyhtml+=html;
                        });
                            const preview_section=document.querySelector('.familyinfo_preview_form');
                            preview_section.insertAdjacentHTML('beforeend',Familyhtml);
                    });

                //    Fetch KYC Details
               let kycInfo=`<h2>Employee KYC Details</h2>`;
                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.mainController.fetchKyc}', empId,
                    function(result, event) {
                        
                        result.forEach((e) => {
                      
                                const html = `<div class="input_div_group" >
                                <div class="input_div ">
                                    <label for="">Document Type</label><br/>
                                        <select name="Document type" id="Kyc_documentType__c" class="Kyc_documentType__c" disabled="true">
                                            <option value="Bank Account (ICICI)" ${e.Kyc_documentType__c === 'Bank Account (ICICI)' ? 'selected' : ''}>Bank Account (ICICI)</option>
                                            <option value="Aadhar Card" ${e.Kyc_documentType__c === 'Aadhar Card' ? 'selected' : ''}>Aadhar Card</option>
                                            <option value="Pan Card" ${e.Kyc_documentType__c === 'Pan Card' ? 'selected' : ''}>Pan Card</option>
                                            <option value="Voter Card" ${e.Kyc_documentType__c === 'Voter Card' ? 'selected' : ''}>Voter Card</option>
                                            <option value="ESIC Card" ${e.Kyc_documentType__c === 'ESIC Card' ? 'selected' : ''}>ESIC Card</option>
                                            <option value="Ration Card" ${e.Kyc_documentType__c === 'Ration Card' ? 'selected' : ''}>Ration Card</option>
                                            <option value="Passport" ${e.Kyc_documentType__c === 'Passport' ? 'selected' : ''}>Passport</option>
                                            <option value="UAN" ${e.Kyc_documentType__c === 'UAN' ? 'selected' : ''}>UAN</option>
                                        </select>                                                    
                                </div>
                                <div class="input_div IFSC_input_div" style=${e.Kyc_documentType__c==='Bank Account (ICICI)'?'display:block':'display:none'}>
                                    <label for="">IFSC</label><br/>
                                    <input class="input" type="text" name="" id="Kyc_ifscCode" value='${e.Kyc_ifscCode__c ? e.Kyc_ifscCode__c :''}' readonly="true"/>
                                </div>
                                <div class="input_div Passport_exp_input_div" style=${e.Kyc_documentType__c==='Passport'?'display:block':'display:none'}>
                                    <label for="">Expiry date</label><br/>
                                    <input class="input" type="text" name="" id="Kyc_expDate" value='${e.Kyc_Kyc_ ? e.Kyc_expDate__c : ''}' readonly="true"/>
                                </div>
                                <div class="input_div">
                                    <label for="Kyc_nameOnDocument__c">Name as on document</label><br/>
                                    <input type="text" id="Kyc_nameOnDocument__c" class="input" value="${e.Kyc_nameOnDocument__c ?e.Kyc_nameOnDocument__c:'' }" readonly="true"/>
                                </div>
                                <div class="input_div">
                                    <label for="Kyc_documentNumber__c">${e.Kyc_documentType__c?e.Kyc_documentType__c:'Document'} no</label><br/>
                                    <input type="text" class="input" name="Kyc_documentNumber__c" id="Kyc_documentNumber__c" value="${e.Kyc_documentNumber__c ?e.Kyc_documentNumber__c:'' }" readonly="true"/>
                                </div>
                                <div class=" address">
                                    <label for="remarks">Remarks if any</label><br/>
                                    <input type="text" name="remarks" class="input" id="Kyc_remarks__c" value="${e.Kyc_remarks__c ? e.Kyc_remarks__c :''}"cols="30" rows="10" readonly="true"/>
                                </div>
                                <input type="hidden" id="Kyc_Id" value="${e.Id}" class="Id"/>
                                </div>
                                </div>
                                `;
                                kycInfo+=html;
                                
                        });
                        console.log('Inserting family details...');
                            const preview_section=document.querySelector('.kycinfo_preview_form');
                            preview_section.insertAdjacentHTML('beforeend',kycInfo);
                });


                
                    //    Fetch Education Detail 

               let eduhtml=`<h2>Employee Education Details</h2>`; 
               Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.mainController.fetchEducationalQualificationData}', empId,
                    function(result, event) {
                        
                        console.log('Education Result');
                        console.log(result);

                            if (result.length <= 0) return;
                            result.forEach(record => {
                                const html = `

                                            <div class="input_div_group">
                                            <div class="input_div">
                                                    <label for="educationLevel">Education Level </label>
                                                    <select name="educationLevel" id="EQ_educationalLevel__c" value='${record.EQ_educationalLevel__c}' disabled="true">
                                                    <option value="10th" ${record.EQ_educationalLevel__c==='10th'?'selected':''}>10th</option>
                                                    <option value="12th" ${record.EQ_educationalLevel__c==='12th'?'selected':''}>12th</option>
                                                    <option value="Graduation" ${record.EQ_educationalLevel__c==='Graduation'?'selected':''}>Graduation</option>
                                                    <option value="Post-Graduation" ${record.EQ_educationalLevel__c==='Post-Graduation'?'selected':''}>Post-Graduation</option>
                                                    <option value="Other" ${record.EQ_educationalLevel__c==='Other'?'selected':''}>Other</option>
                                                    </select>           
                                            </div>
                                            <div class="input_div twelth" style="${record.EQ_educationalLevel__c ==='12th' ? 'display:block' : 'display:none'}" >
                                                    <label for="">Branch</label><br/>
                                                    <select name="" id="EQ_branchTwelth__c" disabled="true">
                                                        <option value=""${record.EQ_branchTwelth__c===''?'selected':''}> </option>
                                                        <option value="Science"${record.EQ_branchTwelth__c==='Science'?'selected':''}>Science</option>
                                                        <option value="Commerce"${record.EQ_branchTwelth__c==='Commerce'?'selected':''}>Commerce</option>
                                                        <option value="Arts"${record.EQ_branchTwelth__c==='Arts'?'selected':''}>Arts</option>
                                                    </select>
                                            </div>
                                            <div class="input_div graduation" style="${record.EQ_educationalLevel__c ==='Graduation' ? 'display:block' :'display:none'}" >
                                                    <label for="">Degree</label><br/>
                                                    <select name="" id="EQ_degree__c" disabled="true">
                                                        <option value=""${record.EQ_degree__c===''?'selected':''}> </option>
                                                        <option value="Bachelor Of Engineering"${record.EQ_degree__c==='Bachelor Of Engineering'?'selected':''}>Bachelor Of Engineering</option>
                                                        <option value="Bachelor Of Technology"${record.EQ_degree__c==='Bachelor Of Technology'?'selected':''}>Bachelor Of Technology</option>
                                                        <option value="Bachelor Of Computer Applications"${record.EQ_degree__c==='Bachelor Of Computer Applications'?'selected':''}>Bachelor Of Computer Applications</option>
                                                        <option value="Bachelor Of Science"${record.EQ_degree__c==='Bachelor Of Science'?'selected':''}>Bachelor Of Science</option>
                                                    </select>
                                            </div>
                                            <div class="input_div postgraduation" style="${record.EQ_educationalLevel__c ==='Post-Graduation' ? 'display:block' :'display:none'}">
                                                    <label for="">Degree</label><br/>
                                                    <select name="" id="EQ_postGradDegree__c" disabled="true">
                                                        <option value=""${record.EQ_postGradDegree__c===''?'selected':''}> </option>
                                                        <option value="Master Of Engineering"${record.EQ_postGradDegree__c==='Master Of Engineering'?'selected':''}>Master Of Engineering</option>
                                                        <option value="Master Of Technology"${record.EQ_postGradDegree__c==='Master Of Technology'?'selected':''}>Master Of Technology</option>
                                                        <option value="Master Of Computer Applications"${record.EQ_postGradDegree__c==='Master Of Computer Applications'?'selected':''}>Master Of Computer Applications</option>
                                                        <option value="Master Of Science"${record.EQ_postGradDegree__c==='Master Of Science'?'selected':''}>Master Of Science</option>
                                                    </select>
                                            </div>
                                            <div class="input_div specialisation" style="${record.EQ_educationalLevel__c ==='10th' ? 'display:none' :record.EQ_educationalLevel__c ==='12th' ? 'display:none' : 'display:block'}">
                                                <label for="">Specialisation</label><br/>
                                                    <input class="input" type="text" id="EQ_specialisation__c" value='${record.EQ_specialisation__c}' readonly="true"/>
                                            </div>
                                            <div class="input_div">
                                                <label>Board/University</label>
                                                <input class="input" id="EQ_boardOrUniversity__c" type="text" value='${record.EQ_boardOrUniversity__c?record.EQ_boardOrUniversity__c:''}' readonly="true" />                                           
                                            </div>
                                            <div class="input_div">
                                                <label>School/College Name</label>
                                                <input class="input" id="EQ_schoolOrCollegeName__c" type="text" value='${record.EQ_schoolOrCollegeName__c?record.EQ_schoolOrCollegeName__c:''}' readonly="true"/>      
                                            </div>
                                            <div class="input_div">
                                                <label>Year of Passing</label>
                                                    <input class="input" id="EQ_yearOfPassing__c" type="text" value='${record.EQ_yearOfPassing__c?record.EQ_yearOfPassing__c:''}' readonly="true"/>
                                                    
                                            </div>
                                            <div class="input_div">
                                                <label for="">GPA/Percentage</label><br/>
                                                    <select name="marksType" id="EQ_marksType__c" disabled="true">
                                                        <option value="CGPA"${record.EQ_marksType__c==='CGPA'?'selected':''}>CGPA</option>
                                                        <option value="Percentage"${record.EQ_marksType__c==='Percentage'?'selected':''}>Percentage</option>
                                                </select>
                                            </div>
                                            <div class="input_div">
                                                <label>Percentage Marks</label>
                                                    <input class="input" id="EQ_percentageMarks__c" type="text" value='${record.EQ_percentageMarks__c?record.EQ_percentageMarks__c:''}' readonly="true"/>
                                    
                                            </div>
                                            <input type="hidden" id="EQId" value="${record.Id}" class="EQId" />
                                            </div>
                                            </div>
                                                `;
                           
                                        //parent.firstElementChild.insertAdjacentHTML("afterend", html);
                                        eduhtml+=html;
                                      
                                        })
                                         const preview_section=document.querySelector('.eduinfo_preview_form');
                                         preview_section.insertAdjacentHTML('beforeend',eduhtml);
                                         console.log('eduHtml',eduhtml); 
                            },{escape:true}
                            );


            

                            // Fetch Work Experience Details 
                            let workExpInfo=`<h2>Employee Work Experience Details</h2>`;

                            Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.mainController.fetchWorkExpData}', empId,
                            function(result, event) {
                                let html=``;
                        console.log(result);
                        if(result.length<=0){

                            html=`
                            <form action="" class="form workexp_preview_form">
                              <div class="input_div_group" style="display:block;>
                                  <div class="input_div">
                                    <label> No Previous Work Experience </label>
                                    </div>
                                    
                                </div>
                            </form>
                            `;
                            workExpInfo+=html;
                        }

                        result.forEach((index) => {
                             html = `
                            <form action="" class="form workexp_preview_form">
                            <div class="input_div_group">
                                    <div class="input_div ">
                                        <label for="">Organisation Name</label><br/>
                                        <input class="input" type="text" name="" id="WE_orgName" value="${index.WE_organizationName__c ? index.WE_organizationName__c:''}" readonly="true"/>
                                    </div>
                                    <div class="input_div">
                                        <label for="">Designation while leaving</label><br/>
                                        <input class="input" type="text" name="" id="WE_des" value="${index.WE_designationWhenLeaving__c ? index.WE_designationWhenLeaving__c:''}" readonly="true"/>
                                    </div>
                                    <div class="input_div">
                                        <label for="">From</label><br/>
                                        <input class="input"  name="" id="WE_from" value="${index.WE_from__c ?reverseString(index.WE_from__c): ''}" readonly="true"/>
                                    </div>
                                    <div class="input_div">
                                        <label for="">To</label><br/>
                                        <input class="input"  name="" id="WE_to" value="${index.WE_to__c ? reverseString(index.WE_to__c) : ''}" readonly="true"/>
                                    </div>
                                    <div class="input_div">
                                        <label for="">Reason for leaving</label><br/> 
                                        <input class="input" type="text" name="" id="WE_reason" value="${index.WE_reasonForLeaving__c ? index.WE_reasonForLeaving__c : ''}" readonly="true"/>
                                    </div>
                                    <input class="input" type="hidden" name="" id="WE_id"  value="${index.Id}" />
                                    
                                </div>`;
                                workExpInfo+=html
                            
                        });
                                         const preview_section=document.querySelector('.workexp_preview_form');
                                         preview_section.insertAdjacentHTML('beforeend',workExpInfo);
                                         console.log('eduHtml',workExpInfo);
                    });


        //    Acknowledgement 
        const Acknowledgement=`      <div class="input_div_group" style="display:block;">
                                    <div class="input_div">
                                        <label for="">I certify that the above statements made by me are true, complete and correct. In case of the company finds at any time that the information given by me in this form is not correct, true or complete, the company will have the right to withdraw my letter of appointment orto terminate my appointment at any time without notice or compensation. I hereby acknowledge that I have gone through the Service Rules, understood & accepted the same.
                                        </label><br/> 
                                        <div class="checkbox">
                                        <input class="input" type="checkbox" name="" id="acknowledgement" />
                                        </div>
                                    </div>
                                    </div>
                                    <div class="button_container">
                                        <button type="submit" class="FsubmitBtn" disabled="true">Submit</button>
                                    </div>
                                    `
                                         

                                         const preview_section=document.querySelector('.acknowledgement_form');
                                         preview_section.insertAdjacentHTML('beforeend',Acknowledgement);
                                         
                                   
                    
                }      
               


        //    Acknoledgement check
        document.querySelector('.acknowledgement_form').addEventListener('click',(e)=>{
            const parent=document.querySelector('.acknowledgement_form');
            const FsubmitBtn=document.querySelector('.FsubmitBtn');
            const acknowledgementCheck=document.querySelector('#acknowledgement').checked;
            if(acknowledgementCheck){
                FsubmitBtn.removeAttribute('disabled','');
                FsubmitBtn.style.backgroundColor='rgba(11, 24, 76, .85)';
            }
            else{
                FsubmitBtn.style.backgroundColor='rgb(146 146 149 / 85%)';
                FsubmitBtn.setAttribute('disabled','');
            }
           
            
        })


        document.querySelector('.acknowledgement_form').addEventListener('submit',(e)=>{
            e.preventDefault();
            const parent=document.querySelector('.acknowledgement_form');
            const FsubmitBtn=document.querySelector('.FsubmitBtn');
            console.log('button clicked..');
            
           
           Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.mainController.FinalSubmission}',empId,
           function(result,event){
            console.log(result);


           }
           );
        });



        // Final submission button 
        const FsubmitBtn=document.querySelector('.FsubmitBtn');
        console.log(FsubmitBtn);
        // FsubmitBtn.addEventListener('click',(e)=>{
        //       e.preventDefault();

        //       console.log('final submit clicked');
        // })




        


            
            
            //Validation for Educational Qualification
            const messageCancelButton = document.querySelector('.cancel');
            messageCancelButton.addEventListener('click', (e) => {
                const messageContainer = document.querySelector('.message');
                messageContainer.style.display = 'none';
            });
            
            
            // verification logic for final submission
            const verifyKyc = ()=>{
                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.mainController.fetchKyc}', empId,
                    function(result, event) {
                        result.forEach((index)=>{
                            let text =`missing `;
                            index.Kyc_documentNumber__c ?'':text+=`document Number, `;
                            index.Kyc_nameOnDocument__c ?'':text+=`name on document, `;
                            if(index.Kyc_documentType__c == 'Passport'  && index.Kyc_expDate__c?true:false)
                            {
                                text+=`expiry date, `;
                            }
                            if(index.Kyc_documentType__c == 'Bank Account (ICICI)' && index.Kyc_ifscCode__c?true:false)
                            {
                                text+=`IFSC code `
                            }
                            if(text !== 'missing ')
                            {
                                const errorcount = document.querySelector('.error_count');
                                let count =errorcount.innerHTML;
                                count++;
                                errorcount.innerHTML = count;
                                text+=`in ${index.Kyc_documentType__c}`;
                                const errorContainer = document.querySelector('.errorContents');
                                const html = `<div class="content">${text}</div> `;
                                errorContainer.insertAdjacentHTML('beforeend',html);
                            }
                        });
                });
            }
            const verifyFamily =()=>{
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.mainController.getFamilyInfo}',
                    empId,
                    function(result, event) {
                        result.forEach((index)=>{
                            let text =`missing `;
                            index.Fi_firstName__c?'':text+=`firstname, `;
                            index.Fi_lastName__c?'':text+=`lastname, `;
                            index.Fi_dob__c?'':text+='date of birth ';
            
                            if(text !== 'missing ')
                            {
                                const errorcount = document.querySelector('.error_count');
                                let count =errorcount.innerHTML;
                                count++;
                                errorcount.innerHTML = count;
                                text+=`in relation ${index.Fi_relation__c}`;
                                const errorContainer = document.querySelector('.errorContents');
                                const html = `<div class="content">${text}</div> `;
                                errorContainer.insertAdjacentHTML('beforeend',html);
                            }
                        })
                    });
            }
            const verifyEducation = ()=>{
                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.mainController.fetchEducationalQualificationData}', empId,
                    function(result, event) {
                        result.forEach((index)=>{
                            let text =`missing `;
                            index.EQ_boardOrUniversity__c?'':text+=`board/University,`;
                            index.EQ_schoolOrCollegeName__c?'':text+=`school/collegeName, `;
                            index.EQ_yearOfPassing__c?'':text+=`year of Passing, `;
                            index.EQ_percentageMarks__c?'':text+=`marks `;
                            if(text !== 'missing ')
                            {
                                const errorcount = document.querySelector('.error_count');
                                let count =errorcount.innerHTML;
                                count++;
                                errorcount.innerHTML = count;
                                text+=`in qualification ${index.EQ_educationalLevel__c}`;
                                const errorContainer = document.querySelector('.errorContents');
                                const html = `<div class="content">${text}</div> `;
                                errorContainer.insertAdjacentHTML('beforeend',html);
                            }
                        });
                    });
            }
            if (performance.navigation.type === 1 || performance.navigation.type === 0) {
                document.querySelector('.buffer').style.display='none';
                fetchFamilyInfo();
                fetchKycInfo();
                fetchEmployeeInfo();
                fetchEducationalInfo();
                fetchWorkExpInfo();
                fetchDocumentCheckList();
                verifyEducation()
                verifyFamily();
                verifyKyc();    
            }
         </script>
      </body>
   </html>
</apex:page>