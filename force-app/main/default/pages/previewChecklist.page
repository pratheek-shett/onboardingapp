<apex:page showHeader="false" sidebar="false" standardStylesheets="false" applyHtmlTag="true" docType="html-5.0" controller="mainController">
   <html lang="en">
      <head>
         <meta charset="UTF-8" />
         <meta name="viewport" content="width=device-width, initial-scale=1.0" />
         <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css" integrity="sha512-z3gLpd7yknf1YoNbCzqRKc4qyor8gaKU1qmn+CShxbuBusANI9QpRohGBreCFkKxLhei6S9CQXFEbbKuqLg0DA==" crossorigin="anonymous" referrerpolicy="no-referrer"
            />
         <link rel="preconnect" href="https://fonts.googleapis.com" />
         <link rel="preconnect" href="https://fonts.gstatic.com" />
         <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;600;700;800&display=swap" rel="stylesheet" />
         <title>Details page</title>
         <style>
            * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            }
            :root {
            --poppins: 'Poppins', sans-serif;
            --lato: 'Lato', sans-serif;
            --light: #F9F9F9;
            --blue: #3C91E6;
            --light-blue: #CFE8FF;
            --grey: #eee;
            --dark-grey: #AAAAAA;
            --dark: #342E37;
            --red: #DB504A;
            --yellow: #FFCE26;
            --light-yellow: #FFF2C6;
            --orange: #FD7238;
            --light-orange: #FFE0D3;
            --TransparentBlue: rgba(11, 24, 76, 0.85);
            --secondaryColor: #ca041b;
            }
            html,
            body {
            font-family: 'Montserrat', sans-serif;
            overflow-x: hidden;
            font-size: 10px;
            font-weight: 400;
            width: 100vw;
            display: flex;
            background-color: var(--grey);
            position: relative;
            }
            ::-webkit-scrollbar {
                width: 10px;
                cursor: pointer;
            /* width of the scrollbar */
            }
            /* Track */
            ::-webkit-scrollbar-track {
            background: var(--dark-grey);
            /* color of the track */
            }
            /* Handle */
            ::-webkit-scrollbar-thumb {
            background: var(--TransparentBlue);
            /* color of the handle */
            border-radius: 6px;
            /* roundness of the handle */
            }
            .sidebar {
            width: 27rem;
            height: 100vh;
            background-color: var(--TransparentBlue);
            color: var(--light);
            padding: 0rem 0;
            }
            .logo {
            width: 23rem;
            margin-left: 1rem;
            }
            .sidebar .menu {
            font-size: 1.6rem;
            font-weight: 400;
            width: 100%;
            list-style: none;
            margin-top: 10rem;
            display: flex;
            flex-direction: column;
            align-items: center;
            }
            .sidebar .menu li {
            height: 5rem;
            display: flex;
            font-weight: 700;
            letter-spacing: 1px;
            justify-content: flex-start;
            align-items: center;
            padding-left: 3rem;
            width: 100%;
            cursor: pointer;
            }
            .sidebar_active {
            background-color: var(--blue);
            }
            .main {
            width: calc(100vw - 25rem);
            height: calc(100vh - 7.2rem);
            margin-top: 7.2rem;
            overflow-y: scroll;
            }
            .navbar {
            width: 100vw;
            height: 7.2rem;
           /* background-color: var(--TransparentBlue);*/
           background-color: rgba(11, 24, 76, 1);
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            align-items: center;
            position: fixed;
            z-index: 1000;
            top: 0;
            right: 0;
            }
            .navbar .left {
            grid-column: 1 / 3;
            }
            .navbar .left h1 {
            font-size: 2.5rem;
            font-weight: 700;
            letter-spacing: -.5px;
            color: var(--dark);
            text-align: center;
            text-transform: uppercase;
            }
            .navbar .right {
            grid-column: 3 / -1;
            display: flex;
            padding: 0rem 2rem;
            justify-content: flex-end;
            }
            .emp_form label{
            color: var(--TransparentBlue);
            }
            .navbar .right .btn {
            width: 15rem;
            cursor: pointer;
            height: 4rem;
            font-weight: 700;
            letter-spacing: 1px;
            margin-right: 2rem;
            outline: none;
            border: none;
            border-radius: 0.5rem;
            font-size: 1.6rem;
            color: var(--TransparentBlue);
            border: 1px solid var(--dark-grey);
            background-color: #fff;
            transition: all .3s linear;
            }
            textarea {
            resize: none !important;
            }
            .navbar .right .btn:hover {
            background-color: var(--TransparentBlue);
            color: var(--light);
            }
            .form_div {
            width: 90%;
            min-height: 70%;
            background-color: var(--light);
            margin: 5rem auto;
            border-radius: 2rem;
            }
            .form {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            padding: 1rem 5rem 2rem 5rem;
            row-gap: 3rem;
            column-gap: 6rem;
            }
            .form label {
            font-size: 1.6rem;
            font-weight: 400;
            /*color: #888; */
            color: var(--TransparentBlue);
            }
            .form .input,
            .form select {
            width: 100%;
            font-size: 1.6rem;
            padding-left: .5rem;
            color: var(--TransparentBlue);
            height: 5rem;
            margin-top: 1rem;
            outline: none;
            border: 1px solid var(--grey);
            border-radius: 1rem;
            transition: all .15s;
            position: relative;
            }
            .form .input:focus,
            .form textarea:focus {
                border: 2px solid var(--blue);
            }
            .form .button_container {
            grid-column: 1/-1;
            margin-top: 5rem;
            display: flex;
            align-items: center;
            justify-content: center;
            }
            .form .edit_button_container {
            grid-column: 1/-1;
            display: flex;
            align-items: center;
            justify-content: center;
            }
            .address {
            grid-column: 1/-1;
            }
            .address textarea {
            width: 100%;
            height: 5rem;
            outline: none;
            margin-top: 1rem;
            border: 1px solid var(--grey);
            border-radius: 1rem;
            }
            .button_container button  {
            padding: 1rem 2rem;
            cursor: pointer;
            font-size: 1.6rem;
            font-weight: 700;
            letter-spacing: 1px;
            color: #fff;
            outline: none;
            border: none;
            background-color: var(--TransparentBlue);
            border-radius: .6rem;
            margin-right: 2rem;
            }
            .edit_button_container button  {
            width: 12rem;
            cursor: pointer;
            height: 4rem;
            font-size: 1.6rem;
            font-weight: 700;
            letter-spacing: 1px;
            color: #fff;
            outline: none;
            border: none;
            background-color: var(--TransparentBlue);
            border-radius: .6rem;
            margin-right: 2rem;
            }
            .checkbox {
            display: flex;
            align-items: center;
            justify-content: space-between;
            }
            .input_div_group {
            background-color:#eee;
            color:#fff;
            grid-column: 1/-1;
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            row-gap: 3rem;
            column-gap: 6rem;
            border-radius: 2rem;
            padding: 2rem 5rem 4rem 5rem;
            }
            .btn-container {
            grid-column: 1/-1;
            display: flex;
            align-items: center;
            justify-content: flex-end;
            padding: 0rem;
            }
            .edit-btn-section {
            grid-column: 1/-1;
            display: flex;
            align-items: center;
            margin-top:5rem;
            justify-content: space-between;
            padding: 0rem;
            }
            .btn-container_prevNext{
            grid-column: 1/-1;
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 1rem 2rem;
            }
            .input_div_group .button_container {
            margin-top: 0;
            }
            .input_checkbox_div {
            grid-column: 1/-1;
            display: flex;
            align-items: center;
            justify-content: flex-start
            }
            .input_checkbox_div label {
            width: 80% !important;
            margin-left: 2rem;
            font-size: 1.6rem;
            }
            .checkbox input,
            .input_checkbox_div input {
            width: 3rem !important;
            }
            .mailingInfo {
            grid-column: 1/-1;
            }
            .employee_section,
            .kyc_section,
            .family_section,
            .education_section,
            .workexp_section ,
            .checklist_section,
            .preview_section,
            .submission_section
            {
                display: none !important;
            }
            .active {
            display: block !important; 
            }
            .disablebtn {
            display: none;
            }
            select:disabled {
            background-color: #fff;
            cursor: not-allowed;
            }
            .inputdisabled {
            background-color: #fff !important;
            border: none !important;
            cursor: not-allowed
            }
            .education_section .hidden{
            display: none;
            }
            /* document checklist style */
            .document_checklist_table{
            font-size: 1.6rem;
            border-collapse: collapse;
            }
            .document_checklist_table h2{
            text-align: center;
            }
            .checklistSaveBtn{
            width: 12rem;
            height: 4rem;
            font-size: 1.6rem;
            font-weight: 700;
            letter-spacing: 1px;
            color: #fff;
            outline: none;
            border: none;
            background-color: var(--TransparentBlue) !important;
            border-radius: .6rem;
            margin-right: 2rem;
            margin-left:40%;
            margin-top:1rem;
            }
            .document_checklist_table table {
            width: 100%;
            border-collapse: collapse;
            margin-bottom: 20px;
            }
            .document_checklist_table th, td {
            border: 1px solid #ddd;
            padding: 8px;
            text-align: left;
            }
            .document_checklist_table th {
            background-color: #f2f2f2;
            }
            /* end of document checklist */
            .buffer {
            position: absolute;
            width: 100vw;
            height: 100vh;
            top: 0;
            left: 0;
            z-index: 1000;
            background-color: rgba(0, 0, 0, .5);
            display: none;
            }
            .wrapper {
            position: absolute;
            left: 50%;
            top: 50%;
            margin: -100px;
            width: 200px;
            height: 200px;
            background-color: transparent;
            border: none;
            }
            .wrapper .box-wrap {
            width: 70%;
            height: 70%;
            margin: calc((100% - 70%)/2) calc((100% - 70%)/2);
            position: relative;
            transform: rotate(-45deg);
            }
            .wrapper .box-wrap .box {
            width: 100%;
            height: 100%;
            position: absolute;
            left: 0;
            top: 0;
            background: rgba(135, 0, 0, 0.6);
            background: linear-gradient(to right, #141562, #486FBC, #EAB5A1, #8DD6FF, #4973C9, #D07CA7, #F4915E, #F5919E, #B46F89, #141562, #486FBC);
            background-position: 0% 50%;
            background-size: 1000% 1000%;
            visibility: hidden;
            }
            .wrapper .box-wrap .box.one {
            -webkit-animation: moveGradient 15s infinite, oneMove 3.5s infinite;
            animation: moveGradient 15s infinite, oneMove 3.5s infinite;
            }
            .wrapper .box-wrap .box.two {
            -webkit-animation: moveGradient 15s infinite, twoMove 3.5s 0.15s infinite;
            animation: moveGradient 15s infinite, twoMove 3.5s 0.15s infinite;
            }
            .wrapper .box-wrap .box.three {
            -webkit-animation: moveGradient 15s infinite, threeMove 3.5s 0.3s infinite;
            animation: moveGradient 15s infinite, threeMove 3.5s 0.3s infinite;
            }
            .wrapper .box-wrap .box.four {
            -webkit-animation: moveGradient 15s infinite, fourMove 3.5s 0.575s infinite;
            animation: moveGradient 15s infinite, fourMove 3.5s 0.575s infinite;
            }
            .wrapper .box-wrap .box.five {
            -webkit-animation: moveGradient 15s infinite, fiveMove 3.5s 0.725s infinite;
            animation: moveGradient 15s infinite, fiveMove 3.5s 0.725s infinite;
            }
            .wrapper .box-wrap .box.six {
            -webkit-animation: moveGradient 15s infinite, sixMove 3.5s 0.875s infinite;
            animation: moveGradient 15s infinite, sixMove 3.5s 0.875s infinite;
            }
            @-webkit-keyframes moveGradient {
            to {
            background-position: 100% 50%;
            }
            }
            @keyframes moveGradient {
            to {
            background-position: 100% 50%;
            }
            }
            @-webkit-keyframes oneMove {
            0% {
            visibility: visible;
            -webkit-clip-path: inset(0% 35% 70% round 5%);
            clip-path: inset(0% 35% 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            14.2857% {
            -webkit-clip-path: inset(0% 35% 70% round 5%);
            clip-path: inset(0% 35% 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            28.5714% {
            -webkit-clip-path: inset(35% round 5%);
            clip-path: inset(35% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            42.8571% {
            -webkit-clip-path: inset(35% 70% 35% 0 round 5%);
            clip-path: inset(35% 70% 35% 0 round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            57.1428% {
            -webkit-clip-path: inset(35% 70% 35% 0 round 5%);
            clip-path: inset(35% 70% 35% 0 round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            71.4285% {
            -webkit-clip-path: inset(0% 70% 70% 0 round 5%);
            clip-path: inset(0% 70% 70% 0 round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            85.7142% {
            -webkit-clip-path: inset(0% 70% 70% 0 round 5%);
            clip-path: inset(0% 70% 70% 0 round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            100% {
            -webkit-clip-path: inset(0% 35% 70% round 5%);
            clip-path: inset(0% 35% 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            }
            @keyframes oneMove {
            0% {
            visibility: visible;
            -webkit-clip-path: inset(0% 35% 70% round 5%);
            clip-path: inset(0% 35% 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            14.2857% {
            -webkit-clip-path: inset(0% 35% 70% round 5%);
            clip-path: inset(0% 35% 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            28.5714% {
            -webkit-clip-path: inset(35% round 5%);
            clip-path: inset(35% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            42.8571% {
            -webkit-clip-path: inset(35% 70% 35% 0 round 5%);
            clip-path: inset(35% 70% 35% 0 round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            57.1428% {
            -webkit-clip-path: inset(35% 70% 35% 0 round 5%);
            clip-path: inset(35% 70% 35% 0 round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            71.4285% {
            -webkit-clip-path: inset(0% 70% 70% 0 round 5%);
            clip-path: inset(0% 70% 70% 0 round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            85.7142% {
            -webkit-clip-path: inset(0% 70% 70% 0 round 5%);
            clip-path: inset(0% 70% 70% 0 round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            100% {
            -webkit-clip-path: inset(0% 35% 70% round 5%);
            clip-path: inset(0% 35% 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            }
            @-webkit-keyframes twoMove {
            0% {
            visibility: visible;
            -webkit-clip-path: inset(0% 70% 70% 0 round 5%);
            clip-path: inset(0% 70% 70% 0 round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            14.2857% {
            -webkit-clip-path: inset(0% 70% 70% 0 round 5%);
            clip-path: inset(0% 70% 70% 0 round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            28.5714% {
            -webkit-clip-path: inset(0% 35% 70% round 5%);
            clip-path: inset(0% 35% 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            42.8571% {
            -webkit-clip-path: inset(0% 35% 70% round 5%);
            clip-path: inset(0% 35% 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            57.1428% {
            -webkit-clip-path: inset(35% round 5%);
            clip-path: inset(35% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            71.4285% {
            -webkit-clip-path: inset(35% 70% 35% 0 round 5%);
            clip-path: inset(35% 70% 35% 0 round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            85.7142% {
            -webkit-clip-path: inset(35% 70% 35% 0 round 5%);
            clip-path: inset(35% 70% 35% 0 round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            100% {
            -webkit-clip-path: inset(0% 70% 70% 0 round 5%);
            clip-path: inset(0% 70% 70% 0 round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            }
            @keyframes twoMove {
            0% {
            visibility: visible;
            -webkit-clip-path: inset(0% 70% 70% 0 round 5%);
            clip-path: inset(0% 70% 70% 0 round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            14.2857% {
            -webkit-clip-path: inset(0% 70% 70% 0 round 5%);
            clip-path: inset(0% 70% 70% 0 round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            28.5714% {
            -webkit-clip-path: inset(0% 35% 70% round 5%);
            clip-path: inset(0% 35% 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            42.8571% {
            -webkit-clip-path: inset(0% 35% 70% round 5%);
            clip-path: inset(0% 35% 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            57.1428% {
            -webkit-clip-path: inset(35% round 5%);
            clip-path: inset(35% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            71.4285% {
            -webkit-clip-path: inset(35% 70% 35% 0 round 5%);
            clip-path: inset(35% 70% 35% 0 round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            85.7142% {
            -webkit-clip-path: inset(35% 70% 35% 0 round 5%);
            clip-path: inset(35% 70% 35% 0 round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            100% {
            -webkit-clip-path: inset(0% 70% 70% 0 round 5%);
            clip-path: inset(0% 70% 70% 0 round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            }
            @-webkit-keyframes threeMove {
            0% {
            visibility: visible;
            -webkit-clip-path: inset(35% 70% 35% 0 round 5%);
            clip-path: inset(35% 70% 35% 0 round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            14.2857% {
            -webkit-clip-path: inset(35% 70% 35% 0 round 5%);
            clip-path: inset(35% 70% 35% 0 round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            28.5714% {
            -webkit-clip-path: inset(0% 70% 70% 0 round 5%);
            clip-path: inset(0% 70% 70% 0 round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            42.8571% {
            -webkit-clip-path: inset(0% 70% 70% 0 round 5%);
            clip-path: inset(0% 70% 70% 0 round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            57.1428% {
            -webkit-clip-path: inset(0% 35% 70% round 5%);
            clip-path: inset(0% 35% 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            71.4285% {
            -webkit-clip-path: inset(0% 35% 70% round 5%);
            clip-path: inset(0% 35% 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            85.7142% {
            -webkit-clip-path: inset(35% round 5%);
            clip-path: inset(35% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            100% {
            -webkit-clip-path: inset(35% 70% 35% 0 round 5%);
            clip-path: inset(35% 70% 35% 0 round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            }
            @keyframes threeMove {
            0% {
            visibility: visible;
            -webkit-clip-path: inset(35% 70% 35% 0 round 5%);
            clip-path: inset(35% 70% 35% 0 round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            14.2857% {
            -webkit-clip-path: inset(35% 70% 35% 0 round 5%);
            clip-path: inset(35% 70% 35% 0 round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            28.5714% {
            -webkit-clip-path: inset(0% 70% 70% 0 round 5%);
            clip-path: inset(0% 70% 70% 0 round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            42.8571% {
            -webkit-clip-path: inset(0% 70% 70% 0 round 5%);
            clip-path: inset(0% 70% 70% 0 round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            57.1428% {
            -webkit-clip-path: inset(0% 35% 70% round 5%);
            clip-path: inset(0% 35% 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            71.4285% {
            -webkit-clip-path: inset(0% 35% 70% round 5%);
            clip-path: inset(0% 35% 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            85.7142% {
            -webkit-clip-path: inset(35% round 5%);
            clip-path: inset(35% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            100% {
            -webkit-clip-path: inset(35% 70% 35% 0 round 5%);
            clip-path: inset(35% 70% 35% 0 round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            }
            @-webkit-keyframes fourMove {
            0% {
            visibility: visible;
            -webkit-clip-path: inset(35% 0% 35% 70% round 5%);
            clip-path: inset(35% 0% 35% 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            14.2857% {
            -webkit-clip-path: inset(35% 0% 35% 70% round 5%);
            clip-path: inset(35% 0% 35% 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            28.5714% {
            -webkit-clip-path: inset(35% round 5%);
            clip-path: inset(35% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            42.8571% {
            -webkit-clip-path: inset(70% 35% 0% 35% round 5%);
            clip-path: inset(70% 35% 0% 35% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            57.1428% {
            -webkit-clip-path: inset(70% 35% 0% 35% round 5%);
            clip-path: inset(70% 35% 0% 35% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            71.4285% {
            -webkit-clip-path: inset(70% 0 0 70% round 5%);
            clip-path: inset(70% 0 0 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            85.7142% {
            -webkit-clip-path: inset(70% 0 0 70% round 5%);
            clip-path: inset(70% 0 0 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            100% {
            -webkit-clip-path: inset(35% 0% 35% 70% round 5%);
            clip-path: inset(35% 0% 35% 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            }
            @keyframes fourMove {
            0% {
            visibility: visible;
            -webkit-clip-path: inset(35% 0% 35% 70% round 5%);
            clip-path: inset(35% 0% 35% 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            14.2857% {
            -webkit-clip-path: inset(35% 0% 35% 70% round 5%);
            clip-path: inset(35% 0% 35% 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            28.5714% {
            -webkit-clip-path: inset(35% round 5%);
            clip-path: inset(35% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            42.8571% {
            -webkit-clip-path: inset(70% 35% 0% 35% round 5%);
            clip-path: inset(70% 35% 0% 35% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            57.1428% {
            -webkit-clip-path: inset(70% 35% 0% 35% round 5%);
            clip-path: inset(70% 35% 0% 35% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            71.4285% {
            -webkit-clip-path: inset(70% 0 0 70% round 5%);
            clip-path: inset(70% 0 0 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            85.7142% {
            -webkit-clip-path: inset(70% 0 0 70% round 5%);
            clip-path: inset(70% 0 0 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            100% {
            -webkit-clip-path: inset(35% 0% 35% 70% round 5%);
            clip-path: inset(35% 0% 35% 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            }
            @-webkit-keyframes fiveMove {
            0% {
            visibility: visible;
            -webkit-clip-path: inset(70% 0 0 70% round 5%);
            clip-path: inset(70% 0 0 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            14.2857% {
            -webkit-clip-path: inset(70% 0 0 70% round 5%);
            clip-path: inset(70% 0 0 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            28.5714% {
            -webkit-clip-path: inset(35% 0% 35% 70% round 5%);
            clip-path: inset(35% 0% 35% 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            42.8571% {
            -webkit-clip-path: inset(35% 0% 35% 70% round 5%);
            clip-path: inset(35% 0% 35% 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            57.1428% {
            -webkit-clip-path: inset(35% round 5%);
            clip-path: inset(35% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            71.4285% {
            -webkit-clip-path: inset(70% 35% 0% 35% round 5%);
            clip-path: inset(70% 35% 0% 35% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            85.7142% {
            -webkit-clip-path: inset(70% 35% 0% 35% round 5%);
            clip-path: inset(70% 35% 0% 35% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            100% {
            -webkit-clip-path: inset(70% 0 0 70% round 5%);
            clip-path: inset(70% 0 0 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            }
            @keyframes fiveMove {
            0% {
            visibility: visible;
            -webkit-clip-path: inset(70% 0 0 70% round 5%);
            clip-path: inset(70% 0 0 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            14.2857% {
            -webkit-clip-path: inset(70% 0 0 70% round 5%);
            clip-path: inset(70% 0 0 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            28.5714% {
            -webkit-clip-path: inset(35% 0% 35% 70% round 5%);
            clip-path: inset(35% 0% 35% 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            42.8571% {
            -webkit-clip-path: inset(35% 0% 35% 70% round 5%);
            clip-path: inset(35% 0% 35% 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            57.1428% {
            -webkit-clip-path: inset(35% round 5%);
            clip-path: inset(35% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            71.4285% {
            -webkit-clip-path: inset(70% 35% 0% 35% round 5%);
            clip-path: inset(70% 35% 0% 35% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            85.7142% {
            -webkit-clip-path: inset(70% 35% 0% 35% round 5%);
            clip-path: inset(70% 35% 0% 35% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            100% {
            -webkit-clip-path: inset(70% 0 0 70% round 5%);
            clip-path: inset(70% 0 0 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            }
            @-webkit-keyframes sixMove {
            0% {
            visibility: visible;
            -webkit-clip-path: inset(70% 35% 0% 35% round 5%);
            clip-path: inset(70% 35% 0% 35% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            14.2857% {
            -webkit-clip-path: inset(70% 35% 0% 35% round 5%);
            clip-path: inset(70% 35% 0% 35% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            28.5714% {
            -webkit-clip-path: inset(70% 0 0 70% round 5%);
            clip-path: inset(70% 0 0 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            42.8571% {
            -webkit-clip-path: inset(70% 0 0 70% round 5%);
            clip-path: inset(70% 0 0 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            57.1428% {
            -webkit-clip-path: inset(35% 0% 35% 70% round 5%);
            clip-path: inset(35% 0% 35% 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            71.4285% {
            -webkit-clip-path: inset(35% 0% 35% 70% round 5%);
            clip-path: inset(35% 0% 35% 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            85.7142% {
            -webkit-clip-path: inset(35% round 5%);
            clip-path: inset(35% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            100% {
            -webkit-clip-path: inset(70% 35% 0% 35% round 5%);
            clip-path: inset(70% 35% 0% 35% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            }
            @keyframes sixMove {
            0% {
            visibility: visible;
            -webkit-clip-path: inset(70% 35% 0% 35% round 5%);
            clip-path: inset(70% 35% 0% 35% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            14.2857% {
            -webkit-clip-path: inset(70% 35% 0% 35% round 5%);
            clip-path: inset(70% 35% 0% 35% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            28.5714% {
            -webkit-clip-path: inset(70% 0 0 70% round 5%);
            clip-path: inset(70% 0 0 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            42.8571% {
            -webkit-clip-path: inset(70% 0 0 70% round 5%);
            clip-path: inset(70% 0 0 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            57.1428% {
            -webkit-clip-path: inset(35% 0% 35% 70% round 5%);
            clip-path: inset(35% 0% 35% 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            71.4285% {
            -webkit-clip-path: inset(35% 0% 35% 70% round 5%);
            clip-path: inset(35% 0% 35% 70% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            85.7142% {
            -webkit-clip-path: inset(35% round 5%);
            clip-path: inset(35% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            100% {
            -webkit-clip-path: inset(70% 35% 0% 35% round 5%);
            clip-path: inset(70% 35% 0% 35% round 5%);
            -webkit-animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            animation-timing-function: cubic-bezier(0.86, 0, 0.07, 1);
            }
            }
            .message {
            width: 50rem;
            top: 2rem;
            left: 50%;
            transform: translateX(-50%);
            position: absolute;
            height: 8rem;
            border-radius: 2px;
            z-index: 100000;
            background-color: var(--TransparentBlue);
            display: none;
            flex-direction: column;
            }
            .progressbar {
            height: .7rem;
            background-color: red;
            border-radius: 2px;
            animation-duration: 5s;
            }
            @keyframes progressbarAnimation {
            from {
            width: 100%
            }
            to {
            width: 0%;
            }
            }
            .errormsg {
            height: calc(100% - .7rem);
            color: white;
            font-size: 1.6rem;
            font-weight: 600;
            display: flex;
            align-items: center;
            padding: 0 3rem;
            justify-content: space-between;
            }
            .cancel {
            cursor: pointer;
            }
            .verification_table {
            width: 100%;
            grid-column: 1/-1;
            border-collapse: collapse;
            margin-bottom: 20px;
            font-size: 1.6rem;
            }
            .verification_form{
            padding:0rem !important;
            }
            .verification_table th{
            font-size: 1.8rem;
            }
            .verification_table th,.verification_table td {
            border: 1px solid #ddd;
            padding: 2rem;
            text-align: left;
            }
            /* .verification_table input[type='checkbox']{
            cursor: pointer;
            } */
            .deletebtn{
            background-color: var(--secondaryColor) !important;
            }
            .cofirmdeletebtn, .notcofirmdeletebtn{
                background-color: var(--secondaryColor) !important;
            }
            .submission_section .left{
            grid-column: 1/2;
            width: 100%;
            height: 13rem;
            margin-top: 2rem;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            }
            .submission_section .right{
            grid-column: 3/-1;
            width: 100%;
            padding: 1rem;
            margin-top: 2rem;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            }
            .submission_section .middle{
            grid-column: 2/3;
            display: flex;
            align-items: center;
            justify-content: center;
            }
            .submission_section .middle .submitbtn{
            background-color: var(--TransparentBlue);
            width:22rem;
            height: 5rem;
            color:#fff;
            border: none;
            font-size: 1.6rem;
            border-radius: 10px;
            }
            .error_count , .warning_count{
            font-size: 3.6rem;
            font-weight: 700;
            color:var(--TransparentBlue);
            position: relative;
            z-index:4;
            }
            .error_count::before{
            content: " ";
            display: block;
            top:50%;
            left: 50%;
            transform: translate(-50%,-50%);
            position: absolute;
            border-radius: 50%;
            background-color: #fff;
            width: 12rem;
            height: 12rem;
            z-index: -1;
            }
            .error_count::after{
            content: " ";
            display: block;
            top:50%;
            left: 50%;
            transform: translate(-50%,-50%);
            position: absolute;
            width: 15rem;
            height: 15rem;
            border-radius: 50%;
            background-color: rgba(255, 0, 0, 0.671);
            z-index: -2;
            }
            .warning_count::before{
            content: " ";
            display: block;
            top:50%;
            left: 50%;
            transform: translate(-50%,-50%);
            position: absolute;
            border-radius: 50%;
            width: 12rem;
            height: 12rem;
            background-color: #fff;
            z-index: -1;
            }
            .warning_count::after{
            content: " ";
            display: block;
            top:50%;
            left: 50%;
            transform: translate(-50%,-50%);
            position: absolute;
            width: 15rem;
            height: 15rem;
            border-radius: 50%;
            background-color:rgba(255, 166, 0, 0.671);
            z-index: -2;
            }
            .count_span{
            margin-top:.5rem;
            z-index: 4;
            font-size: 1rem;
            font-weight: 700;
            color:var(--TransparentBlue);
            }
            .errorContents{
            grid-column: 1/-1;
            margin-top: 2rem;
            }
            .content{
            width: 100%;
            height: 4rem;
            display: flex;
            align-items: center;
            margin-top: 1rem;
            padding-left: 2rem;
            font-size: 1.6rem;
            color:#fff;
            background-color:var(--TransparentBlue);
            border-left: 5px solid red;
            }
            .respective_errors{
                margin-top: .3rem;
                font-size: 1.2rem;
                color:red;
            }
            .errorBorder{
                border:2px solid red !important;
            }
            .deleteConfirm{
                grid-column: 1/-1;
                margin-top: 5rem;
                display: none;
                align-items: center;
                justify-content: center;
            }
            .deleteConfirm button  {
                width: 12rem;
                cursor: pointer;
                height: 4rem;
                font-size: 1.6rem;
                font-weight: 700;
                letter-spacing: 1px;
                color: #fff;
                outline: none;
                border: none;
                border-radius: .6rem;
                margin-right: 2rem;
            }
            .deleteConfirm p{
                color:var(--TransparentBlue);
                font-size: 1.6rem;
                margin-right: 1rem;
            }
            .deleteConfirm .notcofirmdeletebtn{
                background-color: green !important;
            }
/* .mainSidebar{
    width: 100%;
    height: 100vh;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    font-family: pop;
}
.head{
    text-align: center;
}
.head_1{
    font-size: 30px;
    font-weight: 600;
    color: #333;
}
.head_1 span{
    color: #ff4732;
}
.head_2{
    font-size: 16px;
    font-weight: 600;
    color: #333;
    margin-top: 3px;
}
ul{
    display: flex;
    flex-direction: column;
    margin-top: 80px;
}
ul li{
    list-style: none;
    display: flex;
    flex-direction: column;
    align-items: center;
}
ul li .icon{
    font-size: 35px;
    color: #ff4732;
    margin: 0 60px;
}
ul li .text{
    font-size: 14px;
    font-weight: 600;
    color: #ff4732;
}

/* Progress Div Css  */

/* ul li .progress{
    width: 30px;
    height: 30px;
    border-radius: 50%;
    background-color: rgba(68, 68, 68, 0.781);
    margin: 14px 0;
    display: grid;
    place-items: center;
    color: #fff;
    position: relative;
    cursor: pointer;
} */
/*
.one::after{
    width: 0;
    height: 0;
}
ul li .progress .uil{
    display: none;
}
ul li .progress p{
    font-size: 13px;
}



ul li .active{
    background-color: #ff4732;
    display: grid;
    place-items: center;
}
li .active::after{
    background-color: #ff4732;
}
ul li .active p{
    display: none;
}
ul li .active .uil{
    font-size: 20px;
    display: flex;
}



@media (max-width: 980px) {
    ul{
        flex-direction: column;
    }
    ul li{
        flex-direction: row;
    }
    ul li .progress{
        margin: 0 30px;
    }
    .progress::after{
        width: 5px;
        height: 55px;
        bottom: 30px;
        left: 50%;
        transform: translateX(-50%);
        z-index: -1;
    }
    .one::after{
        height: 0;
    }
    ul li .icon{
        margin: 15px 0;
    }
}

@media (max-width:600px) {
    .head .head_1{
        font-size: 24px;
    }
    .head .head_2{
        font-size: 16px;
   } */
} 
/* step progress */
.Sidebarwrapper {
  width: 330px;
  font-family: 'Helvetica';
  font-size: 14px;
  border: 1px solid #CCC;
  margin-left:0.5rem;
}
.Sidebarwrapper li{
    font-size:1.5rem;
}

.StepProgress {
  position: relative;
  padding-left: 50px;
  list-style: none;

}

/* .StepProgress::before {
  display: inline-block;
  content: '';
  position: absolute;
  top: 0;
  left: 15px;
  width: 10px;
  height: 100%;
  border-left: 5px solid #CCC;
} */

.StepProgress-item {
  position: relative;
  /* counter-increment: list; */
}

.StepProgress-item:not(:last-child) {
  padding-bottom: 40px;
}

.StepProgress-item::before {
  display: inline-block;
  content: '';
  position: absolute;
  left: -30px;
  height: 100%;
  width: 5px;
  background-color: #FFF;
}

.StepProgress-item::after {
  margin-top: -7px;
  content: '';
  content:counter(list);
  display: inline-block;
  position: absolute;
  top: 0;
  left: -42px;
  width: 25px;
  height: 25px;
  border: 2px solid #CCC;
  border-radius: 50%;
  background-color: #FFF;
}
.green-stage{
    position: relative;
    /* counter-increment: list; */
}
.green-stage:not(:last-child) {
  padding-bottom: 40px;
}
.green-stage::before {
  display: inline-block;
  content: '';
  position: absolute;
  left: -30px;
  height: 100%;
  width: 5px;
  background-color: green;
}

.green-stage::after {
  margin-top: -7px;
  content: '';
  display: inline-block;
  position: absolute;
  top: 0;
  left: -42px;
  width: 25px;
  height: 25px;
  border: 2px solid green;
  border-radius: 50%;
  background-color: green;
}
.yellow-stage{
    position: relative;
    /* counter-increment: list; */
}
.yellow-stage:not(:last-child) {
  padding-bottom: 40px;
}
.yellow-stage::before {
  display: inline-block;
  content: '';
  position: absolute;
  left: -30px;
  height: 100%;
  width: 5px;
  background-color:#fff;
}

.yellow-stage::after {
  margin-top: -7px;
  content: '';
  display: inline-block;
  position: absolute;
  top: 0;
  left: -42px;
  width: 25px;
  height: 25px;
  border: 2px solid #F7B500;
  border-radius: 50%;
  background-color: #F7B500;
}
.StepProgress-item.is-done::before {
  border-left: 5px solid green;
}

.StepProgress-item.is-done::after {
  content: "✔";
  font-size: 10px;
  color: #FFF;
  text-align: center;
  border: 2px solid green;
  background-color: green;
}

.StepProgress-item.current::before {
  border-left: 2px solid #FFF;
}

.StepProgress-item.current::after {
  /* margin-top:-7px; */
  content: counter(list);
  padding-top: 1px;
  width: 25px;
  height: 25px;
  top: 1px;
  left: -42px;
  font-size: 14px;
  text-align: center;
  color: green;
  border: 2px solid #FFC000;
  background-color: #FFC000;
}

.StepProgress strong {
  display: block;
}


/* Image  */

        .image-container {
            position: absolute;
            left: 0%;
            transform: translate(-50%, -50%);
              }

        .image-container img {
            width: 300px; /* Set a specific width for the images */
            height: 100px;
            position: absolute;
            top: 0;
            left: 0;
            z-index: 1;
        }

</style>
    </head>
      <body>
         <div class="message">
            <div class="errormsg">
               <p class="error"></p>
               <i class="fa-solid fa-xmark cancel"></i>
            </div>
            <div class="progressbar"></div>
         </div>
         <div class="buffer">
            <div class="wrapper">
               <div class="box-wrap">
                  <div class="box one"></div>
                  <div class="box two"></div>
                  <div class="box three"></div>
                  <div class="box four"></div>
                  <div class="box five"></div>
                  <div class="box six"></div>
               </div>
            </div>
         </div>
        <div class="sidebar">
            <div class="Sidebarwrapper" style="margin-top:200px;">
                <ul class="StepProgress">
                  <li class="StepProgress-item employeeDetail"><strong>Employee Details</strong></li>
                  <li class="StepProgress-item kycDetail "><strong>KYC Details</strong></li>
                  <li class="StepProgress-item familyDetail"><strong>Family Details</strong> </li>
                  <li class="StepProgress-item educationDetail"><strong>Education Details</strong></li>
                  <li class="StepProgress-item workExperienceDetail"><strong>Work Experience</strong></li>
                  <li class="StepProgress-item documentChecklistDetail"><strong>Document Checklist</strong></li>
                  <li class="StepProgress-item previewEmployeeDetail"><strong>Preview Employee Details</strong></li>
                  <!-- <li class="StepProgress-item Submission"><strong>Submission</strong></li> -->
                </ul>
            </div>

            <!-- <div class="mainSidebar">

                <div class="head">
                    <p class="head_1">Animated Step <span>Progress Bar</span></p>
                    <p class="head_2">Using Html, Css  JavaScript</p>
                </div>
        
                <ul>
                    <li>
                        <i class="icon uil uil-capture"></i>
                        <div class="progress one">
                            <p>1</p>
                            <i class="uil uil-check"></i>
                        </div>
                        <p class="text">Add To Cart</p>
                    </li>
                    <li>
                        <i class="icon uil uil-clipboard-notes"></i>
                        <div class="progress two">
                            <p>2</p>
                            <i class="uil uil-check"></i>
                        </div>
                        <p class="text">Fill Details</p>
                    </li>
                    <li>
                        <i class="icon uil uil-credit-card"></i>
                        <div class="progress three">
                            <p>3</p>
                            <i class="uil uil-check"></i>
                        </div>
                        <p class="text">Make Payment</p>
                    </li>
                    <li>
                        <i class="icon uil uil-exchange"></i>
                        <div class="progress four">
                            <p>4</p>
                            <i class="uil uil-check"></i>
                        </div>
                        <p class="text">Order in Progress</p>
                    </li>
                    <li>
                        <i class="icon uil uil-map-marker"></i>
                        <div class="progress five">
                            <p>5</p>
                            <i class="uil uil-check"></i>
                        </div>
                        <p class="text">Order Arrived</p>
                    </li>
                </ul>
            </div>   -->      
        </div>
        <div class="main">
            <nav class="navbar" style="z-index:9999;">
               <div class="left">
                <div class="image-container">
                    <img src="{!URLFOR($Resource.Novigo, '')}" alt="Image Description" style=" margin-left: -1rem; margin-top:-45px;scale:0.85;"/>
                    <img src="{!URLFOR($Resource.crackersGif, '')}" alt="Image Description" style=" margin-left: -1rem; margin-top:-55px;scale:0.85;"/>
                    </div>
                </div>
                <div class="right">
                    <button class="btn refresh-btn">Refresh</button>
                    <button class="btn logout-btn">Logout</button>
                </div>
            </nav>
            <section class="form_div employee_section  active">
               <form action="" class="form emp_form">
                    <div class="input_div">
                        <label for="">First name</label><br/>
                        <input class="input " type="text" name="" id="Emp_firstName__c"   />
                        <p class="respective_errors" id="Emp_firstName__c_error"></p>
                    </div>
                    <div class="input_div">
                        <label for="">Middle name</label><br/>
                        <input class="input" type="text" name="" id="Emp_midName__c"  required="true"/>
                        <p class="respective_errors" id="Emp_midName__c_error"></p>
                    </div>
                    <div class="input_div">
                        <label for="">Last name</label><br/>
                        <input class="input" type="text" name="" id="Emp_lastName__c" />
                        <p class="respective_errors" id="Emp_lastName__c_error"></p>
                    </div>
                    <div class="input_div ">
                        <label for="">Date of Birth</label><br/>
                        <input class="input" type="date" name="" id="Emp_dateOfBirth__c" />
                        <p class="respective_errors" id="Emp_dateOfBirth__c_error"></p>
                    </div>
                    <div class="input_div">
                        <label for="">Marital Status</label><br/>
                        <select name="Marital Status" id="Emp_maritalStatus__c">
                            <option value="Married">Married</option>
                            <option value="Unmarried">Unmarried</option>
                            <option value="Other">Other</option>
                        </select>
                        <p class="respective_errors" id="Emp_maritalStatus__c_error"></p>
                    </div>
                    <div class="input_div">
                        <label for="">Gender</label><br/>
                        <select name="Gender" id="Emp_gender__c">
                            <option value="Male">Male</option>
                            <option value="Female">Female</option>
                        </select>
                        <p class="respective_errors" id="Emp_gender__c_error"></p>
                    </div>
                    <div class="input_div">
                        <label for="">Blood Group</label><br/>
                        <select name="" id="Emp_bloodGroup__c">
                            <option value="A+ve">A+ve</option>
                            <option value="A-ve">A-ve</option>
                            <option value="B+ve">B+ve</option>
                            <option value="B-ve">B-ve</option>
                            <option value="AB+ve">AB+ve</option>
                            <option value="AB-ve">AB-ve</option>
                            <option value="O+ve">O+ve</option>
                            <option value="O-ve">O-ve</option>
                        </select>
                        <p class="respective_errors" id="Emp_bloodGroup__c_error"></p>
                    </div>
                    <div class="input_div span-2">
                        <label for="">Nationality</label><br/>
                        <select name="" id="Emp_nationality__c">
                            <option value="INDIAN">Indian</option>
                            <option value="AMERICAN">American</option>
                        </select>
                        <p class="respective_errors" id="Emp_nationality__c_error"></p>
                    </div>
                    <div class="input_div">
                        <label for="">Email id</label><br/>
                        <input class="input" type="email" name="" id="Emp_emailId__c" />
                        <p class="respective_errors" id="Emp_emailId__c_error"></p>
                    </div>
                    <div class="input_div">
                        <label for="">Telephone</label><br/>
                        <input class="input" type="text"  name="" id="Emp_telephone__c" />
                    </div>
                    <div class="input_div">
                        <label for="">Mobile</label><br/>
                        <input class="input" type="text" name="" id="Emp_mobilePhone__c" />
                        <p class="respective_errors" id="Emp_mobilePhone__c_error"></p>
                    </div>
                    <div class="input_div">
                        <label for="">T shirt Size</label><br/>
                        <select name="T Shirt Size" id="Emp_tShirtSize__c">
                            <option value="XS">XS</option>
                            <option value="S">S</option>
                            <option value="M">M</option>
                            <option value="L">L</option>
                            <option value="XL">XL</option>
                            <option value="XXL">XXL</option>
                        </select>
                    </div>
                    <div class=" address">
                        <label for="">Residential Address / Permanent Address</label><br/>
                        <input name="" class="input" id="Emp_resAddress__c" cols="30" rows="10" />
                        <p class="respective_errors" id="Emp_resAddress__c_error"></p>
                    </div>
                    <div class="input_div">
                        <label for="">City</label><br/>
                        <input class="input" type="text" name="" id="Emp_resCity__c" />
                        <p class="respective_errors" id="Emp_resCity__c_error"></p>
                    </div>
                    <div class="input_div">
                        <label for="">State</label><br/>
                        <input class="input" type="text" name="" id="Emp_resState__c" />
                        <p class="respective_errors" id="Emp_resState__c_error"></p>
                    </div>
                    <div class="input_div">
                        <label for="">Zipcode</label><br/>
                        <input class="input" type="text" name="" id="Emp_resZipCode__c" />
                        <p class="respective_errors" id="Emp_resZipCode__c_error"></p>
                    </div>
                    <div class="input_div input_checkbox_div">
                        <div>
                            <input class="input mailing_checkbox" type="checkbox" name="" id="Emp_commonAddressCheck__c" />
                        </div>
                        <label for=""> Residential address same as Mailing address?</label><br/>
                    </div>
                    <div class=" address mailing_div">
                        <label for="">Mailing Address</label><br/>
                        <input name="" class="input" id="Emp_commAddress__c" cols="30" rows="10" />
                    </div>
                    <div class="input_div mailing_div">
                        <label for="">Mailing City</label><br/>
                        <input class="input" type="text" name="" id="Emp_commCity__c" />
                    </div>
                    <div class="input_div mailing_div">
                        <label for="">Mailing State</label><br/>
                        <input class="input" type="text" name="" id="Emp_commState__c" />
                    </div>
                    <div class="input_div mailing_div">
                        <label for="">Mailing Zipcode</label><br/>
                        <input class="input" type="text" name="" id="Emp_commZipCode__c" />
                    </div>
                    <div class="input_div">
                        <label for="">Food Preference</label><br/>
                        <select name="Food Preferences" id="Emp_foodPref__c">
                            <option value="Veg">Veg</option>
                            <option value="Non Veg">Non Veg</option>
                        </select>
                    </div>
                    <div></div>
                    <div></div>
                    <div class="input_div">
                        <label for="">Language 1</label><br/>
                        <input class="input" type="text" name="" id="Emp_lang1__c" /> <br/>
                        <div class="checkbox">
                            <div>
                            <input class="input" type="checkbox" name="" id="Emp_lang1Read__c" />
                            </div>
                            <label for="">Read</label><br/>
                            <div>
                            <input class="input" type="checkbox" name="" id="Emp_lang1Write__c" />
                            </div>
                            <label for="">Write</label><br/>
                            <div>
                            <input class="input" type="checkbox" name="" id="Emp_lang1Speak__c" />
                            </div>
                            <label for="">Speak</label><br/>
                        </div>
                    </div>
                    <div class="input_div">
                        <label for="">Language 2</label><br/>
                        <input class="input" type="text" name="" id="Emp_lang2__c" /> <br/>
                        <div class="checkbox">
                            <input class="input" type="checkbox" name="" id="Emp_lang2Read__c" />
                            <label for="">Read</label><br/>
                            <input class="input" type="checkbox" name="" id="Emp_lang2Write__c" />
                            <label for="">Write</label><br/>
                            <input class="input" type="checkbox" name="" id="Emp_lang2Speak__c" />
                            <label for="">Speak</label><br/>
                        </div>
                    </div>
                    <div class="input_div">
                        <label for="">Language 3</label><br/>
                        <input class="input" type="text" name="" id="Emp_lang3__c" /> <br/>
                        <div class="checkbox">
                            <input class="input" type="checkbox" name="" id="Emp_lang3Read__c" />
                            <label for="">Read</label><br/>
                            <input class="input" type="checkbox" name="" id="Emp_lang3Write__c" />
                            <label for="">Write</label><br/>
                            <input class="input" type="checkbox" name="" id="Emp_lang3Speak__c" />
                            <label for="">Speak</label><br/>
                        </div>
                    </div>
                    <div class="input_div">
                        <label for="">Emergency Contact Name</label><br/>
                        <input class="input" type="text" name="" id="Emp_Emergency__c" />
                        <p class="respective_errors" id="Emp_Emergency__c_error"></p>
                    </div>
                    <div class="input_div">
                        <label for="">Emergency Contact Phone</label><br/>
                        <input class="input" type="text" name="" id="Emp_EmergencyContact_Phone__c" />
                        <p class="respective_errors" id="Emp_EmergencyContact_Phone__c_error"></p>
                    </div>
                    <div class="input_div">
                        <label for="">Emergency Contact Relation</label><br/>
                        <input class="input" type="text" name="" id="Emp_EmergencyContact_Relation__c" />
                        <p class="respective_errors" id="Emp_EmergencyContact_Relation__c_error"></p>

                    </div>
                    <!-- <div class="button_container">
                        <button class="savebtn">Save</button>
                    </div> -->
                    <div class="btn-container_prevNext">
                        <div class="button_container">
                            <button class="previousbtn"  style="opacity:0;">Previous</button>
                        </div>
                        <div class="button_container">
                            <button class="nextbtn employee_section_next-btn" data-goto='kyc_section'>Next</button>
                        </div>
                    </div>
                </form>
            </section>

            <section class="form_div kyc_section ">
               <form action="" class="form kyc_form">
                    <div class="btn-container">
                        <div class="button_container">
                            <button class="add">Add</button>
                        </div>
                    </div>
                    <!-- <div class="button_container">
                        <button class="savebtn">Save</button>
                    </div> -->
                    <div class="btn-container_prevNext">
                        <div class="button_container">
                            <button class="previousbtn" data-goto='employee_section'>Previous</button>
                        </div>
                        <div class="button_container">
                            <button class="nextbtn " data-goto='family_section'>Next</button>
                        </div>
                    </div>
               </form>
            </section>

            <section class="form_div family_section ">
                <form action="" class="form family_form">
                    <div class="btn-container">
                        <div class="button_container">
                            <button class="addRelation">Add</button>
                        </div>
                    </div>
                    <div class="input_div_group">
                        <div class="input_div ">
                            <label for="">Relation</label><br/>
                            <select name="Relation" id="Fi_relation">
                                <option value="Father">Father</option>
                                <option value="Mother">Mother</option>
                                <option value="Spouse">Spouse</option>
                                <option value="Son">Son</option>
                                <option value="Daughter">Daughter</option>
                            </select>
                        </div>
                        <div class="input_div">
                            <label for="">FirstName</label><br/>
                            <input class="input" type="text" name="" id="Fi_firstName" />
                        </div>
                        <div class="input_div">
                            <label for="">MiddleName</label><br/>
                            <input class="input" type="text" name="" id="Fi_middleName" />
                        </div>
                        <div class="input_div">
                            <label for="">LastName</label><br/>
                            <input class="input" type="text" name="" id="Fi_lastName" />
                        </div>
                        <div class="input_div">
                            <label for="">Date of Birth</label><br/>
                            <input class="input" type="date" name="" id="Fi_dob" />
                        </div>
                        <input class="input" type="hidden" name="" id="Fi_id" value="new" />
                        <div class="btn-container">
                            <div class="button_container">
                                <button class="deletebtn"><i class="fa-solid fa-trash" ></i></button>
                            </div>
                        </div>
                    </div>
                        <!-- <div class="button_container">
                            <button class="savebtn">Save</button>
                        </div> -->
                    <div class="btn-container_prevNext">
                        <div class="button_container">
                            <button class="previousbtn" data-goto='kyc_section'>Previous</button>
                        </div>
                        <div class="button_container">
                            <button class="nextbtn" data-goto='education_section'>Next</button>
                        </div>
                    </div>
                </form>
             </section>

            <section class="form_div education_section">
               <form action="" class="form education_form">
                    <div class="btn-container">
                        <div class="button_container">
                            <button class="addEducation">Add</button>
                        </div>
                    </div>
                        <!-- <div class="button_container">
                            <button class="savebtn">Save</button>
                        </div> -->
                    <div class="btn-container_prevNext">
                        <div class="button_container">
                            <button class="previousbtn" data-goto='family_section'>Previous</button>
                        </div>
                        <div class="button_container">
                            <button class="nextbtn" data-goto='workexp_section'>Next</button>
                        </div>
                    </div>
               </form>
            </section>

            <section class="form_div workexp_section">
               <form action="" class="form workexp_form">
                    <div class="btn-container">
                        <div class="button_container">
                            <button class="addWorkexp">Add</button>
                        </div>
                    </div>
                    <div class="input_div_group">
                        <div class="input_div ">
                            <label for="">Organisation Name</label><br/>
                            <input class="input" type="text" name="" placeholder="Ex: ABC Company" id="WE_orgName" />
                            <p class="respective_errors" id="WE_orgName__c_error"></p>
                        </div>
                        <div class="input_div">
                            <label for="">Designation while leaving</label><br/>
                            <input class="input" type="text" name="" placeholder="Ex: Senior Software Engineer" id="WE_des" />
                            <p class="respective_errors" id="WE_des__c_error"></p>
                        </div>
                        <div class="input_div">
                            <label for="">From</label><br/>
                            <input class="input" type="date" name="" placeholder="Ex: 20/8/2022 (FORMAT:dd/mm/yyyy)" id="WE_from" />
                            <p class="respective_errors" id="WE_from__c_error"></p>
                        </div>
                        <div class="input_div">
                            <label for="">To</label><br/>
                            <input class="input" type="date" name="" placeholder="Ex: 20/11/2023 (FORMAT:dd/mm/yyyy)" id="WE_to" />
                            <p class="respective_errors" id="WE_to__c_error"></p>
                        </div>
                        <div class="input_div">
                            <label for="">Reason for leaving</label><br/>
                            <input class="input" type="text" name="" id="WE_reason" />
                        </div>
                        <input class="input" type="hidden" name="" id="WE_id" value="new" />
                        <div class="btn-container">
                            <div class="button_container">
                            <button class="deletebtn"><i class="fa-solid fa-trash" ></i></button>
                            </div>
                        </div>
                    </div>
                        <!-- <div class="button_container">
                            <button class="savebtn">Save</button>
                        </div> -->
                    <div class="btn-container_prevNext">
                        <div class="button_container">
                            <button class="previousbtn" data-goto='education_section'>Previous</button>
                        </div>
                        <div class="button_container">
                            <button class="nextbtn" data-goto='checklist_section'>Next</button>
                        </div>
                    </div>
               </form>
            </section>

            <section class="form_div checklist_section">
               <form action="" class="document_checklist">
                    <table class="document_checklist_table">
                        <tr>
                            <th>Document</th>
                            <th>Availability</th>
                        </tr>
                        <tr>
                            <td>1. Updated resume / Curriculum Vitae (C.V.)</td>
                            <td><input type="checkbox" name="resume_yes" id="resume" /></td>
                        </tr>
                        <tr>
                            <td>2. 6 additional Passport size photographs(Self) with Employee Code and Full name written on the reverse</td>
                            <td><input type="checkbox" name="photo_yes" id="photo" /></td>
                        </tr>
                        <tr>
                            <td>3.  Photocopy of all Educational Certificates as mentioned in the section “Educational
                            Qualification”in the Employee Joining form</td>
                            <td><input type="checkbox" name="educational_certificates" id="edu_certificates"/></td>
                        </tr>
                        <tr>
                            <td>4. Salary slips of previous company (last 2 months) – if applicable (Original)</td>
                            <td><input type="checkbox" name="salary_slip" id="salary_slip"/></td>
                        </tr>
                        <tr>
                            <td>5. PAN Card Copy (Self Attested) with Full Name, Employee Code, Phone/Mobile 
                            number</td>
                            <td><input type="checkbox" name="pancard" id="pancard"/></td>
                        </tr>
                        <tr>
                            <td>6. Proof of Address and Photo Identification Proof - Voter’s ID Card / Driving License / 
                            Passport Copy / Aadhar Card Copy
                            </td>
                            <td><input type="checkbox" name="address_proof" id="address_proof"/></td>
                        </tr>
                        <tr>
                            <td>7. Provident Fund Nomination and Declaration Form (Form 2) duly filled</td>
                            <td><input type="checkbox" name="provident_fund" id="provident_fund"/></td>
                        </tr>
                        <tr>
                            <td>8. Gratuity Nomination Form (Form F) duly filled * pre-filled sample copy enclosed</td>
                            <td><input type="checkbox" name="gratuity_form" id="gratuity_form"/></td>
                        </tr>
                        <tr>
                            <td>9. Signed Acknowledged copy of the Offer Letter / Appointment letter</td>
                            <td><input type="checkbox" name="experience_letter" id="offer_letter"/></td>
                        </tr>
                        <tr>
                            <td>10.  Previous Employer Relieving and Experience Letter</td>
                            <td><input type="checkbox" name="experience_letter" id="experience_letter"/></td>
                        </tr>
                        <tr>
                            <td>11. Bank Statement – 6 months (Original)</td>
                            <td> <input type="checkbox" name="bank_statement" id="bank_statement"/></td>
                        </tr>
                        <tr>
                            <td>12. Blood Group Report (Original)</td>
                            <td> <input type="checkbox" name="bloodgroup_report" id="bloodgroup_report"/></td>
                        </tr>
                        <tr>
                            <td>13. Code of Conduct</td>
                            <td>
                            <input type="checkbox" name="code_of_conduct" id="code_of_conduct" />
                            </td>
                        </tr>
                    </table>
                    <!-- <div class="button_container">
                        <button type="submit" class="savebtn checklistSaveBtn">Save</button>
                    </div> -->
                    <div class="btn-container_prevNext">
                        <div class="button_container">
                            <button class="previousbtn" data-goto='workexp_section'>Previous</button>
                        </div>
                        <div class="button_container">
                            <button class="nextbtn" data-goto='preview_section'>Next</button>
                        </div>
                    </div>
               </form>
            </section>

            <section class="form_div preview_section">
                <form class="form empinfo_preview_form"></form>
                <form action="" class="form kycinfo_preview_form"></form>
                <form action="" class="form familyinfo_preview_form"></form>
                <form action="" class="form eduinfo_preview_form"></form>
                <form action="" class="form workexp_preview_form"></form>
                <form action="" class="form documentchecklist_preview_form" style="display:block;"></form>
                <form action="" class="form acknowledgement_form"></form>
            </section>

            <section class="form_div submission_section">
               <form class="form submission_form">
                  <div class="left">
                     <p class="error_count">0</p>
                     <p class="count_span">ERRORS</p>
                  </div>
                  <div class="middle">
                     <button class="submitbtn">Finalize</button>
                  </div>
                  <div class="right">
                     <p class="warning_count">2</p>
                     <p class="count_span">WARNINGS</p>
                  </div>
                  <div class="errorContents">
                  </div>
               </form>
            </section>
         </div>

         <script>
            let nationality;
            let currentSection;
            //logic to prevent
            function preventBack() { 
                window.history.forward();  
            } 
            setTimeout("preventBack()", 0); 
            window.onunload = function () { null };

            // getting employee id from the url
            let params = new URLSearchParams(document.location.search);
            const empId = params.get("id");
            
            // Date functions 
            const date = new Date();            
            function hello(h) {
                let params = new URLSearchParams(document.location.search);
                return params.get(h);
            }            
            
            //refresh button logic
            document.querySelector('.refresh-btn').addEventListener('click', (e) => {
                location.reload();
            });

            //log out logic
                document.querySelector('.logout-btn').addEventListener('click', (e) => {
                const ref = 'https://wise-bear-j76ayp-dev-ed.trailblaze.my.salesforce-sites.com/JoiningApp';
                window.location.href  = ref;
            });

            // changing in the section through sidebar
            let activeMenuSection = 'employee_section';
            let isInputChanged = {
                employee_section:true,
                family_section:false,
                kyc_section:false,
                education_section:false,
                workexp_section:false,
                checklist_section:false,
                preview_section: false
            }
            const changeSection=(moveTo)=>{
                document.querySelectorAll('section').forEach((e) => {
                    if (e.classList.contains('active')) {
                        e.classList.remove('active');
                    }
                });
                activeMenuSection=moveTo;                
                document.querySelector(`.${moveTo}`).classList.add('active');
            }


            //removing the mailing input div
            const mailingCheckbox = document.querySelector('.mailing_checkbox');
            mailingCheckbox.addEventListener('click', (e) => {
                    const mailingInfoDiv = document.querySelectorAll('.mailing_div');
                    mailingInfoDiv.forEach((e) => {
                        if (e.style.display == 'none') {
                            e.style.display = 'block';
                        } else {
                            e.style.display = 'none';
                        }
                    })
                })

            //adding new kyc block
            const addNewKyc = document.querySelector('.add');
            addNewKyc.addEventListener('click', (e) => {
                e.preventDefault();
                const html = `
                <div class="input_div_group" data-count="1">
                <div class="input_div ">
                    <label for="">Document Type</label><br/>
                    <select name="Document type" id="Kyc_documentType__c" class="Kyc_documentType__c">
                                <!-- <option value="Aadhar Card">Aadhar Card</option> -->
                                <option value="Voter Card">Voter Card</option>
                                <option value="Bank Account (ICICI)">Bank Account (ICICI)</option>
                                <!-- <option value="Pan Card">Pan Card</option> -->
                                <option value="ESIC Card">ESIC Card</option>
                                <option value="Ration Card">Ration Card</option>
                                <!-- <option value="Passport">Passport</option> -->
                                <option value="UAN">UAN</option>
                            </select>
                            <p class="respective_errors" id="Kyc_documentType__c_error"></p>
                </div>
                <div class="input_div">
                    <label for="Kyc_nameOnDocument__c">Name as on Document</label><br/>
                    <input class="input" type="text" name="" id="Kyc_nameOnDocument__c" />
                    <p class="respective_errors" id="Kyc_nameOnDocument__c_error"></p>
                </div>
                <div class="input_div">
                    <label for="Kyc_documentNumber__c">Document no</label><br/>
                    <input class="input" type="text" name="" id="Kyc_documentNumber__c" />
                    <p class="respective_errors" id="Kyc_documentNumber__c_error"></p>
                </div>
                <div class="input_div IFSC_input_div" style="display:none">
                    <label for="">IFSC</label><br/>
                    <input class="input" type="text" name="" id="Kyc_ifscCode" />
                    <p class="respective_errors" id="Kyc_ifscCode__c_error"></p>
                </div>
                <div class="input_div Passport_exp_input_div" style="display:none">
                    <label for="">Expiry date</label><br/>
                    <input class="input" type="date" name="" id="Kyc_expDate" />
                </div>
                <div class=" address">
                    <label for="Kyc_remarks__c">Remarks if any</label><br/>
                    <input type="text" name="" id="Kyc_remarks__c" class="input" cols="30" rows="10" />
                </div>
                <input type="hidden" id="Kyc_Id" value="new" class="Id" />
                <div class="btn-container">
                    <div class="button_container">
                        <button class="deletebtn"><i class="fa-solid fa-trash" ></i></button>
                    </div>
                    <div class="deleteConfirm" >
                            <p style="color:black">Are u sure u want to delete ?</p>
                            <button class="cofirmdeletebtn">Yes</button>
                            <button class="notcofirmdeletebtn">No</button>
                    </div>
                </div>
            </div>
                `;
                const parent = document.querySelector('.kyc_form');
                parent.firstElementChild.insertAdjacentHTML("afterend", html);
            });

            // add new family block
            const addNewFamily = document.querySelector('.addRelation');
            addNewFamily.addEventListener('click', (e) => {
                e.preventDefault();
                const html = `<div class="input_div_group">
                     <div class="input_div ">
                        <label for="">Relation</label><br/>
                        <select name="Relation" id="Fi_relation">
                           <option value="Father">Father</option>
                           <option value="Mother">Mother</option>
                           <option value="Spouse">Spouse</option>
                           <option value="Son">Son</option>
                           <option value="Daughter">Daughter</option>
                        </select>
                     </div>
                     <div class="input_div">
                        <label for="">FirstName</label><br/>
                        <input class="input" type="text" name="" id="Fi_firstName" />
                        <p class="respective_errors" id="Fi_firstName__c_error"></p>
                     </div>
                     <div class="input_div">
                        <label for="">MiddleName</label><br/>
                        <input class="input" type="text" name="" id="Fi_middleName" />
                        <p class="respective_errors" id="Fi_middleName__c_error"></p>
                     </div>
                     <div class="input_div">
                        <label for="">LastName</label><br/>
                        <input class="input" type="text" name="" id="Fi_lastName" />
                        <p class="respective_errors" id="Fi_lastName__c_error"></p>
                     </div>
                     <div class="input_div">
                        <label for="">Date of Birth</label><br/>
                        <input class="input" type="date" name="" id="Fi_dob" />
                        <p class="respective_errors" id="Fi_dob__c_error"></p>
                     </div>
                     <input class="input" type="hidden" name="" id="Fi_id" value="new" />
                     <div class="btn-container">
                        <div class="button_container">
                           <button class="deletebtn"><i class="fa-solid fa-trash" ></i></button>
                        </div>
                        <div class="deleteConfirm" style="display:none">
                            <p style="color:black">Are you sure?</p>
                            <button class="cofirmdeletebtn">Yes</button>
                            <button class="notcofirmdeletebtn">No</button>
                        </div>
                     </div>
                  </div>`;
                const parent = document.querySelector('.family_form');
                parent.firstElementChild.insertAdjacentHTML("afterend", html);
            });

            // adding new education block
            const addNewEducation = document.querySelector('.addEducation');
            addNewEducation.addEventListener('click', (e) => {
                e.preventDefault();
                const html = `
                <div class="input_div_group">
                     <div class="input_div ">
                        <label for="educationLevel"> Education Level</label>
                        <select name="educationLevel" id="EQ_educationalLevel__c" class="EQ_educationalLevel__c" >
                           <option value="10th">10th</option>
                           <option value="12th">12th</option>
                           <option value="Graduation">Graduation</option>
                           <option value="Post-Graduation">Post-Graduation</option>
                           <option value="Other">Other</option>
                        </select>
                        <p class="respective_errors" id="EQ_educationalLevel__c_error"></p>
                     </div>
                     <div class="input_div twelth" style="display:none">
                        <label for="">Branch</label><br/>
                        <select name="" id="EQ_branchTwelth__c">
                           <option value=""> </option>
                           <option value="Science">Science</option>
                           <option value="Commerce">Commerce</option>
                           <option value="Arts">Arts</option>
                        </select>
                     </div>
                     <div class="input_div graduation" style="display:none">
                        <label for="">Degree</label><br/>
                        <select name="" id="EQ_degree__c">
                            <option value=""> </option>
                            <option value="Bachelor Of Engineering">Bachelor Of Engineering</option>
                            <option value="Bachelor Of Technology">Bachelor Of Technology</option>
                            <option value="Bachelor Of Arts">Bachelor Of Arts</option>
                            <option value="Bachelor Of Science">Bachelor Of Science</option>
                            <option value="Bachelor Of Commerce">Bachelor Of Commerce</option>
                            <option value="Bachelor Of Business Administration">Bachelor Of Business Administration</option>
                            <option value="Bachelor Of Computer Applications">Bachelor Of Computer Applications</option>
                            <option value="Bachelor Of Architecture">Bachelor Of Architecture</option>
                            <option value="Bachelor Of Laws">Bachelor Of Laws</option>
                            <option value="Bachelor Of Design">Bachelor Of Design</option>
                            <option value="Bachelor Of Hotel Management">Bachelor Of Hotel Management</option>
                            <option value="Bachelor Of Social Work">Bachelor Of Social Work</option>
                        </select>
                     </div>
                     <div class="input_div postgraduation" style="display:none">
                        <label for="">Degree</label><br/>
                        <select name="" id="EQ_postGradDegree__c">
                            <option value=""> </option>
                            <option value="Master Of Engineering">Master Of Engineering</option>
                            <option value="Master Of Arts">Master Of Arts</option>
                            <option value="Master Of Science">Master Of Science</option>
                            <option value="Master Of Commerce">Master Of Commerce</option>
                            <option value="Master Of Technology">Master Of Technology</option>
                            <option value="Master Of Business Administration">Master Of Business Administration</option>
                            <option value="Master Of Computer Applications">Master Of Computer Applications</option>
                            <option value="Master Of Architecture">Master Of Architecture</option>
                            <option value="Master Of Laws">Master Of Laws</option>
                            <option value="Master Of Design">Master Of Design</option>
                        </select>
                     </div>
                     <div class="input_div specialisation" style="display:none">
                        <label for="">Specialisation</label><br/>
                        <input class="input" type="text" id="EQ_specialisation__c"/>
                        <p class="respective_errors" id="EQ_specialisation__c_error"></p>
                     </div>
                     <div class="input_div">
                        <label for="">Board / University</label><br/>
                        <input  class="input" type="text" name="" id="EQ_boardOrUniversity__c"/>
                        <p class="respective_errors" id="EQ_boardOrUniversity__c_error"></p>
                     </div>
                     <div class="input_div">
                        <label for="">School / College Name</label><br/>
                        <input  class="input" type="text" name="" id="EQ_schoolOrCollegeName__c"/>
                        <p class="respective_errors" id="EQ_schoolOrCollegeName__c_error"></p>
                     </div>
                     <div class="input_div">
                        <label for="">Year of Passing</label><br/>
                        <input  class="input" type="text" name="" id="EQ_yearOfPassing__c"/>
                        <p class="respective_errors" id="EQ_yearOfPassing__c_error"></p>
                     </div>
                     <div class="input_div">
                        <label for="">GPA/Percentage</label><br/>
                        <select name="marksType" id="EQ_marksType__c">
                           <option value="CGPA">CGPA</option>
                           <option value="Percentage">Percentage</option>
                        </select>
                     </div>
                     <div class="input_div">
                        <label for="">Marks</label><br/>
                        <input  class="input" type="text" name="" id="EQ_percentageMarks__c"/>
                        <p class="respective_errors" id="EQ_percentageMarks__c_error"></p>
                     </div>
                     <input type="hidden" id="EQId" value="new" class="EQId input" />
                     <div class="btn-container">
                        <div class="button_container">
                           <button class="deletebtn"><i class="fa-solid fa-trash"></i></button>
                        </div>
                        <div class="deleteConfirm" style="display:none">
                            <p style="color:black">Are you sure?</p>
                            <button class="cofirmdeletebtn">Yes</button>
                            <button class="notcofirmdeletebtn">No</button>
                        </div>
                     </div>
                  </div>`;
                const parent = document.querySelector('.education_form');
                parent.firstElementChild.insertAdjacentHTML("afterend", html);
            });
            
            // adding new work exp block
            const addNewWorkexp = document.querySelector('.addWorkexp');
            addNewWorkexp.addEventListener('click', (e) => {
                e.preventDefault();
                const html = `
                <div class="input_div_group">
                     <div class="input_div ">
                        <label for="">Organisation Name</label><br/>
                        <input class="input" type="text" name="" placeholder="Ex: ABC Company" id="WE_orgName" />
                        <p class="respective_errors" id="WE_orgName__c_error"></p>
                     </div>
                     <div class="input_div">
                        <label for="">Designation while leaving</label><br/>
                        <input class="input" type="text" name="" placeholder="Ex: Senior Software Engineer" id="WE_des" />
                        <p class="respective_errors" id="WE_des__c_error"></p>
                     </div>
                     <div class="input_div">
                        <label for="">From</label><br/>
                        <input class="input" type="date" name="" placeholder="Ex: 20/8/2022 (FORMAT:dd/mm/yyyy)" id="WE_from" />
                        <p class="respective_errors" id="WE_from__c_error"></p>
                     </div>
                     <div class="input_div">
                        <label for="">To</label><br/>
                        <input class="input" type="date" name="" placeholder="Ex: 20/11/2023 (FORMAT:dd/mm/yyyy)" id="WE_to" />
                        <p class="respective_errors" id="WE_to__c_error"></p>
                     </div>
                     <div class="input_div">
                        <label for="">Reason for leaving</label><br/>
                        <input class="input" type="text" name="" id="WE_reason" />
                     </div>
                     <input class="input" type="hidden" name="" id="WE_id" value="new" />
                     <div class="btn-container">
                        <div class="button_container">
                           <button class="deletebtn"><i class="fa-solid fa-trash" ></i></button>
                        </div>
                        <div class="deleteConfirm" style="display:none">
                            <p style="color:black">Are you sure?</p>
                            <button class="cofirmdeletebtn">Yes</button>
                            <button class="notcofirmdeletebtn">No</button>
                        </div>
                     </div>
                  </div>`;
                const parent = document.querySelector('.workexp_form');
                parent.firstElementChild.insertAdjacentHTML("afterend", html);
            });          
            const generateErrorMsg = (message, type) => {
                let errorMsg = document.querySelector('.error');
                let messageContainer = document.querySelector('.message');
                let progressbar = document.querySelector('.progressbar');

                // Clear existing timeout to ensure a new message can replace the current one immediately
                if (generateErrorMsg.timeoutId) {
                    clearTimeout(generateErrorMsg.timeoutId);
                }

                // Set the progress bar color based on the message type
                switch (type) {
                    case 'success':
                        progressbar.style.backgroundColor = 'green';
                        break;
                    case 'error':
                        progressbar.style.backgroundColor = 'red';
                        break;
                    case 'warning':
                        progressbar.style.backgroundColor = 'orange';
                        break;
                }

                // Clear existing content in the error message element
                errorMsg.innerHTML = '';

                // Set the content of the error message element to the new message
                errorMsg.innerHTML = message;

                // Temporarily remove the class that triggers the animation
                progressbar.style.animationName = 'none';

                // Trigger reflow before adding back the class to restart the animation
                void progressbar.offsetWidth;

                // Add back the class to trigger the animation
                progressbar.style.animationName = 'progressbarAnimation';

                // Display the message container
                messageContainer.style.display = 'flex';

                // Set a timeout to hide the message container after 5 seconds
                generateErrorMsg.timeoutId = setTimeout(() => {
                    messageContainer.style.display = 'none';
                }, 5000);
            };


            const regexValidation =(inputString , typeToCheck)=>{
                const pincode = /^[1-9]{1}[0-9]{2}[0-9]{3}$/;
                const email =/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
                const mobileNumber =/^[0-9]{10}$/;
                const date = /^(\d{4})-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$/;
                const names = /^[A-Za-z' -]+$/;
                const aadhar = /^\d{12}$/;
                const cgpa =/^(?:10(?:\.0)?|[0-9](?:\.[0-9])?)$/;
                const pan =/^[A-Z]{5}[0-9]{4}[A-Z]$/;
                const year = /^\d{4}$/;
                const marks =/^[0-9]{2}$/
            
                switch(typeToCheck)
                {
                    case 'names':
                                return names.test(inputString);                                
                                break;
                    case 'date' :                                
                                return date.test(inputString);
                                break;
                    case 'mobileNumber' :                                        
                                return mobileNumber.test(inputString);
                                break;
                    case 'pincode' :                                    
                                return pincode.test(inputString);
                                break;  
                    case 'aadhar' :                                  
                                return aadhar.test(inputString);
                                break;  
                    case 'pan' :                                  
                                return pan.test(inputString);
                                break; 
                    case 'year' :                               
                                return year.test(inputString);
                                break;
                    case 'email':
                                return email.test(inputString);
                                break;
                    case 'marks':
                                return marks.test(inputString);
                                break;
                    case 'cgpa':
                                return cgpa.test(inputString);
                                break;
                }
            }
            const toggleSaveAndEditButtons = (parent) => {
                parent.querySelector('.editbtn').classList.toggle('disablebtn');
                parent.querySelector('.savebtn').classList.toggle('disablebtn');
            }
            const scrollToTop =()=> {
                document.querySelector('.main').scrollTo({top:0});
            }
            const clearAllErrorBorder = (parent) =>{
                const inputs = parent.querySelectorAll('input');
                inputs.forEach((index)=>{
                    index.classList.remove('errorBorder');
                });
                const selects = parent.querySelectorAll('select');
                selects.forEach((index)=>{
                    index.classList.remove('errorBorder');
                })
                const ptags = parent.querySelectorAll('.respective_errors');
                ptags.forEach((index)=>{
                    index.innerHTML = '';
                });
            }

            // logic to save, update and delete employee info form
            const employeeSaveLogic = document.querySelector('.employee_section');
            employeeSaveLogic.addEventListener('change',(e)=>{
                if(e.target.closest('input') || e.target.closest('select'))
                {
                    isInputChanged[activeMenuSection] =true;                
                }
            })

            employeeSaveLogic.addEventListener('click', (e) => {
                const isDateInput = event.target.type === 'date';
                const isCheckbox = event.target.type === 'checkbox';
                let clearedValidation = true;
                if(!(isDateInput || isCheckbox))
                {
                    e.preventDefault();
                }
                if(e.target.closest('.savebtn'))
                {
                    saveEmpInfo();
                }
                function saveEmpInfo(){
                    const buffer =document.querySelector('.buffer');
                    clearAllErrorBorder(employeeSaveLogic);
                    const Emp_firstName__c = document.querySelector('#Emp_firstName__c');
                    const Emp_midName__c = document.querySelector('#Emp_midName__c');
                    const Emp_lastName__c = document.querySelector('#Emp_lastName__c');
                    const Emp_dateOfBirth__c = document.querySelector('#Emp_dateOfBirth__c');
                    const Emp_maritalStatus__c = document.querySelector('#Emp_maritalStatus__c');
                    const Emp_gender__c = document.querySelector('#Emp_gender__c');
                    const Emp_bloodGroup__c = document.querySelector('#Emp_bloodGroup__c');
                    const Emp_nationality__c = document.querySelector('#Emp_nationality__c');
                    const Emp_emailId__c = document.querySelector('#Emp_emailId__c');
                    const Emp_telephone__c = document.querySelector('#Emp_telephone__c');
                    const Emp_mobilePhone__c = document.querySelector('#Emp_mobilePhone__c');
                    const Emp_tShirtSize__c = document.querySelector('#Emp_tShirtSize__c');
                    const Emp_resAddress__c = document.querySelector('#Emp_resAddress__c');
                    const Emp_resCity__c = document.querySelector('#Emp_resCity__c');
                    const Emp_resState__c = document.querySelector('#Emp_resState__c');
                    const Emp_resZipCode__c = document.querySelector('#Emp_resZipCode__c');
                    const Emp_foodPref__c = document.querySelector('#Emp_foodPref__c');
                    const Emp_lang1__c = document.querySelector('#Emp_lang1__c').value;
                    const Emp_lang1Read__c = document.querySelector('#Emp_lang1Read__c').checked;
                    const Emp_lang1Write__c = document.querySelector('#Emp_lang1Write__c').checked;
                    const Emp_lang1Speak__c = document.querySelector('#Emp_lang1Speak__c').checked;
                    const Emp_lang2__c = document.querySelector('#Emp_lang2__c').value;
                    const Emp_lang2Read__c = document.querySelector('#Emp_lang2Read__c').checked;
                    const Emp_lang2Write__c = document.querySelector('#Emp_lang2Write__c').checked;
                    const Emp_lang2Speak__c = document.querySelector('#Emp_lang2Speak__c').checked;
                    const Emp_lang3__c = document.querySelector('#Emp_lang3__c').value;
                    const Emp_lang3Read__c = document.querySelector('#Emp_lang3Read__c').checked;
                    const Emp_lang3Write__c = document.querySelector('#Emp_lang3Write__c').checked;
                    const Emp_lang3Speak__c = document.querySelector('#Emp_lang3Speak__c').checked;
                    const Emp_commonAddressCheck__c = document.querySelector('#Emp_commonAddressCheck__c').checked;
                    let Emp_commAddress__c;
                    let Emp_commCity__c;
                    let Emp_commState__c;
                    let Emp_commZipCode__c;
                    if(Emp_commonAddressCheck__c){
                        Emp_commAddress__c = Emp_resAddress__c.value;
                        Emp_commCity__c = Emp_resCity__c.value;
                        Emp_commState__c = Emp_resState__c.value;
                        Emp_commZipCode__c = Emp_resZipCode__c.value;
                    }
                    else{
                        Emp_commAddress__c = document.querySelector('#Emp_commAddress__c').value;
                        Emp_commCity__c = document.querySelector('#Emp_commCity__c').value;
                        Emp_commState__c = document.querySelector('#Emp_commState__c').value;
                        Emp_commZipCode__c = document.querySelector('#Emp_commZipCode__c').value;
                    }
                    
                    let Emp_Emergency__c = document.querySelector('#Emp_Emergency__c');
                    let Emp_EmergencyContact_Phone__c = document.querySelector('#Emp_EmergencyContact_Phone__c');
                    let Emp_EmergencyContact_Relation__c = document.querySelector('#Emp_EmergencyContact_Relation__c');
                    const tempDate = new Date(Emp_dateOfBirth__c.value);
                    const date = new Date();
                    let dateDiff = date - tempDate;
                    let ageInYears = Math.floor(dateDiff / (365.25 * 24 * 60 * 60 * 1000));
                    
                    if(Emp_firstName__c.value ==="" || Emp_firstName__c === null)
                    {
                        Emp_firstName__c.classList.add('errorBorder');
                        document.querySelector(`#Emp_firstName__c_error`).innerHTML='firstname is required';
                        clearedValidation=false;
                    }
                    else if(!(regexValidation(Emp_firstName__c.value,'names')))
                    {   
                        Emp_firstName__c.classList.add('errorBorder');
                        document.querySelector(`#Emp_firstName__c_error`).innerHTML=`should only contain aplhabets,"-"," ' "`;
                        clearedValidation=false;
                    }
                    if(Emp_lastName__c.value === "" || Emp_lastName__c.value === null)
                    {                        
                        Emp_lastName__c.classList.add('errorBorder');
                        document.querySelector(`#Emp_lastName__c_error`).innerHTML=`last name is required`;
                        clearedValidation=false;
                    }
                    else if(!(regexValidation(Emp_lastName__c.value,'names')))
                    {                        
                        Emp_lastName__c.classList.add('errorBorder');
                        document.querySelector(`#Emp_lastName__c_error`).innerHTML=`should only contain aplhabets,"-"," ' " `;
                        clearedValidation=false;   
                    }
                    if(Emp_maritalStatus__c.value==="" || Emp_maritalStatus__c.value===null){
                        Emp_maritalStatus__c.classList.add("errorBorder");
                        document.querySelector("#Emp_maritalStatus__c_error").innerHTML=`maritial status is required`;
                        clearedValidation=false;
                    }
                    if(Emp_nationality__c.value==="" || Emp_nationality__c.value===null)
                    {
                        Emp_nationality__c.classList.add('errorBorder');
                        document.querySelector('#Emp_nationality__c_error').innerHTML='nationality is required';
                        clearedValidation=false;
                    }
                    if(Emp_gender__c.value ==='' || Emp_gender__c.value===null)
                    {
                        Emp_gender__c.classList.add('errorBorder');
                        document.querySelector("#Emp_gender__c_error").innerHTML='gender is required';
                        clearedValidation=false;
                    }
                    if(Emp_dateOfBirth__c.value === "" || Emp_dateOfBirth__c.value === null)
                    {                        
                        Emp_dateOfBirth__c.classList.add('errorBorder');
                        document.querySelector(`#Emp_dateOfBirth__c_error`).innerHTML='date of Birth is required';
                        clearedValidation=false;
                    }
                    else {                        
                        if( ! (regexValidation(Emp_dateOfBirth__c.value , 'date')) )
                        {
                            Emp_dateOfBirth__c.classList.add('errorBorder');
                            document.querySelector(`#Emp_dateOfBirth__c_error`).innerHTML='invalid date format';
                            clearedValidation=false;
                        }
                        else if (ageInYears <18)
                        {
                            Emp_dateOfBirth__c.classList.add('errorBorder');
                            document.querySelector(`#Emp_dateOfBirth__c_error`).innerHTML='age should be greater than 18';
                            clearedValidation=false;
                        }
                    }
                    if(Emp_emailId__c.value === "" || Emp_emailId__c.value === null)
                    {                        
                        Emp_emailId__c.classList.add('errorBorder');
                        document.querySelector(`#Emp_emailId__c_error`).innerHTML='email is required';
                        clearedValidation=false;
                    }
                    else if(! (regexValidation(Emp_emailId__c.value , 'email')))
                    {                        
                        Emp_emailId__c.classList.add('errorBorder');
                        document.querySelector(`#Emp_emailId__c_error`).innerHTML='invalid email format';
                        clearedValidation=false;
                    }
                    if(Emp_maritalStatus__c.value === "" || Emp_maritalStatus__c.value ===null)
                    {
                        Emp_maritalStatus__c.classList.add('errorBorder');
                        document.querySelector(`#Emp_maritalStatus__c_error`).innerHTML='marital status is required';
                        clearedValidation=false;
                    }
                    if(Emp_bloodGroup__c.value === "" || Emp_bloodGroup__c.value ===null)
                    {
                        Emp_bloodGroup__c.classList.add('errorBorder');
                        document.querySelector(`#Emp_bloodGroup__c_error`).innerHTML='blood group is required';
                        clearedValidation=false;
                    }
                    if(Emp_mobilePhone__c.value === "" || Emp_mobilePhone__c.value === null)
                    {                        
                        Emp_mobilePhone__c.classList.add('errorBorder');
                        document.querySelector(`#Emp_mobilePhone__c_error`).innerHTML='phone number is required';
                        clearedValidation=false;
                    }
                    else if(!(regexValidation(Emp_mobilePhone__c.value , 'mobileNumber')))
                    {                        
                        Emp_mobilePhone__c.classList.add('errorBorder');
                        document.querySelector(`#Emp_mobilePhone__c_error`).innerHTML='invalid phone number';
                        clearedValidation=false;
                    }

                    if(Emp_Emergency__c.value === "" || Emp_Emergency__c.value === null)
                    {                        Emp_Emergency__c.classList.add('errorBorder');
                        document.querySelector(`#Emp_Emergency__c_error`).innerHTML=`emergency name is required`;
                        clearedValidation=false;
                    }
                    else if(!(regexValidation(Emp_Emergency__c.value,'names')))
                    {                        Emp_Emergency__c.classList.add('errorBorder');
                        document.querySelector(`#Emp_Emergency__c_error`).innerHTML=`should only contain aplhabets,"-"," ' " `;
                        clearedValidation=false;   
                    }
                    if(Emp_EmergencyContact_Phone__c.value === "" || Emp_EmergencyContact_Phone__c.value === null)
                    {                        
                        Emp_EmergencyContact_Phone__c.classList.add('errorBorder');
                        document.querySelector(`#Emp_EmergencyContact_Phone__c_error`).innerHTML='phone number is required';
                        clearedValidation=false;
                    }
                    else if(!(regexValidation(Emp_EmergencyContact_Phone__c.value , 'mobileNumber')))
                    {                        
                        Emp_EmergencyContact_Phone__c.classList.add('errorBorder');
                        document.querySelector(`#Emp_EmergencyContact_Phone__c_error`).innerHTML='invalid phone number';
                        clearedValidation=false;
                    }
                    if(Emp_EmergencyContact_Relation__c.value === "" || Emp_EmergencyContact_Relation__c.value === null)
                    {                        
                        Emp_EmergencyContact_Relation__c.classList.add('errorBorder');
                        document.querySelector(`#Emp_EmergencyContact_Relation__c_error`).innerHTML=`Relaion name is required`;
                        clearedValidation=false;
                    }
                    else if(!(regexValidation(Emp_EmergencyContact_Relation__c.value,'names')))
                    {                        
                        Emp_EmergencyContact_Relation__c.classList.add('errorBorder');
                        document.querySelector(`#Emp_EmergencyContact_Relation__c_error`).innerHTML=`should only contain aplhabets,"-"," ' " `;
                        clearedValidation=false;   
                    }

                    if(Emp_resAddress__c.value === "" || Emp_resAddress__c.value === null)
                    {                        
                        Emp_resAddress__c.classList.add('errorBorder');
                        document.querySelector(`#Emp_resAddress__c_error`).innerHTML='residential address is required';
                        clearedValidation=false;
                    }
                    if(Emp_resCity__c.value === "" || Emp_resCity__c.value === null)
                    {                        
                        Emp_resCity__c.classList.add('errorBorder');
                        document.querySelector(`#Emp_resCity__c_error`).innerHTML='residential city is required';
                        clearedValidation=false;
                    }
                    if(Emp_resState__c.value === "" || Emp_resState__c.value === null)
                    {                        
                        Emp_resState__c.classList.add('errorBorder');
                        document.querySelector(`#Emp_resState__c_error`).innerHTML='residential state is required';
                        clearedValidation=false;
                    }
                    if(Emp_resZipCode__c.value === "" || Emp_resZipCode__c.value === null)
                    {                        
                        Emp_resZipCode__c.classList.add('errorBorder');
                        document.querySelector(`#Emp_resZipCode__c_error`).innerHTML='residential zipcode is required';
                        clearedValidation=false;
                    }
                    else if(!(regexValidation(Emp_resZipCode__c.value,'pincode')))
                    {
                        Emp_resZipCode__c.classList.add('errorBorder');
                        document.querySelector(`#Emp_resZipCode__c_error`).innerHTML='zipcode format is invalid';
                        clearedValidation=false;
                    }
                    if(clearedValidation)
                    {
                        buffer.style.display='block';
                        isInputChanged[activeMenuSection]=false; 

                        Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.mainController.saveEmployeefunction}',
                            Emp_firstName__c.value, Emp_midName__c.value, Emp_lastName__c.value,
                            Emp_dateOfBirth__c.value, Emp_maritalStatus__c.value, Emp_gender__c.value, 
                            Emp_bloodGroup__c.value, Emp_nationality__c.value, Emp_emailId__c.value, 
                            Emp_telephone__c.value, Emp_mobilePhone__c.value, Emp_tShirtSize__c.value, 
                            Emp_resAddress__c.value, Emp_resCity__c.value, Emp_resState__c.value, 
                            Emp_resZipCode__c.value, Emp_foodPref__c.value, Emp_lang1__c, 
                            Emp_lang1Read__c, Emp_lang1Write__c, Emp_lang1Speak__c, 
                            Emp_lang2__c, Emp_lang2Read__c, Emp_lang2Write__c, 
                            Emp_lang2Speak__c, Emp_lang3__c, Emp_lang3Read__c, 
                            Emp_lang3Write__c, Emp_lang3Speak__c, empId,
                                function(result, event) {
                                    console.log("saved employee data");
                                    renderKycSection();
                                }
                        );

                        Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.mainController.saveEmergencyContactController}',
                        empId, Emp_Emergency__c.value, Emp_EmergencyContact_Relation__c.value, Emp_EmergencyContact_Phone__c.value,
                            function(result, event) {
                                console.log("saved the updated values of emergency info");
                            }
                        );

                        Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.mainController.saveCommAddress}',
                            Emp_commonAddressCheck__c, Emp_commAddress__c,
                            Emp_commCity__c, Emp_commState__c, Emp_commZipCode__c,
                            empId,
                            function(result, event) {
                                    generateErrorMsg('Employee details have been saved','success');
                                    buffer.style.display='none';
                                }
                        ); 

                        let currentSection='Employee-Detail'
                        Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.mainController.updateStage}',empId,currentSection,
                        function(result,event){
                            console.log('updating the stage')
                            let currentSection='Employee-Detail'
                            console.log('Current Section ',currentSection);
                        })
                        
                        clearAllErrorBorder(employeeSaveLogic);  
                    }
                    else
                    {   
                        buffer.style.display='none';
                        generateErrorMsg('please clear the validations','warning');
                        scrollToTop();
                    }
                    return;
                }

                if(e.target.closest('.nextbtn'))
                {
                    saveEmpInfo();
                    // if(isInputChanged[activeMenuSection])
                    // {
                    //     generateErrorMsg('please save before navigating to another page','warning');
                    //     return;
                    // }
                    if(clearedValidation)
                    {
                        let previewStageReached;

                        Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.mainController.fetchPreviewStatus}',empId,function(result,event){
                        previewStageReached=result;
                        if((previewStageReached))
                        {
                            //e.target.innerHTML='Go To Preview';
                            if(document.querySelector('.employeeDetail').classList.contains('yellow-stage'))
                            {
                                document.querySelector('.employeeDetail').classList.remove('yellow-stage');
                            }
                            document.querySelector('.employeeDetail').classList.add('green-stage');
                            document.querySelector('.kycDetail').classList.add('green-stage');
                        }
                        else
                        {
                            console.log("hey man i dint in")
                            if(document.querySelector('.employeeDetail').classList.contains('yellow-stage'))
                            {
                                document.querySelector('.employeeDetail').classList.remove('yellow-stage');
                            }
                            document.querySelector('.employeeDetail').classList.add('green-stage');
                            document.querySelector('.kycDetail').classList.add('yellow-stage');
                        }
                        
                        let moveTo;
                        if(previewStageReached){
                            moveTo='preview_section';
                            displayPreviewPage();
                        }
                        else{
                        moveTo = e.target.dataset.goto;
                        }
                        changeSection(moveTo);
                        });
                    }
                    else
                    {
                        generateErrorMsg('please clear the validations','warning');
                        scrollToTop();
                    }
                    return;
                }

                if(e.target.closest('input') || e.target.closest('select'))
                {
                    return;

                }
            });

            //kyc logic
            const kycSaveDeleteEditLogic = document.querySelector('.kyc_form');
            kycSaveDeleteEditLogic.addEventListener('change', (e) => {
                if (e.target.closest('select')) 
                {
                    const parent = e.target.closest('.input_div_group');
                    const selectTag = parent.querySelector('select');                
                    if (selectTag.value == 'Passport') {
                        parent.querySelector('.Passport_exp_input_div').style.display = 'block';
                        parent.querySelector('.IFSC_input_div').style.display = 'none';
                    } else if (selectTag.value == 'Bank Account (ICICI)') {
                        parent.querySelector('.IFSC_input_div').style.display = 'block';
                        parent.querySelector('.Passport_exp_input_div').style.display = 'none';
                    } else {
                        parent.querySelector('.Passport_exp_input_div').style.display = 'none';
                        parent.querySelector('.IFSC_input_div').style.display = 'none';
                    }
                    isInputChanged[activeMenuSection] =true;
                    return;
                }
                if(e.target.closest('input'))
                {
                    isInputChanged[activeMenuSection]=true;
                }
            });
            kycSaveDeleteEditLogic.addEventListener('click', (e) => {
                let clearedValidation=true;
                if(e.target.type !='date')
                {
                    e.preventDefault();
                }
                const buffer = document.querySelector('.buffer');
                
                if (e.target.closest('.savebtn')) {
                    saveKYCInfo();
                }

                function saveKYCInfo(){
                    let containerArray = [];
                    clearAllErrorBorder(kycSaveDeleteEditLogic);
                    let nationality;
                    Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.mainController.fetchNationality}',empId,
                    function(result)
                    {
                        nationality=result;
                    });
                    let haveduplicate=false;
                    let listOfKyc ={
                        "Aadhar Card":false,
                        "Voter Card" :false,
                        "Bank Account (ICICI)":false,
                        "Pan Card":false,
                        "ESIC Card":false,
                        "Ration Card":false,
                        "UAN":false
                    }
                    const allInputDivGroups = kycSaveDeleteEditLogic.querySelectorAll('.input_div_group');
                    allInputDivGroups.forEach((index)=>{
                        const Kyc_documentType__c = index.querySelector("#Kyc_documentType__c");
                        const Kyc_nameOnDocument__c = index.querySelector("#Kyc_nameOnDocument__c");
                        const Kyc_documentNumber__c = index.querySelector("#Kyc_documentNumber__c");
                        const Kyc_remarks__c = index.querySelector("#Kyc_remarks__c");
                        const Id = index.querySelector("#Kyc_Id");
                        let expDate = index.querySelector('#Kyc_expDate');
                        let ifscCode = index.querySelector('#Kyc_ifscCode');
                        if(listOfKyc[Kyc_documentType__c.value] == true )
                        {
                            haveduplicate=true;
                            clearedValidation=false;
                            generateErrorMsg('there are duplicate documents','error');
                            return;
                        }
                        listOfKyc[Kyc_documentType__c.value]=true;
                        if(Kyc_documentType__c.value === 'Passport')
                        {
                            //console.log(index.querySelector('#Kyc_expDate'));
                            if(expDate.value ==="" || expDate.value === null)
                            {
                                index.querySelector('#Kyc_expDate__c_error').innerHTML = 'expiry date required';
                                expDate.classList.add('errorBorder');
                                clearedValidation=false;
                            }
                        }
                        if(Kyc_documentType__c.value === 'Bank Account (ICICI)' )
                        {
                            if(ifscCode.value === "" || ifscCode.value === null)
                            {
                                index.querySelector('#Kyc_ifscCode__c_error').innerHTML = 'documentType required';
                                ifscCode.classList.add('errorBorder');
                                clearedValidation=false;
                            }
                        }
                        if(Kyc_documentType__c.value === "" || Kyc_documentType__c=== null)
                        {
                            index.querySelector('#Kyc_documentType__c_error').innerHTML = 'documentType required';
                            Kyc_documentType__c.classList.add('errorBorder');
                            clearedValidation=false;
                        }
                        if(Kyc_documentNumber__c.value === "" || Kyc_documentNumber__c=== null)
                        {
                            index.querySelector('#Kyc_documentNumber__c_error').innerHTML = 'documentNumber required';
                            Kyc_documentNumber__c.classList.add('errorBorder');
                            clearedValidation=false;
                        }
                        else
                        {
                            if(Kyc_documentType__c.value ==='Aadhar Card' && ( !(regexValidation(Kyc_documentNumber__c.value,'aadhar'))))
                            {
                                Kyc_documentNumber__c.classList.add('errorBorder');
                                index.querySelector('#Kyc_documentNumber__c_error').innerHTML = 'invalid aadhar format';
                                clearedValidation=false;
                                
                            }
                            if(Kyc_documentType__c.value ==='Pan Card' && ( !(regexValidation(Kyc_documentNumber__c.value,'pan'))))
                            {
                                Kyc_documentNumber__c.classList.add('errorBorder');
                                index.querySelector('#Kyc_documentNumber__c_error').innerHTML = 'pan format (5letter with 4digit followed by 1 digit)';
                                clearedValidation=false;
                            }
                            
                        }
                        if(Kyc_nameOnDocument__c.value === "" || Kyc_nameOnDocument__c.value === null)
                        {
                            index.querySelector('#Kyc_nameOnDocument__c_error').innerHTML = 'name on Document is required';
                            Kyc_nameOnDocument__c.classList.add('errorBorder');
                            clearedValidation=false;
                        }
                        let obj;
                        if(Id.value === 'new')
                        {
                            if(Kyc_documentType__c.value === 'Passport')
                            {
                                obj ={
                                    Kyc_documentType__c :Kyc_documentType__c.value,
                                    Kyc_nameOnDocument__c:Kyc_nameOnDocument__c.value,
                                    Kyc_documentNumber__c:Kyc_documentNumber__c.value,
                                    Kyc_expDate__c:expDate.value,
                                    Kyc_remarks__c :Kyc_remarks__c.value,
                                    KycToEmp__c:empId
                                }
                            }
                            else if(Kyc_documentType__c.value == 'Bank Account (ICICI)' )
                            {
                                obj ={
                                    Kyc_documentType__c :Kyc_documentType__c.value,
                                    Kyc_nameOnDocument__c :Kyc_nameOnDocument__c.value,
                                    Kyc_documentNumber__c :Kyc_documentNumber__c.value,
                                    Kyc_remarks__c :Kyc_remarks__c.value,
                                    Kyc_ifscCode__c:ifscCode.value,
                                    KycToEmp__c:empId
                                }
                            }
                            else
                            {
                                obj ={
                                    Kyc_documentType__c :Kyc_documentType__c.value,
                                    Kyc_nameOnDocument__c:Kyc_nameOnDocument__c.value,
                                    Kyc_documentNumber__c:Kyc_documentNumber__c.value,
                                    Kyc_remarks__c:Kyc_remarks__c.value,
                                    KycToEmp__c:empId
                                }
                            }
                        }
                        else
                        {   
                            if(Kyc_documentType__c.value === 'Passport')
                            {
                                obj ={
                                    Id:Id.value,
                                    Kyc_documentType__c :Kyc_documentType__c.value,
                                    Kyc_nameOnDocument__c:Kyc_nameOnDocument__c.value,
                                    Kyc_documentNumber__c:Kyc_documentNumber__c.value,
                                    Kyc_remarks__c :Kyc_remarks__c.value,
                                    Kyc_expDate__c:expDate.value,
                                    KycToEmp__c:empId
                                }
                            }
                            else if(Kyc_documentType__c.value == 'Bank Account (ICICI)' )
                            {
                                obj ={
                                    Id:Id.value,
                                    Kyc_documentType__c :Kyc_documentType__c.value ,
                                    Kyc_nameOnDocument__c :Kyc_nameOnDocument__c.value,
                                    Kyc_documentNumber__c :Kyc_documentNumber__c.value,
                                    Kyc_remarks__c :Kyc_remarks__c.value,
                                    Kyc_ifscCode__c:ifscCode.value,
                                    KycToEmp__c:empId
                                }
                            }
                            else
                            {
                                obj ={
                                    Id :Id.value,
                                    Kyc_documentType__c :Kyc_documentType__c.value,
                                    Kyc_nameOnDocument__c : Kyc_nameOnDocument__c.value,
                                    Kyc_documentNumber__c :Kyc_documentNumber__c.value,
                                    Kyc_remarks__c :Kyc_remarks__c.value,
                                    KycToEmp__c:empId
                                }
                            }
                        }
                        containerArray.push(obj);
                    });
                    
                    const jsonFormat = JSON.stringify(containerArray);
                    if(clearedValidation)
                    {
                        buffer.style.display='block';
                        isInputChanged[activeMenuSection]=false;
                        Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.mainController.insertUpdateKycBulk}',
                        jsonFormat,
                        function(result, event) {
                            if(event.statusCode == 200)
                            {
                                fetchKycInfo();
                                generateErrorMsg(` Kyc data has been saved successfully 🎉`,'success');
                                buffer.style.display='none';
                            }   
                            else
                            {
                                generateErrorMsg(`Oops! 😬 Your data wasn't saved. Please try again or reach out to the admin for assistance🚀`,'error');
                                buffer.style.display='none';
                            }
                        });
                        currentSection='KYC-Detail'
                        Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.mainController.updateStage}',empId,currentSection,function(result,event){

                            let currentSection='Employee-Detail'
                        })
                    }
                    else
                    {
                        console.log("has not cleared the validations");
                        scrollToTop();
                        if(!(haveduplicate))
                        {
                            generateErrorMsg('please clear the validations','warning');
                        }
                    }
                    return;
                }
                if (e.target.closest('.deletebtn')) {
                    const parent = e.target.closest('.input_div_group');
                    parent.querySelector('.deletebtn').style.display='none';
                    parent.querySelector('.deleteConfirm').style.display='flex';
                    return;
                }
                if(e.target.closest('.cofirmdeletebtn'))
                {
                    buffer.style.display='block';
                    const parent = e.target.closest('.input_div_group');
                    const Id = parent.querySelector("#Kyc_Id").value;
                    if (Id != 'new') {
                        Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.mainController.deleteKyc}', Id,
                            function(result, event) {
                                if(event.statusCode === 200)
                                {
                                    generateErrorMsg('deleted successfully','success');
                                }
                                else
                                {
                                    generateErrorMsg('error in deleting try again or contact the admin','error');
                                }
                                buffer.style.display='none';
                            }
                        );
                        parent.remove();
                    }
                    else
                    {
                        parent.remove();
                        buffer.style.display='none';
                        generateErrorMsg('deleted successfully','success');
                    }
                    return;
                }
                if(e.target.closest('.notcofirmdeletebtn'))
                {
                    const parent = e.target.closest('.input_div_group');
                    parent.querySelector('.deleteConfirm').style.display='none';
                    parent.querySelector('.deletebtn').style.display='block';
                    return;
                }
                if(e.target.closest('.nextbtn'))
                {
                    saveKYCInfo();
                    if(clearedValidation)
                    {
                        console.log(clearedValidation);
                        let previewStageReached;
                        Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.mainController.fetchPreviewStatus}',empId,function(result,event){
                        previewStageReached=result;
                        let moveTo;
                        if(previewStageReached){
                            moveTo='preview_section';
                            displayPreviewPage();
                            if(document.querySelector('.kycDetail').classList.contains('yellow-stage'))
                            {
                                document.querySelector('.kycDetail').classList.remove('yellow-stage');
                            }
                            document.querySelector('.kycDetail').classList.add('green-stage');
                            document.querySelector('.familyDetail').classList.add('green-stage');
                        }
                        else{
                            moveTo = e.target.dataset.goto;
                            if(document.querySelector('.kycDetail').classList.contains('yellow-stage'))
                            {
                                document.querySelector('.kycDetail').classList.remove('yellow-stage');
                            }
                            document.querySelector('.kycDetail').classList.add('green-stage');
                            document.querySelector('.familyDetail').classList.add('yellow-stage');
                        }
                        changeSection(moveTo);
                        });
                    }
                    return;
                }
                if(e.target.closest('.previousbtn'))
                {
                        const moveTo = e.target.dataset.goto;
                        if(currentSection != 'Employee-Detail')
                        {
                            document.querySelector('.kycDetail').classList.remove('yellow-stage');
                            document.querySelector('.kycDetail').classList.add('green-stage');
                        }
                        if(document.querySelector('.employeeDetail').classList.contains('green-stage'))
                        {
                            document.querySelector('.employeeDetail').classList.remove('green-stage');
                            document.querySelector('.employeeDetail').classList.add('yellow-stage');
                        }
                        changeSection(moveTo);
                    
                    return;
                }
                if(e.target.closest('input') || e.target.closest('select'))
                {
                    return;
                }
            });

            // logic to save, update and delete family form 
            const familySaveEditDeleteLogic = document.querySelector('.family_form');
            familySaveEditDeleteLogic.addEventListener('change',(e)=>
            {
                let clearedValidation=true;
                if(e.target.closest('input') || e.target.closest('select'))
                {
                    isInputChanged[activeMenuSection] =true;
                }
            })
            familySaveEditDeleteLogic.addEventListener('click', (e) => {
                let clearedValidation=true;
                let haveduplicate=false;
                const buffer = document.querySelector('.buffer');
                if (e.target.type !== 'date') {
                    e.preventDefault();
                }
                if (e.target.closest('.savebtn')) {
                    saveFamilyInfo();
                }
                function saveFamilyInfo(){
                    clearAllErrorBorder(familySaveEditDeleteLogic);
                    const containerArray=[];
                    const inputDivGroups = familySaveEditDeleteLogic.querySelectorAll('.input_div_group');
                    const familyObjectList = {
                        'Father':false,
                        'Mother':false,
                        'Spouse':false,
                        'Son':false,
                        'Daughter':false,
                    }
                    inputDivGroups.forEach((index)=>{
                        const Fi_relation__c = index.querySelector('#Fi_relation');
                        const Fi_firstname__c = index.querySelector('#Fi_firstName');
                        const Fi_lastname__c = index.querySelector('#Fi_lastName');
                        const Fi_middlename__c = index.querySelector('#Fi_middleName');
                        const Fi_dob__c = index.querySelector('#Fi_dob');
                        const id = index.querySelector('#Fi_id');                         
                        const tempDate = new Date(Fi_dob__c.value);
                        let dateDiff = date - tempDate;
                        let ageInYears = Math.floor(dateDiff / (365.25 * 24 * 60 * 60 * 1000));
                        if(familyObjectList[`${Fi_relation__c.value}`] === true)
                        {
                            haveduplicate=true;
                            generateErrorMsg(`there cant be two same relations`,'error');
                            clearedValidation=false;
                            return;
                        }
                        familyObjectList[`${Fi_relation__c.value}`]=true;
                        if(Fi_firstname__c.value ==="" || Fi_firstname__c.value == null )
                        {
                            index.querySelector('#Fi_firstName__c_error').innerHTML = 'firstname is required';
                            Fi_firstname__c.classList.add('errorBorder');
                            clearedValidation=false;
                        }
                        else if(!(regexValidation(Fi_firstname__c.value,'names')))
                        {
                            index.querySelector('#Fi_firstName__c_error').innerHTML = `can only contain alphabet,'-'," ' "`;
                            Fi_firstname__c.classList.add('errorBorder');
                            clearedValidation=false;
                        }
                        if(Fi_lastname__c.value ==="" || Fi_lastname__c.value == null)
                        {
                            index.querySelector('#Fi_lastName__c_error').innerHTML = 'lastname is required';
                            Fi_lastname__c.classList.add('errorBorder');
                            clearedValidation=false;
                        }
                        else if(!(regexValidation(Fi_lastname__c.value,'names')))
                        {
                            index.querySelector('#Fi_lastName__c_error').innerHTML = `can only contain alphabet,'-'," ' "`;
                            Fi_lastname__c.classList.add('errorBorder');
                            clearedValidation=false;
                        }
                        if(Fi_dob__c.value ==="" || Fi_dob__c.value == null)
                        {
                            index.querySelector('#Fi_dob__c_error').innerHTML = 'dob is required';
                            Fi_dob__c.classList.add('errorBorder');
                            clearedValidation=false;
                        }
                        else 
                        {
                            
                            if(!(regexValidation(Fi_dob__c.value,'date')))
                            {
                                index.querySelector('#Fi_dob__c_error').innerHTML = `invalid date format`;
                                Fi_dob__c.classList.add('errorBorder');
                                clearedValidation=false;
                            }
                            else if(ageInYears< 18 && (Fi_relation__c.value !='Son' && Fi_relation__c.value !='Daughter'))
                            {
                                index.querySelector('#Fi_dob__c_error').innerHTML = `age should be greater than 18`;
                                Fi_dob__c.classList.add('errorBorder');
                                clearedValidation=false;
                            }
                        }
                        if(id.value ==='new')
                        {
                            obj ={
                            Fi_relation__c:Fi_relation__c.value,
                            Fi_firstName__c:Fi_firstname__c.value,
                            Fi_middleName__c:Fi_middlename__c.value,
                            Fi_lastName__c:Fi_lastname__c.value,
                            Fi_dob__c:Fi_dob__c.value,
                            EmpToFi__c:empId
                            }
                        }
                        else 
                        {
                            obj ={
                            Id:id.value,
                            Fi_relation__c:Fi_relation__c.value,
                            Fi_firstName__c:Fi_firstname__c.value,
                            Fi_middleName__c:Fi_middlename__c.value,
                            Fi_lastName__c:Fi_lastname__c.value,
                            Fi_dob__c:Fi_dob__c.value,
                            EmpToFi__c:empId
                            }
                        }
                        containerArray.push(obj);
                    })
                    const jsonFormat = JSON.stringify(containerArray);
                    if(clearedValidation)
                    {
                        buffer.style.display='block';
                        isInputChanged[activeMenuSection]=false;
                        Visualforce.remoting.Manager.invokeAction(
                         '{!$RemoteAction.mainController.insertUpdateFamilyInfoBulk}',
                            jsonFormat,
                         function(result, event) {
                             if(event.statusCode == 200)
                             {
                                fetchFamilyInfo();
                                generateErrorMsg(` Family data has been saved successfully 🎉`,'success');
                                buffer.style.display='none';
                             }
                             else if(event.statusCode != 200){
                                generateErrorMsg(`Oops! 😬 Your data wasn't saved. Please try again or reach out to the admin for assistance🚀`,'error');
                                buffer.style.display='none';    
                            }
                         });

                        // update stage 
                        currentSection='Family-Detail'
                        Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.mainController.updateStage}',empId,currentSection,
                        function(result,event){
                            console.log('updating the stage')
                        })
                    }
                    else
                    {
                        if(!(haveduplicate))
                        {
                            generateErrorMsg('please clear the validations','warning');
                        }
                        scrollToTop();
                    }
                    return;
                }
                if(e.target.closest('.previousbtn'))
                {
                    const moveTo = e.target.dataset.goto;
                        if(currentSection !='KYC-Detail')
                        {
                            document.querySelector('.familyDetail').classList.add('green-stage');
                            document.querySelector('.familyDetail').classList.remove('yellow-stage');
                        }
                        if(document.querySelector('.kycDetail').classList.contains('green-stage'))
                        {
                            document.querySelector('.kycDetail').classList.remove('green-stage');
                            document.querySelector('.kycDetail').classList.add('yellow-stage');
                        }
                        changeSection(moveTo);
                    return;
                }
                if(e.target.closest('.nextbtn'))
                {
                    saveFamilyInfo();
                    // if(isInputChanged[activeMenuSection])
                    // {
                    //     generateErrorMsg('please consider saving before navigating to next page','warning');
                    //     return;
                    // }
                    if(clearedValidation)
                    {
                        let previewStageReached;
                        Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.mainController.fetchPreviewStatus}',empId,function(result,event){
                        previewStageReached=result;
                        console.log('result',previewStageReached);
                        let moveTo;
                        if(previewStageReached){
                            moveTo='preview_section';
                            displayPreviewPage();
                            if(document.querySelector('.familyDetail').classList.contains('yellow-stage'))
                            {
                                document.querySelector('.familyDetail').classList.remove('yellow-stage');
                            }
                            document.querySelector('.familyDetail').classList.add('green-stage');
                            document.querySelector('.educationDetail').classList.add('green-stage');
                            console.log('inside if preview');
                        }
                        else{
                            moveTo = e.target.dataset.goto;
                            if(document.querySelector('.familyDetail').classList.contains('yellow-stage'))
                            {
                                document.querySelector('.familyDetail').classList.remove('yellow-stage');
                            }
                            document.querySelector('.familyDetail').classList.add('green-stage');
                            document.querySelector('.educationDetail').classList.add('yellow-stage');
                            console.log('moving to..',moveTo);
                        }
                        changeSection(moveTo);
                        });
                    }
                    else
                    {
                        scrollToTop();
                    }
                    return;
                }
                if (e.target.closest('.deletebtn')) {
                    const parent = e.target.closest('.input_div_group');
                    parent.querySelector('.deletebtn').style.display='none'
                    parent.querySelector('.deleteConfirm').style.display='flex';
                    return;
                }
                if(e.target.closest('.cofirmdeletebtn'))
                {
                    const parent = e.target.closest('.input_div_group');
                    const relation = parent.querySelector('#Fi_relation').value;
                    const firstname = parent.querySelector('#Fi_firstName').value;
                    const lastname = parent.querySelector('#Fi_lastName').value;
                    const middlename = parent.querySelector('#Fi_middleName').value;
                    const dob = parent.querySelector('#Fi_dob').value;
                    const id = parent.querySelector('#Fi_id');   
                    buffer.style.display='block';                
                     if (!(id.value == 'new')) {                      
                          Visualforce.remoting.Manager.invokeAction(
                            '{!$RemoteAction.mainController.deleteFamilyInfoRecord}',
                            id.value, empId,
                            function(result, event) {
                                if(event.statusCode === 200)
                                {
                                    generateErrorMsg('deleted successfully','success');
                                    parent.remove();
                                }
                                else
                                {
                                    generateErrorMsg('there was an error in delete please try again or contact admin')
                                }
                                buffer.style.display='none';
                            }
                        );
                    }
                    else
                    {
                        parent.remove();
                        buffer.style.display='none';
                        generateErrorMsg('deleted successfully','success');
                    }
                    return;
                }
                if(e.target.closest('.notcofirmdeletebtn'))
                {
                    const parent = e.target.closest('.input_div_group');
                    parent.querySelector('.deleteConfirm').style.display='none';
                    parent.querySelector('.deletebtn').style.display='block';
                }
            });
            
            // logic to save, update and delete education form 
            const educationSaveDeleteEditLogic = document.querySelector('.education_form');
            educationSaveDeleteEditLogic.addEventListener('change', (e) => {
                if (e.target.closest('select')) {
                    const parent = e.target.closest('.input_div_group');
                    const selectTag = parent.querySelector('select');
                    if (selectTag.value == '12th') {
                        parent.querySelector('.twelth').style.display = 'block';
                        parent.querySelector('.specialisation').style.display = 'none';
                        parent.querySelector('.postgraduation').style.display = 'none';
                        parent.querySelector('.graduation').style.display = 'none';
                    } else if (selectTag.value == 'Graduation') {
                        parent.querySelector('.twelth').style.display = 'none';
                        parent.querySelector('.specialisation').style.display = 'block';
                        parent.querySelector('.postgraduation').style.display = 'none';
                        parent.querySelector('.graduation').style.display = 'block';
                    } else if (selectTag.value == 'Post-Graduation'){
                        parent.querySelector('.twelth').style.display = 'none';
                        parent.querySelector('.specialisation').style.display = 'block';
                        parent.querySelector('.postgraduation').style.display = 'block';
                        parent.querySelector('.graduation').style.display = 'none';
                    }else if (selectTag.value == "Other"){
                        parent.querySelector('.twelth').style.display = 'none';
                        parent.querySelector('.specialisation').style.display = 'block';
                        parent.querySelector('.postgraduation').style.display = 'none';
                        parent.querySelector('.graduation').style.display = 'none';
                    }
                    else{
                        parent.querySelector('.twelth').style.display = 'none';
                        parent.querySelector('.specialisation').style.display = 'none';
                        parent.querySelector('.postgraduation').style.display = 'none';
                        parent.querySelector('.graduation').style.display = 'none';
                    }
                    isInputChanged[activeMenuSection]=true;
                }
                if(e.target.closest('input'))
                {
                    isInputChanged[activeMenuSection]=true;
                }
            });
            educationSaveDeleteEditLogic.addEventListener('click', (e) => {
                e.preventDefault();
                let clearedValidation=true;
                let haveduplicate=false;
                if (e.target.closest('.savebtn')){
                    saveEducationInfo();
                }
                function saveEducationInfo(){
                    isInputChanged[activeMenuSection]=false;
                    const AllInputDivGroups = educationSaveDeleteEditLogic.querySelectorAll('.input_div_group');
                    clearAllErrorBorder(educationSaveDeleteEditLogic);
                    const arrayOfAllEducationInputDivGroups=[];
                    const educationObjectList ={
                            '10th':false,
                            '12th':false
                    }
                    AllInputDivGroups.forEach((record)=>{
                        const EQ_educationalLevel__c = record.querySelector("#EQ_educationalLevel__c");
                        const EQ_degree__c = record.querySelector("#EQ_degree__c");
                        const EQ_schoolOrCollegeName__c = record.querySelector("#EQ_schoolOrCollegeName__c");
                        const EQ_boardOrUniversity__c = record.querySelector("#EQ_boardOrUniversity__c");
                        const EQ_percentageMarks__c = record.querySelector("#EQ_percentageMarks__c");
                        const EQ_yearOfPassing__c = record.querySelector("#EQ_yearOfPassing__c");
                        const EQ_branchTwelth__c = record.querySelector('#EQ_branchTwelth__c');
                        const EQ_specialisation__c = record.querySelector('#EQ_specialisation__c');
                        const EQ_postGradDegree__c = record.querySelector('#EQ_postGradDegree__c');
                        const EQ_marksType__c = record.querySelector('#EQ_marksType__c');
                        const Id = record.querySelector('#EQId');
                        if(educationObjectList[`${EQ_educationalLevel__c.value}`] === true)
                        {
                            haveduplicate=true;
                            generateErrorMsg('More than one record not allowed for 10th or 12th degree','error');
                            clearedValidation=false;
                            return;
                        }
                        educationObjectList[EQ_educationalLevel__c.value]=true;
                        if(EQ_educationalLevel__c.value =="" || EQ_educationalLevel__c.value ==null)
                        {
                            clearedValidation=false;
                            EQ_educationalLevel__c.classList.add('errorBorder');
                            record.querySelector('#EQ_educationalLevel__c_error').innerHTML = 'educational level required';
                        }
                        if(EQ_boardOrUniversity__c.value =="" || EQ_boardOrUniversity__c.value == null)
                        {
                            clearedValidation=false;
                            EQ_boardOrUniversity__c.classList.add('errorBorder');
                            record.querySelector('#EQ_boardOrUniversity__c_error').innerHTML = 'boardOrUniversity required';
                        }
                        if(EQ_yearOfPassing__c.value =="" || EQ_yearOfPassing__c.value == null)
                        {
                            clearedValidation=false;
                            EQ_yearOfPassing__c.classList.add('errorBorder');
                            record.querySelector('#EQ_yearOfPassing__c_error').innerHTML = 'year of passing required';
                        }
                        else if(! (regexValidation(EQ_yearOfPassing__c.value,'year')) )
                        {
                            clearedValidation=false;
                            EQ_yearOfPassing__c.classList.add('errorBorder');
                            record.querySelector('#EQ_yearOfPassing__c_error').innerHTML = `should be in 'YYYY' format`;
                        }
                        if(EQ_marksType__c.value == "" || EQ_marksType__c.value == null)
                        {
                            clearedValidation=false;
                            EQ_marksType__c.classList.add('errorBorder');
                            record.querySelector('#EQ_marksType__c_error').innerHTML = 'marks type required';
                        }
                        
                        if(EQ_percentageMarks__c.value =="" || EQ_percentageMarks__c.value == null)
                        {
                            clearedValidation=false;
                            EQ_percentageMarks__c.classList.add('errorBorder');
                            record.querySelector('#EQ_percentageMarks__c_error').innerHTML = 'marks required';
                        }
                        else if((EQ_marksType__c.value == "Percentage")&&(!regexValidation(EQ_percentageMarks__c.value,'marks')))
                        {
                            console.log("Inside percentage")
                            clearedValidation=false;
                            EQ_percentageMarks__c.classList.add('errorBorder');
                            record.querySelector('#EQ_percentageMarks__c_error').innerHTML = 'marks should be 2 digits without point value or %/cgpa symbol';
                        }
                        else if((EQ_marksType__c.value == "CGPA"))
                        {
                            console.log("Inside cgpa")
                            if(EQ_percentageMarks__c.value>10)
                            {
                                clearedValidation=false;
                                EQ_percentageMarks__c.classList.add('errorBorder');
                                record.querySelector('#EQ_percentageMarks__c_error').innerHTML = 'CGPA cannot be more than 10'; 
                            }
                            else if(!(regexValidation(EQ_percentageMarks__c.value,'cgpa')))
                            {
                                clearedValidation=false;
                                EQ_percentageMarks__c.classList.add('errorBorder');
                                record.querySelector('#EQ_percentageMarks__c_error').innerHTML = 'format can have digits and a single point value if needed'; 
                            }
                        }
                        if(EQ_schoolOrCollegeName__c.value =="" || EQ_schoolOrCollegeName__c.value == null)
                        {
                            clearedValidation=false;
                            EQ_schoolOrCollegeName__c.classList.add('errorBorder');
                            record.querySelector('#EQ_schoolOrCollegeName__c_error').innerHTML = 'schoolorCollege name required';
                        }  
                        if(EQ_educationalLevel__c.value=='Graduation' || EQ_educationalLevel__c.value=='Post-Graduation') 
                        {
                            if(EQ_specialisation__c.value=="" || EQ_specialisation__c.value==null)
                            {
                                clearedValidation=false;
                                EQ_specialisation__c.classList.add('errorBorder');
                                record.querySelector('#EQ_specialisation__c_error').innerHTML = 'Specialisation is required';
                            }
                        }
                        let obj;
                        if(Id.value === 'new')
                        {
                            obj ={
                                EQ_educationalLevel__c : EQ_educationalLevel__c.value,
                                EQ_degree__c : EQ_degree__c.value,
                                EQ_schoolOrCollegeName__c : EQ_schoolOrCollegeName__c.value,
                                EQ_boardOrUniversity__c :EQ_boardOrUniversity__c.value,
                                EQ_percentageMarks__c : EQ_percentageMarks__c.value,
                                EQ_yearOfPassing__c : EQ_yearOfPassing__c.value,
                                EQ_branchTwelth__c : EQ_branchTwelth__c.value,
                                EQ_specialisation__c :EQ_specialisation__c.value,
                                EQ_postGradDegree__c :EQ_postGradDegree__c.value,
                                EQ_marksType__c : EQ_marksType__c.value,
                                EqToEmp__c:empId
                            }
                        }
                        else
                        {
                            obj ={
                                Id:Id.value,
                                EQ_educationalLevel__c :EQ_educationalLevel__c.value,
                                EQ_degree__c :EQ_degree__c.value,
                                EQ_schoolOrCollegeName__c :EQ_schoolOrCollegeName__c.value,
                                EQ_boardOrUniversity__c :EQ_boardOrUniversity__c.value,
                                EQ_percentageMarks__c :EQ_percentageMarks__c.value,
                                EQ_yearOfPassing__c :EQ_yearOfPassing__c.value,
                                EQ_branchTwelth__c :EQ_branchTwelth__c.value,
                                EQ_specialisation__c :EQ_specialisation__c.value,
                                EQ_postGradDegree__c :EQ_postGradDegree__c.value,
                                EQ_marksType__c :EQ_marksType__c.value,
                                EqToEmp__c:empId
                            }
                        }
                        arrayOfAllEducationInputDivGroups.push(obj);
                    });
                    const jsonFormat = JSON.stringify(arrayOfAllEducationInputDivGroups);
                    if(clearedValidation)
                    {
                        Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.mainController.saveOrUpdateEducationalDetailBulk}',
                        jsonFormat,       
                        function(result, event) {
                            if(event.statusCode == 200)
                            {
                                fetchEducationalInfo();
                                generateErrorMsg(` Education data has been saved successfully 🎉`,'success');
                            }   
                            else
                            {
                                generateErrorMsg(`Oops! 😬 Your data wasn't saved. Please try again or reach out to the admin for assistance🚀`,'error');
                            }
                        });

                        // update stage 
                        currentSection='Educational-Detail'
                        Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.mainController.updateStage}',empId,currentSection,
                        function(result,event){
                            console.log('updating the stage')
                            console.log('Current Section ',currentSection);
                        }) 
                    }
                    else
                    {
                        scrollToTop();
                        if(!(haveduplicate))
                        {
                            generateErrorMsg('please clear the validations','warning');
                        }
                    }
                    return;
                }
                if (e.target.closest('.deletebtn')) {
                    const parent = e.target.closest('.input_div_group');
                    parent.querySelector('.deleteConfirm').style.display='flex';
                    parent.querySelector('.deletebtn').style.display='none';
                    return;
                }
                if(e.target.closest('.cofirmdeletebtn'))
                {
                    const parent = e.target.closest('.input_div_group');
                    const Id = parent.querySelector("#EQId").value;
            
                    if (Id != 'new') {
                        Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.mainController.deleteEducationalDetail}',
                            Id,
                            function(result, event) {
                                if(event.statusCode == 200)
                                {
                                    generateErrorMsg('deleted successfully','success');
                                }
                                else
                                {
                                    generateErrorMsg('couldnt delete try again or contact the admin','error');
                                }
                            });
                        parent.remove();
                    }
                    else
                    {
                        parent.remove();
                        generateErrorMsg('deleted successfully','success');
                    }
                    return;
                }
                if(e.target.closest('.notcofirmdeletebtn'))
                {
                    const parent = e.target.closest('.input_div_group');
                    parent.querySelector('.deleteConfirm').style.display='none';
                    parent.querySelector('.deletebtn').style.display='block';
                    return;
                }
                if(e.target.closest('.previousbtn'))
                {
                    const moveTo = e.target.dataset.goto;
                        if(currentSection != 'Family-Detail')
                        {
                            document.querySelector('.educationDetail').classList.remove('yellow-stage');
                            document.querySelector('.educationDetail').classList.add('green-stage');
                        }
                        if(document.querySelector('.familyDetail').classList.contains('green-stage'))
                        {
                            document.querySelector('.familyDetail').classList.remove('green-stage');
                            document.querySelector('.familyDetail').classList.add('yellow-stage');
                        }
                        changeSection(moveTo);
                    return;
                }
                if(e.target.closest('.nextbtn'))
                {
                    saveEducationInfo();
                    // if(isInputChanged[activeMenuSection])
                    // {
                    //     generateErrorMsg('please consider saving before navigating to next page','warning');
                    //     return;
                    // }
                    if(clearedValidation)
                    {
                        let previewStageReached;
                        Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.mainController.fetchPreviewStatus}',empId,function(result,event){
                        previewStageReached=result;
                        console.log('result',previewStageReached);
                        let moveTo;
                        if(previewStageReached){
                            moveTo='preview_section';
                            displayPreviewPage();
                            console.log('inside if preview');
                            if(document.querySelector('.educationDetail').classList.contains('yellow-stage'))
                            {
                                document.querySelector('.educationDetail').classList.remove('yellow-stage');
                            }
                            document.querySelector('.educationDetail').classList.add('green-stage');
                            document.querySelector('.workExperienceDetail').classList.add('green-stage');
                        }
                        else{
                            moveTo = e.target.dataset.goto;
                            if(document.querySelector('.educationDetail').classList.contains('yellow-stage'))
                            {
                                document.querySelector('.educationDetail').classList.remove('yellow-stage');
                            }
                            document.querySelector('.educationDetail').classList.add('green-stage');
                            document.querySelector('.workExperienceDetail').classList.add('yellow-stage');
                            console.log('moving to..',moveTo);
                        }
                        changeSection(moveTo);
                        });
                    }
                    else{
                        scrollToTop();
                    }
                    return;
                }
            });

            //logic to save, update and delete workExpData form

            const workExpSaveEditDeleteLogic = document.querySelector('.workexp_form');
            workExpSaveEditDeleteLogic.addEventListener('change',(e)=>{
                if(e.target.closest('input') || e.target.closest('select'))
                {
                    isInputChanged[activeMenuSection]=true;
                }
            })
            workExpSaveEditDeleteLogic.addEventListener('click', (e) => {
                let clearedValidation=true;
                const buffer = document.querySelector('.buffer');
                if (e.target.type !== 'date'){
                    e.preventDefault();
                }
                if (e.target.closest('.savebtn')){
                    saveWokExperienceInfo();
                }
                function saveWokExperienceInfo(){
                    isInputChanged[activeMenuSection]=false;
                    clearAllErrorBorder(workExpSaveEditDeleteLogic);
                    const containerArray=[];
                    const AllinputDivGroups = workExpSaveEditDeleteLogic.querySelectorAll('.input_div_group');
                    AllinputDivGroups.forEach((index)=>{
                        let organisationName = index.querySelector("#WE_orgName");
                        let designation = index.querySelector("#WE_des");
                        let startDate = index.querySelector("#WE_from");
                        let endDate = index.querySelector("#WE_to");
                        let reason = index.querySelector("#WE_reason");
                        let recordId = index.querySelector("#WE_id");
                        var dateObj1 = new Date(startDate.value);
                        var dateObj2 = new Date(endDate.value);
                    
                        var totalExp = (dateObj2-dateObj1)/(1000 * 60 * 60 * 24 * 365.25);
                        console.log(totalExp);
                        let obj;
                        if(organisationName.value =="" || organisationName==null)
                        {
                            organisationName.classList.add('errorBorder');
                            document.querySelector('#WE_orgName__c_error').innerHTML = 'organisationName required';
                            clearedValidation=false;
                        }
                        if(designation.value =="" || designation.value==null)
                        {
                            designation.classList.add('errorBorder');
                            document.querySelector('#WE_des__c_error').innerHTML = 'designation required';
                            clearedValidation=false;
                        }
                        if(startDate.value =="" || startDate.value==null)
                        {
                            startDate.classList.add('errorBorder');
                            document.querySelector('#WE_from__c_error').innerHTML = 'start date required';
                            clearedValidation=false;
                        }
                        else if(!regexValidation(startDate.value,'date'))
                        {
                            startDate.classList.add('errorBorder');
                            document.querySelector('#WE_from__c_error').innerHTML = 'invalid date format';
                            clearedValidation=false;
                        }
                        if(endDate.value == "" || endDate.value ==null)
                        {
                            endDate.classList.add('errorBorder');
                            clearedValidation=false;
                            document.querySelector('#WE_to__c_error').innerHTML = 'end date  required';
                        }
                        else
                        {
                            if(!regexValidation(endDate.value , 'date'))
                            {
                                endDate.classList.add('errorBorder');
                                clearedValidation=false;
                                document.querySelector('#WE_to__c_error').innerHTML = 'invalid date format';
                            }
                            else if(endDate.value < startDate.value)
                            {
                                endDate.classList.add('errorBorder');
                                clearedValidation=false;
                                document.querySelector('#WE_to__c_error').innerHTML = 'start date should be less than end date';
                            }
                        }
                        if(recordId.value == 'new')
                        {
                            obj={
                                WE_organizationName__c:organisationName.value,
                                WE_designationWhenLeaving__c:designation.value,
                                WE_from__c:startDate.value,
                                WE_to__c:endDate.value,
                                WE_reasonForLeaving__c:reason.value,
                                WE_duration__c:totalExp,
                                WeToEmp__c :empId
                            }
                        }
                        else
                        {
                            obj={
                                Id:recordId.value,
                                WE_organizationName__c:organisationName.value,
                                WE_designationWhenLeaving__c:designation.value,
                                WE_from__c:startDate.value,
                                WE_to__c:endDate.value,
                                WE_duration__c:totalExp,
                                WE_reasonForLeaving__c:reason.value,
                                WeToEmp__c :empId
                            }
                        }
                        containerArray.push(obj);
                    });
                    const jsonFormat = JSON.stringify(containerArray);
                    if(clearedValidation)
                    {
                        const buffer = document.querySelector('.buffer');
                        Visualforce.remoting.Manager.invokeAction(
                        '{!$RemoteAction.mainController.insertUpdateWorkDataBulk}',
                        jsonFormat,
                        function(result, event) {
                        if(event.statusCode == 200)
                        {
                            fetchWorkExpInfo();
                            buffer.style.display='none';
                            generateErrorMsg(` Work Experience data has been saved successfully 🎉`,'success');
                        }   
                        else
                        {
                            buffer.style.display='none';
                            generateErrorMsg(`Oops! 😬 Your data wasn't saved. Please try again or reach out to the admin for assistance🚀`,'error');
                        }
                    });

                    // update stage 
                    currentSection='Work-Detail'
                        Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.mainController.updateStage}',empId,currentSection,function(result,event){

                            console.log('updating the stage')
                            console.log('Current Section ',currentSection);
                        }) 
                    }
                    else{
                        scrollToTop();
                        generateErrorMsg('please clear the validations','warning');
                    }
                    return;
                }
                if (e.target.closest('.deletebtn')) {
                    const parent = e.target.closest('.input_div_group');
                    parent.querySelector('.deleteConfirm').style.display='flex';
                    parent.querySelector('.deletebtn').style.display='none';
                    return;
                }
                if(e.target.closest('.cofirmdeletebtn'))
                {
                    buffer.style.display='block';
                    const parent = e.target.closest('.input_div_group');
                    let recordId = parent.querySelector("#WE_id");
                    if (!(recordId.value == 'new')) {
                        Visualforce.remoting.Manager.invokeAction(
                            '{!$RemoteAction.mainController.deleteWorkExpData}',
                            recordId.value, empId,
                            function(result, event) {
                                buffer.style.display='none';
                            });
                            parent.remove();
                    }
                    else
                    {
                        buffer.style.display='none';
                        parent.remove();
                    }
                    return;
                }
                if(e.target.closest('.notcofirmdeletebtn'))
                {
                    const parent = e.target.closest('.input_div_group');
                    parent.querySelector('.deleteConfirm').style.display='none';
                    parent.querySelector('.deletebtn').style.display='block';
                    return;
                }
                if(e.target.closest('.previousbtn'))
                {
                    moveTo = e.target.dataset.goto;
                        if(currentSection != 'Educational-Detail' )
                        {
                            document.querySelector('.workExperienceDetail').classList.remove('yellow-stage');
                            document.querySelector('.workExperienceDetail').classList.add('green-stage');
                        }
                        if(document.querySelector('.educationDetail').classList.contains('green-stage'))
                        {
                            document.querySelector('.educationDetail').classList.remove('green-stage');
                            document.querySelector('.educationDetail').classList.add('yellow-stage');
                        }
                        changeSection(moveTo);
                    return;
                }
                if(e.target.closest('.nextbtn'))
                {
                    saveWokExperienceInfo();
                    // if(isInputChanged[activeMenuSection])
                    // {
                    //     generateErrorMsg('please consider saving before navigating to next page','warning');
                    //     return;
                    // }
                    if(clearedValidation)
                    {
                        let previewStageReached;
                        Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.mainController.fetchPreviewStatus}',empId,function(result,event){
                        previewStageReached=result;
                        console.log('result',previewStageReached);
                        let moveTo;
                        if(previewStageReached){
                            moveTo='preview_section';
                            displayPreviewPage();
                            if(document.querySelector('.workExperienceDetail').classList.contains('yellow-stage'))
                            {
                                document.querySelector('.workExperienceDetail').classList.remove('yellow-stage');
                            }
                            document.querySelector('.workExperienceDetail').classList.add('green-stage');
                            document.querySelector('.documentChecklistDetail').classList.add('green-stage');
                            console.log('inside if preview');
                        }
                        else{
                            moveTo = e.target.dataset.goto;
                            console.log('moving to..',moveTo);
                            if(document.querySelector('.workExperienceDetail').classList.contains('yellow-stage'))
                            {
                                document.querySelector('.workExperienceDetail').classList.remove('yellow-stage');
                            }
                            document.querySelector('.workExperienceDetail').classList.add('green-stage');
                            document.querySelector('.documentChecklistDetail').classList.add('yellow-stage');
                        }
                        changeSection(moveTo);
                        });
                    }
                    else
                    {
                        scrollToTop();
                    }
                    return;
                }
                if(e.target.closest('input') || e.target.closest('select'))
                {
                    return;
                }
            });
            
            //logic for checklist
            const documentCheckListSaveEditLogic=document.querySelector('.checklist_section');
            documentCheckListSaveEditLogic.addEventListener('change',(e)=>{
                if(e.target.closest('input'))
                {
                    isInputChanged[activeMenuSection]=true;
                }
            })
            documentCheckListSaveEditLogic.addEventListener('click',(e)=>{
                const buffer = document.querySelector('.buffer');
                if(e.target.type !=='checkbox')
                {
                    e.preventDefault();   
                }
                
                if(e.target.closest('.savebtn'))
                {                  
                    saveChecklistInfo();
                }
                function saveChecklistInfo(){
                            let isResumeAvailable=document.getElementById('resume').checked;
                        
                        
                            let isPhotoAvailable=document.getElementById('photo').checked;
                        
                        
                            let isEduCertificatesAvailable=document.getElementById('edu_certificates').checked;
                        
                        
                            let isSalarySlipAvailable=document.getElementById('salary_slip').checked;
                            
                        
                            let isPanCardAvailable=document.getElementById('pancard').checked;
                        
                        
                            let isAddressProofAvailable=document.getElementById('address_proof').checked;
                        
                        
                            let isProvidentFormAvailable=document.getElementById('provident_fund').checked;
                        
                        
                            let isGratuityFormAvailable=document.getElementById('gratuity_form').checked;
                        
                        
                            let isOfferLetterAvailable=document.getElementById('offer_letter').checked;
                        
                        
                            let isExperienceLetterAvailable=document.getElementById('experience_letter').checked;
                        
                        
                            let isBankStatementAvailable=document.getElementById('bank_statement').checked;
                        
                        
                            let isBloodGroupAvailable=document.getElementById('bloodgroup_report').checked;
                        
                        
                            let isCodeOfConductAvailable=document.getElementById('code_of_conduct').checked;

                            Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.mainController.setPreviewStatus}',empId,
                            function(result,event){
                                console.log(result);
                            });
                        
                        buffer.style.display='block';
                        Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.mainController.saveCheckList}',empId,
                        isResumeAvailable,isPhotoAvailable, isEduCertificatesAvailable,isSalarySlipAvailable,isPanCardAvailable,isAddressProofAvailable,
                        isProvidentFormAvailable,isGratuityFormAvailable,isOfferLetterAvailable,isExperienceLetterAvailable,
                        isBankStatementAvailable,isBloodGroupAvailable,isCodeOfConductAvailable
                        , function(result,event){
                            if(event.statusCode === 200)
                            {

                                fetchDocumentCheckList();
                                buffer.style.display='none';
                                generateErrorMsg(` Checklist data has been saved successfully 🎉`,'success');
                                isInputChanged[activeMenuSection]=false;

                            }
                            else
                            {
                                buffer.style.display='none';
                                generateErrorMsg(`Oops! 😬 Your data wasn't saved. Please try again or reach out to the admin for assistance🚀`,'error');
                            }
                        }); 

                        // update stage 
                        currentSection='Checklist-Detail'
                        Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.mainController.updateStage}',empId,currentSection,
                        function(result,event)
                        {
                            console.log('updating the stage')
                            console.log('Current Section ',currentSection);
                        }); 
                    return;
                }
                if(e.target.closest('.previousbtn'))
                {         
                    let moveTo =e.target.dataset.goto;
                    if(currentSection !='Work-Detail')
                    {
                        document.querySelector('.documentChecklistDetail').classList.remove('yellow-stage');
                        document.querySelector('.documentChecklistDetail').classList.add('green-stage');
                    }
                    if(document.querySelector('.workExperienceDetail').classList.contains('green-stage')){
                        document.querySelector('.workExperienceDetail').classList.remove('green-stage');
                        document.querySelector('.workExperienceDetail').classList.add('yellow-stage');
                    }
                    
                    document.querySelector('.work')
                    changeSection(moveTo);
                    return;
                } 
                if(e.target.closest('.nextbtn'))
                {
                    saveChecklistInfo();
                    let moveTo =e.target.dataset.goto;
                    if(moveTo==='preview_section'){
                         displayPreviewPage();
                    }
                    // call fetch preview 

                    moveTo = e.target.dataset.goto;
                    console.log('moving to..',moveTo);
                    if(document.querySelector('.documentChecklistDetail').classList.contains('yellow-stage')){
                        document.querySelector('.documentChecklistDetail').classList.remove('yellow-stage');
                    }
                    document.querySelector('.documentChecklistDetail').classList.add('green-stage');
                    document.querySelector('.previewEmployeeDetail').classList.add('yellow-stage');


                    changeSection(moveTo);
                    return;
                }  
            });

            //fetching emp info
            const fetchEmployeeInfo = () => {
                let empHtml=``;
                console.log(empId);
                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.mainController.fetchEmployee}', empId,
                    function(result, event) {         
                        document.getElementById('Emp_firstName__c').value = result.Emp_firstName__c ? result.Emp_firstName__c : '';
                        document.getElementById('Emp_midName__c').value = result.Emp_midName__c ? result.Emp_midName__c : '';
                        document.getElementById('Emp_lastName__c').value = result.Emp_lastName__c ? result.Emp_lastName__c : '';
                        document.getElementById('Emp_dateOfBirth__c').value = result.Emp_dateOfBirth__c ? result.Emp_dateOfBirth__c : '';
                        document.getElementById('Emp_maritalStatus__c').value = result.Emp_maritalStatus__c ? result.Emp_maritalStatus__c : '';
                        document.getElementById('Emp_gender__c').value = result.Emp_gender__c ? result.Emp_gender__c : '';
                        document.getElementById('Emp_bloodGroup__c').value = result.Emp_bloodGroup__c ? result.Emp_bloodGroup__c : '';
                        document.getElementById('Emp_nationality__c').value = result.Emp_nationality__c ? result.Emp_nationality__c : '';
                        document.getElementById('Emp_emailId__c').value = result.Emp_emailId__c ? result.Emp_emailId__c : '';
                        document.getElementById('Emp_telephone__c').value = result.Emp_telephone__c ? result.Emp_telephone__c : '';
                        document.getElementById('Emp_mobilePhone__c').value = result.Emp_mobilePhone__c ? result.Emp_mobilePhone__c : '';
                        document.getElementById('Emp_tShirtSize__c').value = result.Emp_tShirtSize__c ? result.Emp_tShirtSize__c : '';
                        document.getElementById('Emp_resAddress__c').value = result.Emp_resAddress__c ? result.Emp_resAddress__c : '';
                        document.getElementById('Emp_resCity__c').value = result.Emp_resCity__c ? result.Emp_resCity__c : '';
                        document.getElementById('Emp_resState__c').value = result.Emp_resState__c ? result.Emp_resState__c : '';
                        document.getElementById('Emp_resZipCode__c').value = result.Emp_resZipCode__c ? result.Emp_resZipCode__c : '';
                        document.getElementById('Emp_foodPref__c').value = result.Emp_foodPref__c ? result.Emp_foodPref__c : '';
                        document.getElementById('Emp_lang1__c').value = result.Emp_lang1__c ? result.Emp_lang1__c : '';
                        document.getElementById('Emp_lang1Read__c').checked = result.Emp_lang1Read__c;
                        document.getElementById('Emp_lang1Write__c').checked = result.Emp_lang1Write__c;
                        document.getElementById('Emp_lang1Speak__c').checked = result.Emp_lang1Speak__c;
                        document.getElementById('Emp_lang2__c').value = result.Emp_lang2__c ? result.Emp_lang2__c : '';
                        document.getElementById('Emp_lang2Read__c').checked = result.Emp_lang2Read__c;
                        document.getElementById('Emp_lang2Write__c').checked = result.Emp_lang2Write__c;
                        document.getElementById('Emp_lang2Speak__c').checked = result.Emp_lang2Speak__c;
                        document.getElementById('Emp_lang3__c').value = result.Emp_lang3__c ? result.Emp_lang3__c : '';
                        document.getElementById('Emp_lang3Read__c').checked = result.Emp_lang3Read__c;
                        document.getElementById('Emp_lang3Write__c').checked = result.Emp_lang3Write__c;
                        document.getElementById('Emp_lang3Speak__c').checked = result.Emp_lang3Speak__c;
                        document.getElementById('Emp_commonAddressCheck__c').checked = result.Emp_commonAddressCheck__c?result.Emp_commonAddressCheck__c:false;
                        if (result.Emp_commonAddressCheck__c) {
                            const mailingInfoDiv = document.querySelectorAll('.mailing_div');
                            mailingInfoDiv.forEach((e) => {
                                e.style.display = 'none';
                            });
                        } 
                        else {
                            const mailingInfoDiv = document.querySelectorAll('.mailing_div');
                            mailingInfoDiv.forEach((e) => {
                                e.style.display = 'block';
                            });
                            document.getElementById('Emp_commAddress__c').value = result.Emp_commAddress__c ? result.Emp_commAddress__c : ' ';
                            document.getElementById('Emp_commCity__c').value = result.Emp_commCity__c ? result.Emp_commCity__c : ' ';
                            document.getElementById('Emp_commState__c').value = result.Emp_commState__c ? result.Emp_commState__c : ' ';
                            document.getElementById('Emp_commZipCode__c').value = result.Emp_commZipCode__c ? result.Emp_commZipCode__c : ' ';
                        }
                        renderKycSection();
                });

                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.mainController.fetchEmergencyContact}', empId,
                    function(result, event) {
                        empHtml += `
                        <div class="input_div">
                            <label for="">Emergency Contact Name</label><br/>
                            <input class="input" type="text" name="" id="Emp_Emergency__c" />
                        </div>
                        <div class="input_div">
                            <label for="">Emergency Contact Phone</label><br/>
                            <input class="input" type="text" name="" id="Emp_EmergencyContact_Phone__c" />
                        </div>
                        <div class="input_div">
                            <label for="">Emergency Contact Relation</label><br/>
                            <input class="input" type="text" name="" id="Emp_EmergencyContact_Relation__c" />
                        </div>
                        <div class="btn-container_prevNext">
                            <div class="button_container">
                                <button class="previousbtn"  style="opacity:0;">Previous</button>
                            </div>
                            <div class="button_container">
                                <button class="nextbtn" data-goto='kyc_section'>Next</button>
                            </div>
                        </div>
                        </form>`;

                        document.getElementById('Emp_Emergency__c').value = result.Emp_Emergency__c ? result.Emp_Emergency__c : '';
                        document.getElementById('Emp_EmergencyContact_Phone__c').value = result.Emp_EmergencyContact_Phone__c ? result.Emp_EmergencyContact_Phone__c : '';
                        document.getElementById('Emp_EmergencyContact_Relation__c').value = result.Emp_EmergencyContact_Relation__c ? result.Emp_EmergencyContact_Relation__c: '';
                    }
                );
                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.mainController.fetchStage}',empId,
                function(result,event){
                    console.log(result)
                    console.log(result)
                    currentSection=result.Emp_currentStage__c;
                       // Checklist 
                       if(result.Emp_currentStage__c==='Employee-Detail'){
                            document.querySelector('.kycDetail').classList.remove('StepProgress-item');
                            document.querySelector('.kycDetail').classList.add('yellow-stage');
                            document.querySelector('.employeeDetail').classList.remove('StepProgress-item');
                            document.querySelector('.employeeDetail').classList.add('green-stage');
                        }
                        else if(result.Emp_currentStage__c==='KYC-Detail'){
                            changeSection('family_section')
                            document.querySelector('.familyDetail').classList.remove('StepProgress-item');
                            document.querySelector('.employeeDetail').classList.remove('StepProgess-item');
                            document.querySelector('.employeeDetail').classList.add('green-stage');
                            document.querySelector('.kycDetail').classList.add('green-stage');
                            document.querySelector('.familyDetail').classList.add('yellow-stage');
                        }
                        else if(result.Emp_currentStage__c==='Family-Detail'){
                            changeSection('education_section')
                            document.querySelector('.educationDetail').classList.remove('StepProgress-item');
                            document.querySelector('.educationDetail').classList.add('yellow-stage');
                            document.querySelector('.employeeDetail').classList.add('green-stage');
                            document.querySelector('.kycDetail').classList.add('green-stage');
                            document.querySelector('.familyDetail').classList.add('green-stage');
                        }
                        else if(result.Emp_currentStage__c==='Educational-Detail'){
                            changeSection('workexp_section')
                            document.querySelector('.workExperienceDetail').classList.remove('StepProgress-item');
                            document.querySelector('.workExperienceDetail').classList.add('yellow-stage');
                            document.querySelector('.employeeDetail').classList.add('green-stage');
                            document.querySelector('.kycDetail').classList.add('green-stage');
                            document.querySelector('.familyDetail').classList.add('green-stage');
                            document.querySelector('.educationDetail').classList.add('green-stage');  
                        }
                        else if(result.Emp_currentStage__c==='Work-Detail'){
                            changeSection('checklist_section')
                            document.querySelector('.documentChecklistDetail').classList.remove('StepProgress-item');
                            document.querySelector('.documentChecklistDetail').classList.add('yellow-stage');


                            document.querySelector('.employeeDetail').classList.add('green-stage');
                            document.querySelector('.kycDetail').classList.add('green-stage');
                            document.querySelector('.familyDetail').classList.add('green-stage');
                            document.querySelector('.educationDetail').classList.add('green-stage');
                            document.querySelector('.workExperienceDetail').classList.add('green-stage');
                        }
                        else if(result.Emp_currentStage__c==='Checklist-Detail'){
                            displayPreviewPage()
                            changeSection('preview_section')
                            document.querySelector('.previewEmployeeDetail').classList.remove('StepProgress-item');
                            document.querySelector('.previewEmployeeDetail').classList.add('yellow-stage');

                            document.querySelector('.employeeDetail').classList.remove('StepProgress-item');
                            document.querySelector('.kycDetail').classList.remove('StepProgress-item');
                            document.querySelector('.familyDetail').classList.remove('StepProgress-item');
                            document.querySelector('.educationDetail').classList.remove('StepProgress-item');
                            document.querySelector('.workExperienceDetail').classList.remove('StepProgress-item');
                            document.querySelector('.documentChecklistDetail').classList.remove('StepProgress-item'); 

                            document.querySelector('.employeeDetail').classList.add('green-stage');
                            document.querySelector('.kycDetail').classList.add('green-stage');
                            document.querySelector('.familyDetail').classList.add('green-stage');
                            document.querySelector('.educationDetail').classList.add('green-stage');
                            document.querySelector('.workExperienceDetail').classList.add('green-stage');
                            document.querySelector('.documentChecklistDetail').classList.add('green-stage'); 
                        }
                        else if(result.Emp_currentStage__c==='Preview-Detail'){
                            changeSection('preview_section')
                            document.querySelector('.employeeDetail').classList.remove('StepProgress-item');
                            document.querySelector('.kycDetail').classList.remove('StepProgress-item');
                            document.querySelector('.familyDetail').classList.remove('StepProgress-item');
                            document.querySelector('.educationDetail').classList.remove('StepProgress-item');
                            document.querySelector('.workExperienceDetail').classList.remove('StepProgress-item');
                            document.querySelector('.documentChecklistDetail').classList.remove('StepProgress-item');
                            document.querySelector('.previewEmployeeDetail').classList.remove('StepProgress-item');

                            document.querySelector('.employeeDetail').classList.add('green-stage');
                            document.querySelector('.kycDetail').classList.add('green-stage');
                            document.querySelector('.familyDetail').classList.add('green-stage');
                            document.querySelector('.educationDetail').classList.add('green-stage');
                            document.querySelector('.workExperienceDetail').classList.add('green-stage');
                            document.querySelector('.documentChecklistDetail').classList.add('green-stage');
                            document.querySelector('.previewEmployeeDetail').classList.add('green-stage');
                        }
                });
            }
            
            //fetching kyc info
            const fetchKycInfo = () => {
                let thereareresults=false;
                let nationality;
                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.mainController.fetchNationality}', empId,
                function(result , event)
                {
                    nationality=result;
                });
                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.mainController.fetchKyc}', empId,
                    function(result, event) {
                        console.log("inside fetchkyc remoting");
                        console.log("kyc results"+result);
                        const parent = document.querySelector('.kyc_form');
                        const allInputDivGroups = parent.querySelectorAll('.input_div_group');
                        allInputDivGroups.forEach((e)=>{
                            const docType = e.querySelector('#Kyc_documentType__c').value;
                            if(docType ==='Passport' || docType === 'Aadhar Card' || docType === 'Pan Card')
                            {
            
                            }
                            else
                            {
                                e.remove();
                            }
                        });
                        result.forEach((e) => {
                            thereareresults=true;
                            if(e.Kyc_documentType__c == 'Aadhar Card' && nationality=='INDIAN'){
                                console.log('heyyy');
                                const parent = document.querySelector('.aadhar_kyc_input_div_group');                                
                                parent.querySelector('#Kyc_documentType__c').value=e.Kyc_documentType__c ? e.Kyc_documentType__c:'';
                                parent.querySelector('#Kyc_nameOnDocument__c').value= e.Kyc_nameOnDocument__c ? e.Kyc_nameOnDocument__c:'';
                                parent.querySelector('#Kyc_documentNumber__c').value =e.Kyc_documentNumber__c ? e.Kyc_documentNumber__c:'';
                                parent.querySelector('#Kyc_remarks__c').value = e.Kyc_remarks__c ? e.Kyc_remarks__c : '';
                                parent.querySelector('#Kyc_Id').value = e.Id;
                                return;
                            }
                            else if (e.Kyc_documentType__c == 'Pan Card' && nationality=='INDIAN'){
                                console.log("heyyy pan");
                                const parent = document.querySelector('.pan_kyc_input_div_group');
                                parent.querySelector('#Kyc_documentType__c').value=e.Kyc_documentType__c ? e.Kyc_documentType__c:'';
                                parent.querySelector('#Kyc_nameOnDocument__c').value= e.Kyc_nameOnDocument__c ? e.Kyc_nameOnDocument__c:'';
                                parent.querySelector('#Kyc_documentNumber__c').value =e.Kyc_documentNumber__c ? e.Kyc_documentNumber__c:'';
                                parent.querySelector('#Kyc_remarks__c').value = e.Kyc_remarks__c ? e.Kyc_remarks__c:'';
                                parent.querySelector('#Kyc_Id').value = e.Id;
                                return;
                            }
                            else if(e.Kyc_documentType__c == 'Passport')
                            {
                                const parent = document.querySelector('.passport_kyc_input_div_group');
                                parent.querySelector('#Kyc_documentType__c').value=e.Kyc_documentType__c ? e.Kyc_documentType__c:'';
                                parent.querySelector('#Kyc_nameOnDocument__c').value= e.Kyc_nameOnDocument__c ? e.Kyc_nameOnDocument__c:'';
                                parent.querySelector('#Kyc_documentNumber__c').value =e.Kyc_documentNumber__c ? e.Kyc_documentNumber__c:'';
                                parent.querySelector('#Kyc_remarks__c').value = e.Kyc_remarks__c ? e.Kyc_remarks__c:'';
                                parent.querySelector('#Kyc_expDate').value = e.Kyc_expDate__c ? e.Kyc_expDate__c:'';
                                parent.querySelector('#Kyc_Id').value = e.Id;
                                return;
                            }
                            else
                            {
                                const ifscVisibility = (e.Kyc_documentType__c == 'Bank Account (ICICI)' ? true : false);
                                const expDateVisibility = (e.Kyc_documentType__c == 'Passport' ? true : false);
                                const html = `<div class="input_div_group" >
                                <div class="input_div ">
                                    <label for="">Document Type</label><br/>
                                        <select name="Document type" id="Kyc_documentType__c" class="Kyc_documentType__c">
                                            <option value="Bank Account (ICICI)" ${e.Kyc_documentType__c === 'Bank Account (ICICI)' ? 'selected' : ''}>Bank Account (ICICI)</option>
                                            <option value="Aadhar Card" ${e.Kyc_documentType__c === 'Aadhar Card' ? 'selected' : ''}>Aadhar Card</option>
                                            <option value="Pan Card" ${e.Kyc_documentType__c === 'Pan Card' ? 'selected' : ''}>Pan Card</option>
                                            <option value="Voter Card" ${e.Kyc_documentType__c === 'Voter Card' ? 'selected' : ''}>Voter Card</option>
                                            <option value="ESIC Card" ${e.Kyc_documentType__c === 'ESIC Card' ? 'selected' : ''}>ESIC Card</option>
                                            <option value="Ration Card" ${e.Kyc_documentType__c === 'Ration Card' ? 'selected' : ''}>Ration Card</option>
                                            <option value="Passport" ${e.Kyc_documentType__c === 'Passport' ? 'selected' : ''}>Passport</option>
                                            <option value="UAN" ${e.Kyc_documentType__c === 'UAN' ? 'selected' : ''}>UAN</option>
                                        </select>  
                                        <p class="respective_errors" id="Kyc_documentType__c_error"></p>                                                  
                                </div>
                                <div class="input_div">
                                    <label for="Kyc_nameOnDocument__c">Name as on document</label><br/>
                                    <input type="text" id="Kyc_nameOnDocument__c" class="input" value="${e.Kyc_nameOnDocument__c ?e.Kyc_nameOnDocument__c:'' }"/>
                                    <p class="respective_errors" id="Kyc_nameOnDocument__c_error"></p>    
                                </div>
                                <div class="input_div">
                                    <label for="Kyc_documentNumber__c">Document no</label><br/>
                                    <input type="text" class="input" name="Kyc_documentNumber__c" id="Kyc_documentNumber__c" value="${e.Kyc_documentNumber__c ?e.Kyc_documentNumber__c:'' }"/>
                                    <p class="respective_errors" id="Kyc_documentNumber__c_error"></p>
                                </div>
                                <div class="input_div IFSC_input_div" style="display:${ifscVisibility?'block':'none'}">
                                    <label for="">IFSC</label><br/>
                                    <input class="input" type="text" name="" id="Kyc_ifscCode" value='${e.Kyc_ifscCode__c ? e.Kyc_ifscCode__c :''}' />
                                    <p class="respective_errors" id="Kyc_ifscCode__c_error"></p>
                                </div>
                                <div class="input_div Passport_exp_input_div" style="display:${expDateVisibility?'block':'none'}">
                                    <label for="">Expiry date</label><br/>
                                    <input class="input" type="text" name="" id="Kyc_expDate" value='${e.Kyc_Kyc_ ? e.Kyc_expDate__c : ''}' />
                                    <p class="respective_errors" id="Kyc_expDate__c_error"></p>
                                </div>
                                <div class=" address">
                                    <label for="remarks">Remarks if any</label><br/>
                                    <input type="text" name="remarks" class="input" id="Kyc_remarks__c" value="${e.Kyc_remarks__c ? e.Kyc_remarks__c :''}"cols="30" rows="10"/>
                                </div>
                                <input type="hidden" id="Kyc_Id" value="${e.Id}" class="Id"/>
                                <div class="btn-container">
                                    <div class="button_container">
                                        <button class="deletebtn" ><i class="fa-solid fa-trash" ></i></button>
                                    </div>
                                    <div class="deleteConfirm" style="display:none">
                                            <p style="color:black">Are you sure?</p>
                                            <button class="cofirmdeletebtn">Yes</button>
                                            <button class="notcofirmdeletebtn">No</button>
                                    </div>
                                </div>`;
                                document.querySelector('.kyc_form').firstElementChild.insertAdjacentHTML('afterend', html);
                            }
                        });
                        console.log('out of fetchkyc remoting');
                });
            }

            //fetching family info
            const fetchFamilyInfo = () => {
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.mainController.getFamilyInfo}',
                    empId,
                    function(result, event) {                        
                        const parent = document.querySelector('.family_form');
                        parent.querySelectorAll('.input_div_group').forEach((e)=>{e.remove()});
                        result.forEach((index) => {
                            const html = `
                                    <div class="input_div_group">
                            <div class="input_div ">
                                <label for="">Relation</label><br/>
                                <select name="Relation" id="Fi_relation">
                                            <option value="Father" ${index.Fi_relation__c == 'Father' ? 'selected':''}>Father</option>
                                            <option value="Mother" ${index.Fi_relation__c == 'Mother' ? 'selected':''}>Mother</option>
                                            <option value="Spouse" ${index.Fi_relation__c == 'Spouse' ? 'selected':''}>Spouse</option>
                                            <option value="Son"    ${index.Fi_relation__c == 'Son'? 'selected':''}>Son</option>
                                            <option value="Daughter" ${index.Fi_relation__c == 'Daughter'? 'selected':''}>Daughter</option>
                                </select>
                            </div>
                            <div class="input_div">
                                <label for="">FirstName</label><br/>
                                <input class="input" type="text" name="" id="Fi_firstName" value='${index.Fi_firstName__c ? index.Fi_firstName__c: '' }'>
                                <p class="respective_errors" id="Fi_firstName__c_error"></p>
                            </div>
                            <div class="input_div">
                                <label for="">MiddleName</label><br/>
                                <input class="input" type="text" name="" id="Fi_middleName" value='${index.Fi_middleName__c ? index.Fi_middleName__c : ''}'>
                                <p class="respective_errors" id="Fi_middleName__c_error"></p>
                            </div>
                            <div class="input_div">
                                <label for="">LastName</label><br/>
                                <input class="input" type="text" name="" id="Fi_lastName" value='${index.Fi_lastName__c ? index.Fi_lastName__c : '' }'>
                                <p class="respective_errors" id="Fi_lastName__c_error"></p>
                            </div>
                            <div class="input_div">
                                <label for="">Date of Birth</label><br/>
                                <input class="input" type="date" name="" id="Fi_dob" value=${index.Fi_dob__c ? index.Fi_dob__c : ''}>
                                <p class="respective_errors" id="Fi_dob__c_error"></p>
                            </div>
                            <input class="input" type="hidden" name="" id="Fi_id"  value="${index.Id}" />
                            <div class="btn-container">
                                <div class="button_container">
                                    <button class="deletebtn"><i class="fa-solid fa-trash" ></i></button>
                                </div>
                                <div class="deleteConfirm">
                                    <p>Are you sure?</p>
                                    <button class="cofirmdeletebtn">Yes</button>
                                    <button class="notcofirmdeletebtn">No</button>
                                </div>
                            </div>
                        </div>
                            `;
                            parent.firstElementChild.insertAdjacentHTML("afterend", html);
                            //enableInputFields(parent);
                        });
                    }
                );
            }

            //fetching educational info
            const fetchEducationalInfo = () => {
                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.mainController.fetchEducationalQualificationData}', empId,
                    function(result, event) {
                        const parent = document.querySelector('.education_form');
                        parent.querySelectorAll('.input_div_group').forEach((e)=>{e.remove()});
                        if (event.status) {
                            if (result.length <= 0) return;
                            result.forEach(record => {                                
                                const html = `
                                            <div class="input_div_group">
                                            <div class="input_div">
                                                    <label for="educationLevel">Education Level </label>
                                                    <select name="educationLevel" id="EQ_educationalLevel__c" value='${record.EQ_educationalLevel__c}'>
                                                    <option value="10th" ${record.EQ_educationalLevel__c==='10th'?'selected':''}>10th</option>
                                                    <option value="12th" ${record.EQ_educationalLevel__c==='12th'?'selected':''}>12th</option>
                                                    <option value="Graduation" ${record.EQ_educationalLevel__c==='Graduation'?'selected':''}>Graduation</option>
                                                    <option value="Post-Graduation" ${record.EQ_educationalLevel__c==='Post-Graduation'?'selected':''}>Post-Graduation</option>
                                                    <option value="Other" ${record.EQ_educationalLevel__c==='Other'?'selected':''}>Other</option>
                                                    </select>   
                                                    <p class="respective_errors" id="EQ_educationalevel__c_error"></p>        
                                            </div>
                                            <div class="input_div twelth" style="${record.EQ_educationalLevel__c ==='12th' ? 'display:block' : 'display:none'}">
                                                    <label for="">Branch</label><br/>
                                                    <select name="" id="EQ_branchTwelth__c">
                                                        <option value=""${record.EQ_branchTwelth__c===''?'selected':''}> </option>
                                                        <option value="Science"${record.EQ_branchTwelth__c==='Science'?'selected':''}>Science</option>
                                                        <option value="Commerce"${record.EQ_branchTwelth__c==='Commerce'?'selected':''}>Commerce</option>
                                                        <option value="Arts"${record.EQ_branchTwelth__c==='Arts'?'selected':''}>Arts</option>
                                                    </select>
                                            </div>
                                            <div class="input_div graduation" style="${record.EQ_educationalLevel__c ==='Graduation' ? 'display:block' :'display:none'}">
                                                    <label for="">Degree</label><br/>
                                                    <select name="" id="EQ_degree__c">
                                                        <option value=""> </option>
                                                        <option value="Bachelor Of Engineering" ${record.EQ_degree__c === 'Bachelor Of Engineering' ? 'selected' : ''}>Bachelor Of Engineering</option>
                                                        <option value="Bachelor Of Technology" ${record.EQ_degree__c === 'Bachelor Of Technology' ? 'selected' : ''}>Bachelor Of Technology</option>
                                                        <option value="Bachelor Of Arts" ${record.EQ_degree__c === 'Bachelor Of Arts' ? 'selected' : ''}>Bachelor Of Arts</option>
                                                        <option value="Bachelor Of Science" ${record.EQ_degree__c === 'Bachelor Of Science' ? 'selected' : ''}>Bachelor Of Science</option>
                                                        <option value="Bachelor Of Commerce" ${record.EQ_degree__c === 'Bachelor Of Commerce' ? 'selected' : ''}>Bachelor Of Commerce</option>
                                                        <option value="Bachelor Of Business Administration" ${record.EQ_degree__c === 'Bachelor Of Business Administration' ? 'selected' : ''}>Bachelor Of Business Administration</option>
                                                        <option value="Bachelor Of Computer Applications" ${record.EQ_degree__c === 'Bachelor Of Computer Applications' ? 'selected' : ''}>Bachelor Of Computer Applications</option>
                                                        <option value="Bachelor Of Architecture" ${record.EQ_degree__c === 'Bachelor Of Architecture' ? 'selected' : ''}>Bachelor Of Architecture</option>
                                                        <option value="Bachelor Of Laws" ${record.EQ_degree__c === 'Bachelor Of Laws' ? 'selected' : ''}>Bachelor Of Laws</option>
                                                        <option value="Bachelor Of Design" ${record.EQ_degree__c === 'Bachelor Of Design' ? 'selected' : ''}>Bachelor Of Design</option>
                                                        <option value="Bachelor Of Hotel Management" ${record.EQ_degree__c === 'Bachelor Of Hotel Management' ? 'selected' : ''}>Bachelor Of Hotel Management</option>
                                                        <option value="Bachelor Of Social Work" ${record.EQ_degree__c === 'Bachelor Of Social Work' ? 'selected' : ''}>Bachelor Of Social Work</option>
                                                    </select>
                                            </div>
                                            <div class="input_div postgraduation" style="${record.EQ_educationalLevel__c ==='Post-Graduation' ? 'display:block' :'display:none'}">
                                                    <label for="">Degree</label><br/>
                                                    <select name="" id="EQ_postGradDegree__c">
                                                        <option value="Master Of Engineering" ${record.EQ_postGradDegree__c === 'Master Of Engineering' ? 'selected' : ''}>Master Of Engineering</option>
                                                            <option value="Master Of Arts" ${record.EQ_postGradDegree__c === 'Master Of Arts' ? 'selected' : ''}>Master Of Arts</option>
                                                            <option value="Master Of Science" ${record.EQ_postGradDegree__c === 'Master Of Science' ? 'selected' : ''}>Master Of Science</option>
                                                            <option value="Master Of Commerce" ${record.EQ_postGradDegree__c === 'Master Of Commerce' ? 'selected' : ''}>Master Of Commerce</option>
                                                            <option value="Master Of Technology" ${record.EQ_postGradDegree__c === 'Master Of Technology' ? 'selected' : ''}>Master Of Technology</option>
                                                            <option value="Master Of Business Administration" ${record.EQ_postGradDegree__c === 'Master Of Business Administration' ? 'selected' : ''}>Master Of Business Administration</option>
                                                            <option value="Master Of Computer Applications" ${record.EQ_postGradDegree__c === 'Master Of Computer Applications' ? 'selected' : ''}>Master Of Computer Applications</option>
                                                            <option value="Master Of Architecture" ${record.EQ_postGradDegree__c === 'Master Of Architecture' ? 'selected' : ''}>Master Of Architecture</option>
                                                            <option value="Master Of Laws" ${record.EQ_postGradDegree__c === 'Master Of Laws' ? 'selected' : ''}>Master Of Laws</option>
                                                            <option value="Master Of Design" ${record.EQ_postGradDegree__c === 'Master Of Design' ? 'selected' : ''}>Master Of Design</option>
                                                    </select>
                                            </div>
                                            <div class="input_div specialisation" style="${record.EQ_educationalLevel__c ==='10th' ? 'display:none' :record.EQ_educationalLevel__c ==='12th' ? 'display:none' : 'display:block'}">
                                                <label for="">Specialisation</label><br/>
                                                    <input class="input" type="text" id="EQ_specialisation__c" value='${record.EQ_specialisation__c}'/>
                                                    <p class="respective_errors" id="EQ_specialisation__c_error"></p>                                        
                                            </div>
                                            <div class="input_div">
                                                <label>Board/University</label>
                                                <input class="input" id="EQ_boardOrUniversity__c" type="text" value='${record.EQ_boardOrUniversity__c?record.EQ_boardOrUniversity__c:''}' />   
                                                <p class="respective_errors" id="EQ_boardOrUniversity__c_error"></p>                                        
                                            </div>
                                            <div class="input_div">
                                                <label>School/College Name</label>
                                                <input class="input" id="EQ_schoolOrCollegeName__c" type="text" value='${record.EQ_schoolOrCollegeName__c?record.EQ_schoolOrCollegeName__c:''}'/>  
                                                <p class="respective_errors" id="EQ_schoolOrCollegeName__c_error"></p>    
                                            </div>
                                            <div class="input_div">
                                                <label>Year of Passing</label>
                                                    <input class="input" id="EQ_yearOfPassing__c" type="text" value='${record.EQ_yearOfPassing__c?record.EQ_yearOfPassing__c:''}'/>
                                                    <p class="respective_errors" id="EQ_yearOfPassing__c_error"></p>
                                                    
                                            </div>
                                            <div class="input_div">
                                                <label for="">GPA/Percentage</label><br/>
                                                    <select name="marksType" id="EQ_marksType__c">
                                                        <option value="CGPA"${record.EQ_marksType__c==='CGPA'?'selected':''}>CGPA</option>
                                                        <option value="Percentage"${record.EQ_marksType__c==='Percentage'?'selected':''}>Percentage</option>
                                                </select>
                                                <p class="respective_errors" id="EQ_marksType__c_error"></p>
                                            </div>
                                            <div class="input_div">
                                                <label>Percentage Marks</label>
                                                    <input class="input" id="EQ_percentageMarks__c" type="text" value='${record.EQ_percentageMarks__c?record.EQ_percentageMarks__c:''}'/>
                                                    <p class="respective_errors" id="EQ_percentageMarks__c_error"></p>
                                    
                                            </div>
                                            <input type="hidden" id="EQId" value="${record.Id}" class="EQId" />
                                            <div class="btn-container">
                                                            <div class="button_container">
                                                                <button class="deletebtn"><i class="fa-solid fa-trash"></i></button>
                                                            </div>
                                                            <div class="deleteConfirm" style="display:none">
                                                                    <p style="color:black">Are you sure?</p>
                                                                    <button class="cofirmdeletebtn">Yes</button>
                                                                    <button class="notcofirmdeletebtn">No</button>
                                                            </div>
                                            </div>`;
                                parent.firstElementChild.insertAdjacentHTML("afterend", html);
                            });
                        }
                    }
                );
            }

            //fetchimg work info
            const fetchWorkExpInfo = () => {
                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.mainController.fetchWorkExpData}', empId,
                    function(result, event) {                        
                        document.querySelector('.buffer').style.display='none';
                        const parent = document.querySelector('.workexp_form');
                        parent.querySelectorAll('.input_div_group').forEach((e)=>{e.remove()});
                        result.forEach((index) => {
                            const html = `<div class="input_div_group">
                                    <div class="input_div ">
                                        <label for="">Organisation Name</label><br/>
                                        <input class="input" type="text" name="" id="WE_orgName" value="${index.WE_organizationName__c ? index.WE_organizationName__c:''}"/>
                                        <p class="respective_errors" id="WE_orgName__c_error"></p>
                                    </div>
                                    <div class="input_div">
                                        <label for="">Designation while leaving</label><br/>
                                        <input class="input" type="text" name="" id="WE_des" value="${index.WE_designationWhenLeaving__c ? index.WE_designationWhenLeaving__c:''}"/>
                                        <p class="respective_errors" id="WE_des__c_error"></p>
                                    </div>
                                    <div class="input_div">
                                        <label for="">From</label><br/>
                                        <input class="input" type="date" name="" id="WE_from" value="${index.WE_from__c ? index.WE_from__c: ''}"/>
                                        <p class="respective_errors" id="WE_from__c_error"></p>
                                    </div>
                                    <div class="input_div">
                                        <label for="">To</label><br/>
                                        <input class="input" type="date" name="" id="WE_to" value="${index.WE_to__c ? index.WE_to__c : ''}"/>
                                        <p class="respective_errors" id="WE_to__c_error"></p>
                                    </div>
                                    <div class="input_div">
                                        <label for="">Reason for leaving</label><br/> 
                                        <input class="input" type="text" name="" id="WE_reason" value="${index.WE_reasonForLeaving__c ? index.WE_reasonForLeaving__c : ''}"/>
                                    </div>
                                    <input class="input" type="hidden" name="" id="WE_id"  value="${index.Id}" />
                                    <div class="btn-container">
                                    <div class="button_container">
                                        <button class="deletebtn"><i class="fa-solid fa-trash" ></i></button>
                                    </div>
                                    <div class="deleteConfirm" style="display:none">
                                        <p style="color:black">Are you sure?</p>
                                        <button class="cofirmdeletebtn">Yes</button>
                                        <button class="notcofirmdeletebtn">No</button>
                                    </div>
                                    </div>
                                </div>`;
                            document.querySelector('.workexp_form').firstElementChild.insertAdjacentHTML('afterend', html);
                        });
                    }
                );
            }
            
            const fetchDocumentCheckList=()=>{
                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.mainController.fetchCheckList}',empId,
                function(result,event){                
                if(result==null) return;
                document.getElementById('resume').checked=result.Emp_isResumeAvailable__c?result.Emp_isResumeAvailable__c:'';
                document.getElementById('photo').checked=result.Emp_isPhotoAvailable__c?result.Emp_isPhotoAvailable__c:'';
                document.getElementById('edu_certificates').checked=result.Emp_isEduCertificatesAvailable__c?result.Emp_isEduCertificatesAvailable__c:'';
                document.getElementById('salary_slip').checked=result.Emp_isSalaryS__c?result.Emp_isSalaryS__c:'';
                document.getElementById('pancard').checked=result.Emp_isPanCardAvailable__c?result.Emp_isPanCardAvailable__c:'';
                document.getElementById('address_proof').checked=result.Emp_isProofOfAddressAvailable__c?result.Emp_isProofOfAddressAvailable__c:'';
                document.getElementById('provident_fund').checked=result.Emp_isPFNominationAvailable__c?result.Emp_isPFNominationAvailable__c:'';
                document.getElementById('gratuity_form').checked=result.Emp_isGratuityFormAvailable__c?result.Emp_isGratuityFormAvailable__c:'';
                document.getElementById('offer_letter').checked=result.Emp_isSignedOfferLetterAvailable__c?result.Emp_isSignedOfferLetterAvailable__c:'';
                document.getElementById('experience_letter').checked=result.Emp_isExperienceLetterAvailable__c?result.Emp_isExperienceLetterAvailable__c:'';
                document.getElementById('bank_statement').checked=result.Emp_isBankStatementAvailable__c?result.Emp_isBankStatementAvailable__c:'';
                document.getElementById('bloodgroup_report').checked=result.Emp_isBloodGroupReportAvailable__c?result.Emp_isBloodGroupReportAvailable__c:'';
                document.getElementById('code_of_conduct').checked=result.Emp_isCodeOfConductAvailable__c?result.Emp_isCodeOfConductAvailable__c:'';
                });            
            }

            //preview section
            const displayPreviewPage=()=>{
                //    Fetch Employee Info
                function reverseString(str) 
                {
                    return str.split("-").reverse().join("-");
                }

                let empInfoPreview=``;
                console.log('empid',empId);
                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.mainController.fetchEmployee}', empId,
                    function(result, event){
                        empInfoPreview = `
                            <div class="edit-btn-section">
                                <h1>Employee Information</h1>
                                <div class="edit_button_container">
                                    <button class="editBtnEmployeeInfo" data-goto='employee_section'>Edit</button>
                                </div>
                            </div>
                            <div class="input_div_group">
                                <div class="input_div">
                                    <label for="">First name</label><br/>
                                    <input class="input" type="text" name="" id="PEmp_firstName__c" value="${result.Emp_firstName__c ? result.Emp_firstName__c : ' '}" readonly="true"/>
                                </div>
                                <div class="input_div">
                                    <label for="">Middle name</label><br/>
                                    <input class="input" type="text" name="" id="PEmp_midName__c" value="${ result.Emp_midName__c ? result.Emp_midName__c : ' '}" readonly="true"/>
                                </div>
                                <div class="input_div">
                                    <label for="">Last name</label><br/>
                                    <input class="input" type="text" name="" id="PEmp_lastName__c"  value="${result.Emp_lastName__c?result.Emp_lastName__c:' '}" readonly="true"/>
                                </div>
                                <div class="input_div ">
                                    <label for="">Date of Birth</label><br/>
                                    <input class="input"  name="" id="PEmp_dateOfBirth__c" readonly="true" value="${result.Emp_dateOfBirth__c?reverseString(result.Emp_dateOfBirth__c):' '}"/>
                                </div>
                                <div class="input_div">
                                    <label for="">Marital Status</label><br/>
                                    <input class="input" name="Marital Status" id="PEmp_maritalStatus__c" value="${result.Emp_maritalStatus__c?result.Emp_maritalStatus__c:' '}" readonly="true"/>
                                </div>
                                <div class="input_div">
                                    <label for="">Gender</label><br/>
                                    <input class="input" name="Gender" id="PEmp_gender__c" value="${result.Emp_gender__c?result.Emp_gender__c:''}" readonly="true"/>
                                </div>
                                <div class="input_div">
                                    <label for="">Blood Group</label><br/>
                                    <input class="input" name="" id="PEmp_bloodGroup__c" value="${result.Emp_bloodGroup__c?result.Emp_bloodGroup__c:''}" readonly="true"/>
                                </div>
                                <div class="input_div span-2">
                                    <label for="">Nationality</label><br/>
                                    <input name="" class="input" id="PEmp_nationality__c" value="${result.Emp_nationality__c?result.Emp_nationality__c:''}" readonly="true"/>
                                </div>
                                <div class="input_div">
                                    <label for="">Email id</label><br/>
                                    <input class="input" type="email" name="" id="PEmp_emailId__c" value="${result.Emp_emailId__c?result.Emp_emailId__c:''}" readonly="true"/>
                                </div>
                                <div class="input_div">
                                    <label for="">Telephone</label><br/>
                                    <input class="input" type="text"  name="" id="PEmp_telephone__c" value="${result.Emp_telephone__c?result.Emp_telephone__c:''}" readonly="true"/>
                                </div>
                                <div class="input_div">
                                    <label for="">Mobile</label><br/>
                                    <input class="input" type="text" name="" id="PEmp_mobilePhone__c" value="${result.Emp_mobilePhone__c?result.Emp_mobilePhone__c:''}" readonly="true"/>
                                </div>
                                <div class="input_div">
                                    <label for="">T shirt Size</label><br/>
                                    <input name="T Shirt Size" class="input" id="PEmp_tShirtSize__c" value="${result.Emp_tShirtSize__c?result.Emp_tShirtSize__c:''}" readonly="true"/>
                                </div>
                                <div class=" address">
                                    <label for="">Residential Address / Permanent Address</label><br/>
                                    <input name="" class="input" id="PEmp_resAddress__c" cols="30" rows="10" value="${result.Emp_resAddress__c?result.Emp_resAddress__c:''}" readonly="true"/>
                                </div>
                                <div class="input_div">
                                    <label for="">City</label><br/>
                                    <input class="input" type="text" name="" id="PEmp_resCity__c" value="${result.Emp_resCity__c?result.Emp_resCity__c:''}" readonly="true"/>
                                </div>
                                <div class="input_div">
                                    <label for="">State</label><br/>
                                    <input class="input" type="text" name="" id="PEmp_resState__c" value="${result.Emp_resState__c?result.Emp_resState__c:''}" readonly="true"/>
                                </div>
                                <div class="input_div">
                                    <label for="">Zipcode</label><br/>
                                    <input class="input" type="text" name="" id="PEmp_resZipCode__c" value="${result.Emp_resZipCode__c?result.Emp_resZipCode__c:''}" readonly="true"/>
                                </div>
                                <div class="input_div input_checkbox_div">
                                    <div>
                                        <input class="input mailing_checkbox" type="checkbox" name="" id="PEmp_commonAddressCheck__c" ${result.Emp_commonAddressCheck__c?'checked="true"':''}" disabled="true"/>
                                    </div>
                                    <label for=""> Residential address same as Mailing address?</label><br/>
                                </div>
                                <div class=" address mailing_div">
                                    <label for="">Mailing Address</label><br/>
                                    <input name="" class="input" id="PEmp_commAddress__c" cols="30" rows="10" value="${result.Emp_commAddress__c?result.Emp_commAddress__c:''}" readonly="true"/>
                                </div>
                                <div class="input_div mailing_div">
                                    <label for="">Mailing City</label><br/>
                                    <input class="input" type="text" name="" id="PEmp_commCity__c" value="${result.Emp_commCity__c?result.Emp_commCity__c:''}" readonly="true"/>
                                </div>
                                <div class="input_div mailing_div">
                                    <label for="">Mailing State</label><br/>
                                    <input class="input" type="text" name="" id="PEmp_commState__c" value="${result.Emp_commState__c?result.Emp_commState__c:''}" readonly="true"/>
                                </div>
                                <div class="input_div mailing_div">
                                    <label for="">Mailing Zipcode</label><br/>
                                    <input class="input" type="text" name="" id="PEmp_commZipCode__c" value="${result.Emp_commZipCode__c?result.Emp_commZipCode__c:''}" readonly="true"/>
                                </div>
                                <div class="input_div">
                                    <label for="">Food Preference</label><br/><input class="input" name="Food Preferences" id="PEmp_foodPref__c" value="${result.Emp_foodPref__c?result.Emp_foodPref__c:''}" readonly="true"/>
                                </div>
                                <div></div>
                                <div></div>
                                <div class="input_div">
                                    <label for="">Language 1</label><br/>
                                    <input class="input" type="text" name="" id="PEmp_lang1__c" value="${result.Emp_lang1__c?result.Emp_lang1__c:''}" readonly="true" /> <br/>
                                    <div class="checkbox">
                                        <div>
                                            <input class="input" type="checkbox" name="" id="PEmp_lang1Read__c" ${result.Emp_lang1Read__c?'checked="true"':''} disabled="true"/>
                                        </div>
                                        <label for="">Read</label><br/>
                                        <div>
                                            <input class="input" type="checkbox" name="" id="PEmp_lang1Write__c" ${result.Emp_lang1Write__c?'checked="true"':''} disabled="true"/>
                                        </div>
                                        <label for="">Write</label><br/>
                                        <div>
                                            <input class="input" type="checkbox" name="" id="PEmp_lang1Speak__c" ${result.Emp_lang1Speak__c?'checked="true"':''} disabled="true"/>
                                        </div>
                                    <label for="">Speak</label><br/>
                                    </div>
                                </div>
                                <div class="input_div">
                                    <label for="">Language 2</label><br/>
                                    <input class="input" type="text" name="" id="PEmp_lang2__c" value="${result.Emp_lang2__c?result.Emp_lang2__c:''}" readonly="true"/><br/>
                                    <div class="checkbox">
                                        <input class="input" type="checkbox" name="" id="PEmp_lang2Read__c"  ${result.Emp_lang2Read__c?'checked="true"':''} disabled="true"/>
                                        <label for="">Read</label><br/>
                                        <input class="input" type="checkbox" name="" id="PEmp_lang2Write__c" ${result.Emp_lang2Write__c?'checked="true"':''} disabled="true"/>
                                        <label for="">Write</label><br/>
                                        <input class="input" type="checkbox" name="" id="PEmp_lang2Speak__c" ${result.Emp_lang2Speak__c?'checked="true"':''} disabled="true"/>
                                        <label for="">Speak</label><br/>
                                    </div>
                                </div>
                                <div class="input_div">
                                    <label for="">Language 3</label><br/>
                                    <input class="input" type="text" name="" id="PEmp_lang3__c" value="${result.Emp_lang3__c?result.Emp_lang3__c:''}" readonly="true"/> <br/>
                                    <div class="checkbox">
                                        <input class="input" type="checkbox" name="" id="PEmp_lang3Read__c" ${result.Emp_lang3Read__c?'checked="true"':''} disabled="true"/>
                                        <label for="">Read</label><br/>
                                        <input class="input" type="checkbox" name="" id="PEmp_lang3Write__c" ${result.Emp_lang3Write__c?'checked="true"':''} disabled="true"/>
                                        <label for="">Write</label><br/>
                                        <input class="input" type="checkbox" name="" id="PEmp_lang3Speak__c" ${result.Emp_lang3Speak__c?'checked="true"':''} disabled="true"/>
                                        <label for="">Speak</label><br/>
                                    </div>
                                </div>`;
                    }
                );

                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.mainController.fetchEmergencyContact}', empId,
                    function(result, event) {
                        empInfoPreview += `
                            <div class="input_div">
                                <label for="">Emergency Contact Name</label><br/>
                                <input class="input" type="text" name="" id="Emp_Emergency__c" value="${result.Emp_Emergency__c?result.Emp_Emergency__c:''}" readonly="true"/>
                            </div>
                            <div class="input_div">
                                <label for="">Emergency Contact Phone</label><br/>
                                <input class="input" type="text" name="" id="Emp_EmergencyContact_Phone__c" value="${result.Emp_EmergencyContact_Phone__c?result.Emp_EmergencyContact_Phone__c:''}" readonly="true"/>
                            </div>
                            <div class="input_div">
                                <label for="">Emergency Contact Relation</label><br/>
                                <input class="input" type="text" name="" id="Emp_EmergencyContact_Relation__c" value="${result.Emp_EmergencyContact_Relation__c?result.Emp_EmergencyContact_Relation__c:''}" readonly="true"/>
                            </div>
                        </div>`;

                        const preview_section=document.querySelector('.empinfo_preview_form ');
                        preview_section.insertAdjacentHTML('afterBegin',empInfoPreview);
                        //console.log('empHtml',empInfoPreview);
                    }
                );

                // Fetch KYC Details
                let kycInfo = `
                <div class="edit-btn-section">
                    <h1>Employee KYC Details</h1>
                    <div class="edit_button_container">
                        <button class="editBtnKycInfo" data-goto='kyc_section'>Edit</button>
                    </div>
                </div>`;
                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.mainController.fetchKyc}', empId,
                    function(result, event) {
                        result.forEach((e) => {
                                const html = `<div class="input_div_group">
                                                <div class="input_div ">
                                                    <label for="">Document Type</label><br/>
                                                        <select name="Document type" id="Kyc_documentType__c" class="Kyc_documentType__c" disabled="true">
                                                            <option value="Bank Account (ICICI)" ${e.Kyc_documentType__c === 'Bank Account (ICICI)' ? 'selected' : ''}>Bank Account (ICICI)</option>
                                                            <option value="Aadhar Card" ${e.Kyc_documentType__c === 'Aadhar Card' ? 'selected' : ''}>Aadhar Card</option>
                                                            <option value="Pan Card" ${e.Kyc_documentType__c === 'Pan Card' ? 'selected' : ''}>Pan Card</option>
                                                            <option value="Voter Card" ${e.Kyc_documentType__c === 'Voter Card' ? 'selected' : ''}>Voter Card</option>
                                                            <option value="ESIC Card" ${e.Kyc_documentType__c === 'ESIC Card' ? 'selected' : ''}>ESIC Card</option>
                                                            <option value="Ration Card" ${e.Kyc_documentType__c === 'Ration Card' ? 'selected' : ''}>Ration Card</option>
                                                            <option value="Passport" ${e.Kyc_documentType__c === 'Passport' ? 'selected' : ''}>Passport</option>
                                                            <option value="UAN" ${e.Kyc_documentType__c === 'UAN' ? 'selected' : ''}>UAN</option>
                                                        </select>                                                    
                                                </div>
                                                <div class="input_div">
                                                    <label for="Kyc_nameOnDocument__c">Name as on document</label><br/>
                                                    <input type="text" id="Kyc_nameOnDocument__c" class="input" value="${e.Kyc_nameOnDocument__c ?e.Kyc_nameOnDocument__c:'' }" readonly="true"/>
                                                </div>
                                                <div class="input_div">
                                                    <label for="Kyc_documentNumber__c">${e.Kyc_documentType__c?e.Kyc_documentType__c:'Document'} no</label><br/>
                                                    <input type="text" class="input" name="Kyc_documentNumber__c" id="Kyc_documentNumber__c" value="${e.Kyc_documentNumber__c ?e.Kyc_documentNumber__c:'' }" readonly="true"/>
                                                </div>
                                                <div class="input_div IFSC_input_div" style=${e.Kyc_documentType__c==='Bank Account (ICICI)'?'display:block':'display:none'}>
                                                    <label for="">IFSC</label><br/>
                                                    <input class="input" type="text" name="" id="Kyc_ifscCode" value='${e.Kyc_ifscCode__c ? e.Kyc_ifscCode__c :''}' readonly="true"/>
                                                </div>
                                                <div class="input_div Passport_exp_input_div" style=${e.Kyc_documentType__c==='Passport'?'display:block':'display:none'}>
                                                    <label for="">Expiry date</label><br/>
                                                    <input class="input" type="text" name="" id="Kyc_expDate" value='${e.Kyc_expDate__c ? e.Kyc_expDate__c : ''}' readonly="true"/>
                                                </div>
                                                <div class=" address">
                                                    <label for="remarks">Remarks if any</label><br/>
                                                    <input type="text" name="remarks" class="input" id="Kyc_remarks__c" value="${e.Kyc_remarks__c ? e.Kyc_remarks__c :''}"cols="30" rows="10" readonly="true"/>
                                                </div>
                                                <input type="hidden" id="Kyc_Id" value="${e.Id}" class="Id"/>
                                                </div>
                                            </div>`;
                                kycInfo += html;
                        });
                        const preview_section=document.querySelector('.kycinfo_preview_form');
                        preview_section.insertAdjacentHTML('beforeend',kycInfo);
                    }
                );

                // Fetch Family Details 
                let Familyhtml = `
                <div class="edit-btn-section">
                    <h1>Employee Family Details</h1>
                    <div class="edit_button_container">
                        <button class="editBtnFamilyInfo" data-goto='family_section'>Edit</button>
                    </div>
                </div>`;
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.mainController.getFamilyInfo}', empId,
                    function(result, event) {
                        if(result.length<=0){
                                        html=`
                                            <form action="" class="form familyinfo_preview_form">
                                                <div class="input_div_group" style="display:block;>
                                                    <div class="input_div">
                                                        <label> No Family Details Provided </label>
                                                        </div>
                                                    </div>
                                            </form>
                                            `;
                                            Familyhtml += html;
                                        const preview_section=document.querySelector('.familyinfo_preview_form');
                                        preview_section.insertAdjacentHTML('beforeend',Familyhtml);
                                        return ;
                        }
                        Familyhtml+=`<form action="" class="form familyinfo_preview_form">`;
                        //console.log(result);
                        result.forEach((index) => {
                            const html = `
                                    <div class="input_div_group">                                       
                                        <div class="input_div ">
                                            <label for="">Relation</label><br/>
                                            <select name="Relation" id="Fi_relation" disabled="true">
                                                <option value="Father" ${index.Fi_relation__c == 'Father' ? 'selected':''}>Father</option>
                                                <option value="Mother" ${index.Fi_relation__c == 'Mother' ? 'selected':''}>Mother</option>
                                                <option value="Spouse" ${index.Fi_relation__c == 'Spouse' ? 'selected':''}>Spouse</option>
                                                <option value="Son"    ${index.Fi_relation__c == 'Son'? 'selected':''}>Son</option>
                                                <option value="Daughter" ${index.Fi_relation__c == 'Daughter'? 'selected':''}>Daughter</option>
                                            </select>
                                        </div>
                                        <div class="input_div">
                                            <label for="">FirstName</label><br/>
                                            <input class="input" type="text" name="" id="Fi_firstName" value='${index.Fi_firstName__c ? index.Fi_firstName__c: '' }' readonly="true"/>
                                        </div>
                                        <div class="input_div">
                                            <label for="">MiddleName</label><br/>
                                            <input class="input" type="text" name="" id="Fi_middleName" value='${index.Fi_middleName__c ? index.Fi_middleName__c : ''}' readonly="true"/>
                                        </div>
                                        <div class="input_div">
                                            <label for="">LastName</label><br/>
                                            <input class="input" type="text" name="" id="Fi_lastName" value='${index.Fi_lastName__c ? index.Fi_lastName__c : '' }' readonly="true"/>
                                        </div>
                                        <div class="input_div">
                                            <label for="">Date of Birth</label><br/>
                                            <input class="input"  name="" id="Fi_dob" value=${index.Fi_dob__c ? reverseString(index.Fi_dob__c) : ''} readonly="true"/>
                                        </div>
                                        <input class="input" type="hidden" name="" id="Fi_id"  value="${index.Id}" />
                                    </div>`;
                            Familyhtml+=html;
                        });
                            Familyhtml+=`</form>`;
                            const preview_section=document.querySelector('.familyinfo_preview_form');
                            preview_section.insertAdjacentHTML('beforeend',Familyhtml);
                    }
                );

                // Fetch Education Detail 
               let eduhtml =  `
               <div class="edit-btn-section">
                <h1>Employee Education Details</h1>
                    <div class="edit_button_container">
                        <button class="editBtnEducationinfo" data-goto='education_section'>Edit</button>
                    </div>
                </div>`;
                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.mainController.fetchEducationalQualificationData}', empId,
                    function(result, event) {
                        if (result.length <= 0) return;
                            result.forEach(record => {
                                const html = `
                                            <div class="input_div_group">
                                                <div class="input_div">
                                                    <label for="educationLevel">Education Level </label>
                                                    <select name="educationLevel" id="EQ_educationalLevel__c" value='${record.EQ_educationalLevel__c}' disabled="true">
                                                        <option value="10th" ${record.EQ_educationalLevel__c==='10th'?'selected':''}>10th</option>
                                                        <option value="12th" ${record.EQ_educationalLevel__c==='12th'?'selected':''}>12th</option>
                                                        <option value="Graduation" ${record.EQ_educationalLevel__c==='Graduation'?'selected':''}>Graduation</option>
                                                        <option value="Post-Graduation" ${record.EQ_educationalLevel__c==='Post-Graduation'?'selected':''}>Post-Graduation</option>
                                                        <option value="Other" ${record.EQ_educationalLevel__c==='Other'?'selected':''}>Other</option>
                                                    </select>           
                                                </div>
                                                <div class="input_div twelth" style="${record.EQ_educationalLevel__c ==='12th' ? 'display:block' : 'display:none'}" >
                                                        <label for="">Branch</label><br/>
                                                        <select name="" id="EQ_branchTwelth__c" disabled="true">
                                                            <option value=""${record.EQ_branchTwelth__c===''?'selected':''}> </option>
                                                            <option value="Science"${record.EQ_branchTwelth__c==='Science'?'selected':''}>Science</option>
                                                            <option value="Commerce"${record.EQ_branchTwelth__c==='Commerce'?'selected':''}>Commerce</option>
                                                            <option value="Arts"${record.EQ_branchTwelth__c==='Arts'?'selected':''}>Arts</option>
                                                        </select>
                                                </div>
                                                <div class="input_div graduation" style="${record.EQ_educationalLevel__c ==='Graduation' ? 'display:block' :'display:none'}" >
                                                        <label for="">Degree</label><br/>
                                                        <select name="" id="EQ_degree__c" disabled="true">
    
                                                        <option value="Bachelor Of Engineering" ${record.EQ_degree__c === 'Bachelor Of Engineering' ? 'selected' : ''}>Bachelor Of Engineering</option>
                                                        <option value="Bachelor Of Technology" ${record.EQ_degree__c === 'Bachelor Of Technology' ? 'selected' : ''}>Bachelor Of Technology</option>
                                                        <option value="Bachelor Of Arts" ${record.EQ_degree__c === 'Bachelor Of Arts' ? 'selected' : ''}>Bachelor Of Arts</option>
                                                        <option value="Bachelor Of Science" ${record.EQ_degree__c === 'Bachelor Of Science' ? 'selected' : ''}>Bachelor Of Science</option>
                                                        <option value="Bachelor Of Commerce" ${record.EQ_degree__c === 'Bachelor Of Commerce' ? 'selected' : ''}>Bachelor Of Commerce</option>
                                                        <option value="Bachelor Of Business Administration" ${record.EQ_degree__c === 'Bachelor Of Business Administration' ? 'selected' : ''}>Bachelor Of Business Administration</option>
                                                        <option value="Bachelor Of Computer Applications" ${record.EQ_degree__c === 'Bachelor Of Computer Applications' ? 'selected' : ''}>Bachelor Of Computer Applications</option>
                                                        <option value="Bachelor Of Architecture" ${record.EQ_degree__c === 'Bachelor Of Architecture' ? 'selected' : ''}>Bachelor Of Architecture</option>
                                                        <option value="Bachelor Of Laws" ${record.EQ_degree__c === 'Bachelor Of Laws' ? 'selected' : ''}>Bachelor Of Laws</option>
                                                        <option value="Bachelor Of Design" ${record.EQ_degree__c === 'Bachelor Of Design' ? 'selected' : ''}>Bachelor Of Design</option>
                                                        <option value="Bachelor Of Hotel Management" ${record.EQ_degree__c === 'Bachelor Of Hotel Management' ? 'selected' : ''}>Bachelor Of Hotel Management</option>
                                                        <option value="Bachelor Of Social Work" ${record.EQ_degree__c === 'Bachelor Of Social Work' ? 'selected' : ''}>Bachelor Of Social Work</option>
                                                        </select>
                                                </div>
                                                <div class="input_div postgraduation" style="${record.EQ_educationalLevel__c ==='Post-Graduation' ? 'display:block' :'display:none'}">
                                                        <label for="">Degree</label><br/>
                                                        <select name="" id="EQ_postGradDegree__c" disabled="true">
                                                            <option value=""> </option>
                                                            <option value="Master Of Engineering" ${record.EQ_postGradDegree__c === 'Master Of Engineering' ? 'selected' : ''}>Master Of Engineering</option>
                                                            <option value="Master Of Arts" ${record.EQ_postGradDegree__c === 'Master Of Arts' ? 'selected' : ''}>Master Of Arts</option>
                                                            <option value="Master Of Science" ${record.EQ_postGradDegree__c === 'Master Of Science' ? 'selected' : ''}>Master Of Science</option>
                                                            <option value="Master Of Commerce" ${record.EQ_postGradDegree__c === 'Master Of Commerce' ? 'selected' : ''}>Master Of Commerce</option>
                                                            <option value="Master Of Technology" ${record.EQ_postGradDegree__c === 'Master Of Technology' ? 'selected' : ''}>Master Of Technology</option>
                                                            <option value="Master Of Business Administration" ${record.EQ_postGradDegree__c === 'Master Of Business Administration' ? 'selected' : ''}>Master Of Business Administration</option>
                                                            <option value="Master Of Computer Applications" ${record.EQ_postGradDegree__c === 'Master Of Computer Applications' ? 'selected' : ''}>Master Of Computer Applications</option>
                                                            <option value="Master Of Architecture" ${record.EQ_postGradDegree__c === 'Master Of Architecture' ? 'selected' : ''}>Master Of Architecture</option>
                                                            <option value="Master Of Laws" ${record.EQ_postGradDegree__c === 'Master Of Laws' ? 'selected' : ''}>Master Of Laws</option>
                                                            <option value="Master Of Design" ${record.EQ_postGradDegree__c === 'Master Of Design' ? 'selected' : ''}>Master Of Design</option>
                                                        </select>
                                                </div>
                                                <div class="input_div specialisation" style="${record.EQ_educationalLevel__c ==='10th' ? 'display:none' :record.EQ_educationalLevel__c ==='12th' ? 'display:none' : 'display:block'}">
                                                    <label for="">Specialisation</label><br/>
                                                        <input class="input" type="text" id="EQ_specialisation__c" value='${record.EQ_specialisation__c ? record.EQ_specialisation__c:''}' readonly="true"/>
                                                </div>
                                                <div class="input_div">
                                                    <label>Board/University</label>
                                                    <input class="input" id="EQ_boardOrUniversity__c" type="text" value='${record.EQ_boardOrUniversity__c?record.EQ_boardOrUniversity__c:''}' readonly="true" />                                           
                                                </div>
                                                <div class="input_div">
                                                    <label>School/College Name</label>
                                                    <input class="input" id="EQ_schoolOrCollegeName__c" type="text" value='${record.EQ_schoolOrCollegeName__c?record.EQ_schoolOrCollegeName__c:''}' readonly="true"/>      
                                                </div>
                                                <div class="input_div">
                                                    <label>Year of Passing</label>
                                                        <input class="input" id="EQ_yearOfPassing__c" type="text" value='${record.EQ_yearOfPassing__c?record.EQ_yearOfPassing__c:''}' readonly="true"/>
                                                </div>
                                                <div class="input_div">
                                                    <label for="">GPA/Percentage</label><br/>
                                                        <select name="marksType" id="EQ_marksType__c" disabled="true">
                                                            <option value="CGPA"${record.EQ_marksType__c==='CGPA'?'selected':''}>CGPA</option>
                                                            <option value="Percentage"${record.EQ_marksType__c==='Percentage'?'selected':''}>Percentage</option>
                                                    </select>
                                                </div>
                                                <div class="input_div">
                                                    <label>Percentage Marks</label>
                                                        <input class="input" id="EQ_percentageMarks__c" type="text" value='${record.EQ_percentageMarks__c?record.EQ_percentageMarks__c:''}' readonly="true"/>
                                                </div>
                                                <input type="hidden" id="EQId" value="${record.Id}" class="EQId" />
                                                </div>
                                            </div>`;
                                        eduhtml+=html;
                            });
                            const preview_section=document.querySelector('.eduinfo_preview_form');
                            preview_section.insertAdjacentHTML('beforeend',eduhtml);
                    }
                );

                // Fetch Work Experience Details 
                let workExpInfo = `
                    <div class="edit-btn-section">
                        <h1>Employee Work Experience Details</h1>
                        <div class="edit_button_container">
                            <button class="editBtnWorkInfo" data-goto='workexp_section'>Edit</button>
                        </div>
                    </div>`;
                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.mainController.fetchWorkExpData}', empId,
                                function(result, event) {
                                    let html=``;
                                    if(result.length<=0){
                                        html=`
                                            <form action="" class="form workexp_preview_form">
                                                <div class="input_div_group" style="display:block;>
                                                    <div class="input_div">
                                                        <label> No Previous Work Experience </label>
                                                        </div>
                                                    </div>
                                            </form>
                                            `;
                                        workExpInfo += html;
                                        const preview_section=document.querySelector('.workexp_preview_form');
                                        preview_section.insertAdjacentHTML('beforeend',workExpInfo);
                                        return ;
                                    }
                                    workExpInfo+=`<form action="" class="form workexp_preview_form">
                                           `;
                                    result.forEach((index) => {
                                        html = `
                                              <div class="input_div_group" style="display:grid;">
                                                <div class="input_div ">
                                                        <label for="">Organisation Name</label><br/>
                                                        <input class="input" type="text" name="" id="WE_orgName" value="${index.WE_organizationName__c ? index.WE_organizationName__c:''}" readonly="true"/>
                                                    </div>
                                                    <div class="input_div">
                                                        <label for="">Designation while leaving</label><br/>
                                                        <input class="input" type="text" name="" id="WE_des" value="${index.WE_designationWhenLeaving__c ? index.WE_designationWhenLeaving__c:''}" readonly="true"/>
                                                    </div>
                                                    <div class="input_div">
                                                        <label for="">From</label><br/>
                                                        <input class="input"  name="" id="WE_from" value="${index.WE_from__c ?reverseString(index.WE_from__c): ''}" readonly="true"/>
                                                    </div>
                                                    <div class="input_div">
                                                        <label for="">To</label><br/>
                                                        <input class="input"  name="" id="WE_to" value="${index.WE_to__c ? reverseString(index.WE_to__c) : ''}" readonly="true"/>
                                                    </div>
                                                    <div class="input_div">
                                                        <label for="">Reason for leaving</label><br/> 
                                                        <input class="input" type="text" name="" id="WE_reason" value="${index.WE_reasonForLeaving__c ? index.WE_reasonForLeaving__c : ''}" readonly="true"/>
                                                    </div>
                                                        <input class="input" type="hidden" name="" id="WE_id"  value="${index.Id}" />    
                                                    </div>
                                                    </div>`;
                                            workExpInfo += html
                                    });
                                    workExpInfo+=`</form>`;
                                    const preview_section=document.querySelector('.workexp_preview_form');
                                    preview_section.insertAdjacentHTML('beforeend',workExpInfo);
                                   // console.log('eduHtml',workExpInfo);
                                }
                            );

                // Document checklist


                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.mainController.fetchCheckList}',empId,
                function(result,event){                
                if(result==null) return;
            
                const documentChecklist=`
                <div class="edit-btn-section">
                        <h1>Document Checklist</h1>
                        <div class="edit_button_container">
                            <button class="editBtnDocumentChecklist" data-goto='checklist_section'>Edit</button>
                        </div>
                    </div>
                    <table class="document_checklist_table" style="margin-top:1rem;">
                        <tr>
                            <th>Document</th>
                            <th>Availability</th>
                        </tr>
                        <tr>
                            <td>1. Updated resume / Curriculum Vitae (C.V.)</td>
                            <td><input type="checkbox" name="resume_yes" id="resume" ${result.Emp_isResumeAvailable__c?'checked="true"':''}/></td>
                        </tr>
                        <tr>
                            <td>2. 6 additional Passport size photographs(Self) with Employee Code and Full name written on the reverse</td>
                            <td><input type="checkbox" name="photo_yes" id="photo" ${result.Emp_isPhotoAvailable__c?'checked="true"':''}/></td>
                        </tr>
                        <tr>
                            <td>3.  Photocopy of all Educational Certificates as mentioned in the section “Educational
                            Qualification”in the Employee Joining form</td>
                            <td><input type="checkbox" name="educational_certificates" id="edu_certificates" ${result.Emp_isEduCertificatesAvailable__c?'checked="true"':''}/></td>
                        </tr>
                        <tr>
                            <td>4. Salary slips of previous company (last 2 months) – if applicable (Original)</td>
                            <td><input type="checkbox" name="salary_slip" id="salary_slip" ${result.Emp_isSalaryS__c?'checked="true"':''}/></td>
                        </tr>
                        <tr>
                            <td>5. PAN Card Copy (Self Attested) with Full Name, Employee Code, Phone/Mobile 
                            number</td>
                            <td><input type="checkbox" name="pancard" id="pancard" ${result.Emp_isPanCardAvailable__c?'checked="true"':''}/></td>
                        </tr>
                        <tr>
                            <td>6. Proof of Address and Photo Identification Proof - Voter’s ID Card / Driving License / 
                            Passport Copy / Aadhar Card Copy
                            </td>
                            <td><input type="checkbox" name="address_proof" id="address_proof"  ${result.Emp_isProofOfAddressAvailable__c?'checked="true"':''}/></td>
                        </tr>
                        <tr>
                            <td>7. Provident Fund Nomination and Declaration Form (Form 2) duly filled</td>
                            <td><input type="checkbox" name="provident_fund" id="provident_fund" ${result.Emp_isPFNominationAvailable__c?'checked="true"':''}/></td>
                        </tr>
                        <tr>
                            <td>8. Gratuity Nomination Form (Form F) duly filled * pre-filled sample copy enclosed</td>
                            <td><input type="checkbox" name="gratuity_form" id="gratuity_form" ${result.Emp_isGratuityFormAvailable__c?'checked="true"':''}/></td>
                        </tr>
                        <tr>
                            <td>9. Signed Acknowledged copy of the Offer Letter / Appointment letter</td>
                            <td><input type="checkbox" name="experience_letter" id="offer_letter" ${result.Emp_isSignedOfferLetterAvailable__c?'checked="true"':''}/></td>
                        </tr>
                        <tr>
                            <td>10.  Previous Employer Relieving and Experience Letter</td>
                            <td><input type="checkbox" name="experience_letter" id="experience_letter"  ${result.Emp_isExperienceLetterAvailable__c?'checked="true"':''}/></td>
                        </tr>
                        <tr>
                            <td>11. Bank Statement – 6 months (Original)</td>
                            <td> <input type="checkbox" name="bank_statement" id="bank_statement" ${result.Emp_isBankStatementAvailable__c?'checked="true"':''}/></td>
                        </tr>
                        <tr>
                            <td>12. Blood Group Report (Original)</td>
                            <td> <input type="checkbox" name="bloodgroup_report" id="bloodgroup_report"  ${result.Emp_isBloodGroupReportAvailable__c?'checked="true"':''}/></td>
                        </tr>
                        <tr>
                            <td>13. Code of Conduct</td>
                            <td>
                            <input type="checkbox" name="code_of_conduct" id="code_of_conduct" ${result.Emp_isCodeOfConductAvailable__c?'checked="true"':''}/>
                            </td>
                        </tr>
                    </table>
                    
                    <div class="btn-container">
                        
                    </div>`;
               let documentchecklistPreview=document.querySelector('.documentchecklist_preview_form');
               documentchecklistPreview.insertAdjacentHTML('beforeend',documentChecklist);
            });        
                

                //Acknowledgement 
                const Acknowledgement = ` 
                    <div class="input_div_group" style="display:block;">
                        <div class="input_div">
                            <label for=""> 
                                        I certify that the above statements made by me are true, complete, and correct. In case the company finds at any time that the information given by me in this form is not correct, true, or complete,
                                        the company will have the right to withdraw my letter of appointment or to terminate my appointment at any time without notice or compensation. I hereby acknowledge that I have reviewed the Service Rules, understood, and accepted the same.
                                        Additionally, I provide my consent for the collection, storage, processing, transfer, or disclosure of any Sensitive Personal Information, in accordance with the applicable laws and company policies, solely for the purpose of employment and business operations.
                                </label><br/> 
                                <div class="checkbox">
                                    <input class="input" type="checkbox" name="" id="acknowledgement" />
                                </div>
                        </div>
                    </div>
                    <div class="button_container">
                        <button type="submit" class="FsubmitBtn" disabled="true" style="background-color:rgb(146 146 149 / 85%);">Submit</button>
                    </div>
                    <div class="button_container">
                        <button class="previousbtn" data-goto='checklist_section'>Previous</button>
                    </div>`
                    const preview_section=document.querySelector('.acknowledgement_form');
                    preview_section.insertAdjacentHTML('beforeend',Acknowledgement);

            }

            //preview page logic for each section
            const empInfo = document.querySelector('.preview_section');
            empInfo.addEventListener('click', (e)=>{

                // Acknowledgement checklist
                if(e.target.closest('.acknowledgement_form')){
                    const parent=document.querySelector('.acknowledgement_form');
                    const FsubmitBtn=document.querySelector('.FsubmitBtn');
                    const acknowledgementCheck=document.querySelector('#acknowledgement').checked;
                    if(acknowledgementCheck)
                    {
                        FsubmitBtn.removeAttribute('disabled','');
                        FsubmitBtn.style.backgroundColor='rgba(11, 24, 76, .85)';
                    }
                    else
                    {
                        console.log("uncheck the checkbox and previous button clicked");
                        

                        FsubmitBtn.style.backgroundColor='rgb(146 146 149 / 85%)';
                        FsubmitBtn.setAttribute('disabled','');
                    } 
                        console.log('hello checkbox click....')
                        if(e.target.closest('.previousbtn'))
                        {
                            document.querySelector('.empinfo_preview_form').innerHTML = '';
                            document.querySelector('.familyinfo_preview_form').innerHTML = '';
                            document.querySelector('.kycinfo_preview_form').innerHTML = '';
                            document.querySelector('.eduinfo_preview_form').innerHTML = '';
                            document.querySelector('.workexp_preview_form').innerHTML = '';
                            document.querySelector('.acknowledgement_form').innerHTML = '';
                            if(currentSection != 'Checklist-Detail' )
                            {
                                document.querySelector('.previewEmployeeDetail').classList.remove('green-stage');
                                document.querySelector('.previewEmployeeDetail').classList.add('yellow-stage');
                            }
                            document.querySelector('.documentChecklistDetail').classList.remove('green-stage');
                            document.querySelector('.documentChecklistDetail').classList.add('yellow-stage');


                            e.preventDefault();
                            const moveTo = e.target.dataset.goto;
                            document.querySelector('.previewEmployeeDetail').classList.remove('green-stage');

                            // if(document.querySelector('.documentChecklistDetail').classList.contains('green-stage'))
                            // {
                            //     document.querySelector('.documentChecklistDetail').classList.remove('green-stage');
                            //     document.querySelector('.documentChecklistDetail').classList.add('yellow-stage');
                            // }
                            changeSection(moveTo);
                            return;
                        }
                }
                else
                {

                    e.preventDefault();
                    console.log(e.target);
                    if(e.target.closest('.editBtnEmployeeInfo'))
                    {
                        document.querySelector('.employee_section_next-btn').innerHTML='Go To Preview';
                        document.querySelector('.empinfo_preview_form').innerHTML = '';
                        document.querySelector('.familyinfo_preview_form').innerHTML = '';
                        document.querySelector('.kycinfo_preview_form').innerHTML = '';
                        document.querySelector('.eduinfo_preview_form').innerHTML = '';
                        document.querySelector('.workexp_preview_form').innerHTML = '';
                        document.querySelector('.acknowledgement_form').innerHTML = '';

                        console.log('edit button is clicked in employee section')
                        const moveTo = e.target.dataset.goto;
                        console.log('Moving to.')
                        console.log(moveTo)
                        //   To set all subsequent sections as undone;
                        // document.querySelector('.employeeDetail').classList.remove('green-stage');
                        // document.querySelector('.kycDetail').classList.remove('green-stage');
                        // document.querySelector('.familyDetail').classList.remove('green-stage');
                        // document.querySelector('.educationDetail').classList.remove('green-stage');
                        // document.querySelector('.workExperienceDetail').classList.remove('green-stage');
                        // document.querySelector('.documentChecklistDetail').classList.remove('green-stage');
                        // document.querySelector('.previewEmployeeDetail').classList.remove('green-stage');


                        // document.querySelector('.employeeDetail').classList.add('yellow-stage');
                        // document.querySelector('.kycDetail').classList.add('yellow-stage');
                        // document.querySelector('.familyDetail').classList.add('yellow-stage');
                        // document.querySelector('.educationDetail').classList.add('yellow-stage');
                        // document.querySelector('.workExperienceDetail').classList.add('yellow-stage');
                        // document.querySelector('.documentChecklistDetail').classList.add('yellow-stage');
                        // document.querySelector('.previewEmployeeDetail').classList.add('yellow-stage');
                        
                        changeSection(moveTo);
                    }
                    if(e.target.closest('.editBtnFamilyInfo'))
                    {
                        document.querySelector('.empinfo_preview_form').innerHTML = '';
                        document.querySelector('.familyinfo_preview_form').innerHTML = '';
                        document.querySelector('.kycinfo_preview_form').innerHTML = '';
                        document.querySelector('.eduinfo_preview_form').innerHTML = '';
                        document.querySelector('.workexp_preview_form').innerHTML = '';
                        document.querySelector('.acknowledgement_form').innerHTML = '';

                        console.log('edit button is clicked in employee section')
                        const moveTo = e.target.dataset.goto;

                        //To set all subsequent sections as undone;
                        // document.querySelector('.familyDetail').classList.remove('green-stage');
                        // document.querySelector('.educationDetail').classList.remove('green-stage');
                        // document.querySelector('.workExperienceDetail').classList.remove('green-stage');
                        // document.querySelector('.documentChecklistDetail').classList.remove('green-stage');
                        // document.querySelector('.previewEmployeeDetail').classList.remove('green-stage');

                        // document.querySelector('.familyDetail').classList.add('yellow-stage');
                        // document.querySelector('.educationDetail').classList.add('yellow-stage');
                        // document.querySelector('.workExperienceDetail').classList.add('yellow-stage');
                        // document.querySelector('.documentChecklistDetail').classList.add('yellow-stage');
                        // document.querySelector('.previewEmployeeDetail').classList.add('yellow-stage');

                        console.log('Moving to.')
                        console.log(moveTo)
                        changeSection(moveTo);
                    }
                    if(e.target.closest('.editBtnKycInfo'))
                    {
                        document.querySelector('.empinfo_preview_form').innerHTML = '';
                        document.querySelector('.familyinfo_preview_form').innerHTML = '';
                        document.querySelector('.kycinfo_preview_form').innerHTML = '';
                        document.querySelector('.eduinfo_preview_form').innerHTML = '';
                        document.querySelector('.workexp_preview_form').innerHTML = '';
                        document.querySelector('.acknowledgement_form').innerHTML = '';

                        console.log('edit button is clicked in employee section')
                        const moveTo = e.target.dataset.goto;

                        //   To set all subsequent sections as undone;
                        // document.querySelector('.kycDetail').classList.remove('green-stage');
                        // document.querySelector('.familyDetail').classList.remove('green-stage');
                        // document.querySelector('.educationDetail').classList.remove('green-stage');
                        // document.querySelector('.workExperienceDetail').classList.remove('green-stage');
                        // document.querySelector('.documentChecklistDetail').classList.remove('green-stage');
                        // document.querySelector('.previewEmployeeDetail').classList.remove('green-stage');

                        // document.querySelector('.kycDetail').classList.add('yellow-stage');
                        // document.querySelector('.familyDetail').classList.add('yellow-stage');
                        // document.querySelector('.educationDetail').classList.add('yellow-stage');
                        // document.querySelector('.workExperienceDetail').classList.add('yellow-stage');
                        // document.querySelector('.documentChecklistDetail').classList.add('yellow-stage');
                        // document.querySelector('.previewEmployeeDetail').classList.add('yellow-stage');

                        console.log('Moving to.')
                        console.log(moveTo)
                        changeSection(moveTo);
                    }
                    if(e.target.closest('.editBtnEducationinfo')) 
                    {
                        document.querySelector('.empinfo_preview_form').innerHTML = '';
                        document.querySelector('.familyinfo_preview_form').innerHTML = '';
                        document.querySelector('.kycinfo_preview_form').innerHTML = '';
                        document.querySelector('.eduinfo_preview_form').innerHTML = '';
                        document.querySelector('.workexp_preview_form').innerHTML = '';
                        document.querySelector('.acknowledgement_form').innerHTML = '';

                        console.log('edit button is clicked in employee section')
                        const moveTo = e.target.dataset.goto;
                        console.log(moveTo)

                        //   To set all subsequent sections as undone;
                        // document.querySelector('.educationDetail').classList.remove('green-stage');
                        // document.querySelector('.workExperienceDetail').classList.remove('green-stage');
                        // document.querySelector('.documentChecklistDetail').classList.remove('green-stage');
                        // document.querySelector('.previewEmployeeDetail').classList.remove('green-stage');

                        // document.querySelector('.educationDetail').classList.add('yellow-stage');
                        // document.querySelector('.workExperienceDetail').classList.add('yellow-stage');
                        // document.querySelector('.documentChecklistDetail').classList.add('yellow-stage');
                        // document.querySelector('.previewEmployeeDetail').classList.add('yellow-stage');

                        console.log('Moving to.')
                        console.log(moveTo)
                        changeSection(moveTo);
                    }
                    if(e.target.closest('.editBtnWorkInfo'))
                    {
                        document.querySelector('.empinfo_preview_form').innerHTML = '';
                        document.querySelector('.familyinfo_preview_form').innerHTML = '';
                        document.querySelector('.kycinfo_preview_form').innerHTML = '';
                        document.querySelector('.eduinfo_preview_form').innerHTML = '';
                        document.querySelector('.workexp_preview_form').innerHTML = '';
                        document.querySelector('.acknowledgement_form').innerHTML = '';

                        console.log('edit button is clicked in employee section')
                        const moveTo = e.target.dataset.goto;

                        //   To set all subsequent sections as undone;
                        // document.querySelector('.workExperienceDetail').classList.remove('green-stage');
                        // document.querySelector('.documentChecklistDetail').classList.remove('green-stage');
                        // document.querySelector('.previewEmployeeDetail').classList.remove('green-stage');

                        // document.querySelector('.workExperienceDetail').classList.add('yellow-stage');
                        // document.querySelector('.documentChecklistDetail').classList.add('yellow-stage');
                        // document.querySelector('.previewEmployeeDetail').classList.add('yellow-stage');

                        console.log('Moving to.')
                        console.log(moveTo)
                        changeSection(moveTo);
                    }
                    if(e.target.closest('.editBtnDocumentChecklist'))
                    {
                        document.querySelector('.empinfo_preview_form').innerHTML = '';
                        document.querySelector('.familyinfo_preview_form').innerHTML = '';
                        document.querySelector('.kycinfo_preview_form').innerHTML = '';
                        document.querySelector('.eduinfo_preview_form').innerHTML = '';
                        document.querySelector('.workexp_preview_form').innerHTML = '';
                        document.querySelector('.acknowledgement_form').innerHTML = '';
                        document.querySelector('.documentchecklist_preview_form').innerHTML='';

                        console.log('edit button is clicked in employee section')
                        const moveTo = e.target.dataset.goto;

                        console.log('Moving to.')
                        console.log(moveTo)
                        changeSection(moveTo);
                    }
                }
            });
        
           
            //final submit button
            document.querySelector('.acknowledgement_form').addEventListener('submit',(e)=>{
            e.preventDefault();
            const parent=document.querySelector('.acknowledgement_form');
            const FsubmitBtn=document.querySelector('.FsubmitBtn');
            console.log('button clicked..');
           
                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.mainController.FinalSubmission}',empId,
                function(result,event){
                    console.log(result);
                    document.querySelector('.previewEmployeeDetail').classList.add('green-stage');
                    const ref = window.location.origin + '/JoiningApp'; //fetched current org domain 
                    window.location.href  = ref;
                });
                // update stage 
                currentSection='Preview-Detail'
                    Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.mainController.updateStage}',empId,currentSection,
                        function(result,event){
                                console.log('updating the stage')
                                console.log('Current Section ',currentSection);
                        }); 
                    });
            
            //Validation for Educational Qualification
            const messageCancelButton = document.querySelector('.cancel');
            messageCancelButton.addEventListener('click', (e) => {
                const messageContainer = document.querySelector('.message');
                messageContainer.style.display = 'none';
            });

            // verification logic for kyc
            const verifyKyc = ()=>{
                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.mainController.fetchKyc}', empId,
                    function(result, event) {
                        result.forEach((index)=>{
                            let text =`missing `;
                            index.Kyc_documentNumber__c ?'':text+=`document Number, `;
                            index.Kyc_nameOnDocument__c ?'':text+=`name on document, `;
                            if(index.Kyc_documentType__c == 'Passport'  && index.Kyc_expDate__c?true:false)
                            {
                                text+=`expiry date, `;
                            }
                            if(index.Kyc_documentType__c == 'Bank Account (ICICI)' && index.Kyc_ifscCode__c?true:false)
                            {
                                text+=`IFSC code `
                            }
                            if(text !== 'missing ')
                            {
                                const errorcount = document.querySelector('.error_count');
                                let count =errorcount.innerHTML;
                                count++;
                                errorcount.innerHTML = count;
                                text+=`in ${index.Kyc_documentType__c}`;
                                const errorContainer = document.querySelector('.errorContents');
                                const html = `<div class="content">${text}</div> `;
                                errorContainer.insertAdjacentHTML('beforeend',html);
                            }
                        });
                    }
                );
            }

            const verifyFamily =()=>{
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.mainController.getFamilyInfo}',
                    empId,
                    function(result, event) {
                        result.forEach((index)=>{
                            let text =`missing `;
                            index.Fi_firstName__c?'':text+=`firstname, `;
                            index.Fi_lastName__c?'':text+=`lastname, `;
                            index.Fi_dob__c?'':text+='date of birth ';
            
                            if(text !== 'missing ')
                            {
                                const errorcount = document.querySelector('.error_count');
                                let count =errorcount.innerHTML;
                                count++;
                                errorcount.innerHTML = count;
                                text+=`in relation ${index.Fi_relation__c}`;
                                const errorContainer = document.querySelector('.errorContents');
                                const html = `<div class="content">${text}</div> `;
                                errorContainer.insertAdjacentHTML('beforeend',html);
                            }
                        })
                    }
                );
            }

            const verifyEducation = ()=>{
                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.mainController.fetchEducationalQualificationData}', empId,
                    function(result, event) {
                        result.forEach((index)=>{
                            let text =`missing `;
                            index.EQ_boardOrUniversity__c?'':text+=`board/University,`;
                            index.EQ_schoolOrCollegeName__c?'':text+=`school/collegeName, `;
                            index.EQ_yearOfPassing__c?'':text+=`year of Passing, `;
                            index.EQ_percentageMarks__c?'':text+=`marks `;
                            if(text !== 'missing ')
                            {
                                const errorcount = document.querySelector('.error_count');
                                let count =errorcount.innerHTML;
                                count++;
                                errorcount.innerHTML = count;
                                text+=`in qualification ${index.EQ_educationalLevel__c}`;
                                const errorContainer = document.querySelector('.errorContents');
                                const html = `<div class="content">${text}</div> `;
                                errorContainer.insertAdjacentHTML('beforeend',html);
                            }
                        });
                    }
                );
            }
            const renderKycSection  = ()=>{
                let nationality;
                let parent = document.querySelector('.kyc_form');
                try{
                    parent.querySelectorAll('.input_div_group').forEach((e)=>{
                    e.remove();
                })
                }
                catch(e)
                {

                }
                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.mainController.fetchNationality}', empId,
                function(result)
                {
                    nationality=result;
                    let html=`<div class="input_div_group passport_kyc_input_div_group" >
                        <div class="input_div ">
                            <label for="">Document Type</label><br/>
                            <select name="Document type" id="Kyc_documentType__c" class="Kyc_documentType__c">
                            <option value="Passport">Passport</option>
                            </select>
                            <p class="respective_errors" id="Kyc_documentType__c_error"></p>
                        </div>
                        <div class="input_div">
                            <label for="Kyc_nameOnDocument__c">Name as on Document</label><br/>
                            <input class="input" type="text" name="" id="Kyc_nameOnDocument__c" />
                            <p class="respective_errors" id="Kyc_nameOnDocument__c_error"></p>
                        </div>
                        <div class="input_div">
                            <label for="Kyc_documentNumber__c">Document no</label><br/>
                            <input class="input" type="text" name="" id="Kyc_documentNumber__c" />
                            <p class="respective_errors" id="Kyc_documentNumber__c_error"></p>
                        </div>
                        <div class="input_div IFSC_input_div" style="display:none">
                            <label for="">IFSC</label><br/>
                            <input class="input" type="text" name="" id="Kyc_ifsc" />
                        </div>
                        <div class="input_div Passport_exp_input_div" style="display:block">
                            <label for="">Expiry date</label><br/>
                            <input class="input" type="date" name="" id="Kyc_expDate" />
                            <p class="respective_errors" id="Kyc_expDate__c_error"></p>
                        </div>
                        <div class=" address">
                            <label for="Kyc_remarks__c">Remarks if any</label><br/>
                            <input type="text" name="" id="Kyc_remarks__c" class="input" cols="30" rows="10" />
                        </div>
                        <input type="hidden" id="Kyc_Id" value="new" class="Id" />
                        <div class="btn-container">
                        </div>
                    </div>`;
                if(nationality === 'INDIAN')
                {
                    html+=`
                    <div class="input_div_group aadhar_kyc_input_div_group" >
                        <div class="input_div ">
                            <label for="">Document Type</label><br/>
                            <select name="Document type" id="Kyc_documentType__c" class="Kyc_documentType__c">
                            <option value="Aadhar Card">Aadhar Card</option>
                            </select>
                            <p class="respective_errors" id="Kyc_documentType__c_error"></p>
                        </div>
                        <div class="input_div">
                            <label for="Kyc_nameOnDocument__c">Name as on Document</label><br/>
                            <input class="input" type="text" name="" id="Kyc_nameOnDocument__c" />
                            <p class="respective_errors" id="Kyc_nameOnDocument__c_error"></p>
                        </div>
                        <div class="input_div">
                            <label for="Kyc_documentNumber__c">Document no</label><br/>
                            <input class="input" type="text" name="" id="Kyc_documentNumber__c" />
                            <p class="respective_errors" id="Kyc_documentNumber__c_error"></p>
                        </div>
                        <div class="input_div IFSC_input_div" style="display:none">
                            <label for="">IFSC</label><br/>
                            <input class="input" type="text" name="" id="Kyc_ifsc" />
                        </div>
                        <div class="input_div Passport_exp_input_div" style="display:none">
                            <label for="">Expiry date</label><br/>
                            <input class="input" type="date" name="" id="Kyc_expDate" />
                        </div>
                        <div class=" address">
                            <label for="Kyc_remarks__c">Remarks if any</label><br/>
                            <input type="text" name="" id="Kyc_remarks__c" class="input" cols="30" rows="10" />
                        </div>
                        <input type="hidden" id="Kyc_Id" value="new" class="Id" />
                        <div class="btn-container">
                        </div>
                    </div>
                    <div class="input_div_group pan_kyc_input_div_group" >
                        <div class="input_div ">
                            <label for="">Document Type</label><br/>
                            <select name="Document type" id="Kyc_documentType__c" class="Kyc_documentType__c">
                            <option value="Pan Card">Pan Card</option>
                            </select>
                            <p class="respective_errors" id="Kyc_documentType__c_error"></p>
                        </div>
                        <div class="input_div">
                            <label for="Kyc_nameOnDocument__c">Name as on Document</label><br/>
                            <input class="input" type="text" name="" id="Kyc_nameOnDocument__c" />
                            <p class="respective_errors" id="Kyc_nameOnDocument__c_error"></p>
                        </div>
                        <div class="input_div">
                            <label for="Kyc_documentNumber__c">Document no</label><br/>
                            <input class="input" type="text" name="" id="Kyc_documentNumber__c" />
                            <p class="respective_errors" id="Kyc_documentNumber__c_error"></p>
                        </div>
                        <div class="input_div IFSC_input_div" style="display:none">
                            <label for="">IFSC</label><br/>
                            <input class="input" type="text" name="" id="Kyc_ifsc" />
                        </div>
                        <div class="input_div Passport_exp_input_div" style="display:none">
                            <label for="">Expiry date</label><br/>
                            <input class="input" type="date" name="" id="" />
                        </div>
                        <div class=" address">
                            <label for="Kyc_remarks__c">Remarks if any</label><br/>
                            <input type="text" name="" id="Kyc_remarks__c" class="input" cols="30" rows="10" />
                        </div>
                        <input type="hidden" id="Kyc_Id" value="new" class="Id" />
                        <div class="btn-container">
                        </div>
                    </div>`;
                }
                const parent = document.querySelector('.kyc_form');
                parent.firstElementChild.insertAdjacentHTML('afterend',html);
                Visualforce.remoting.Manager.invokeAction('{!$RemoteAction.mainController.fetchKyc}', empId,
                    function(result, event) {
                        const parent = document.querySelector('.kyc_form');
                        const allInputDivGroups = parent.querySelectorAll('.input_div_group');
                        allInputDivGroups.forEach((e)=>{
                            const docType = e.querySelector('#Kyc_documentType__c').value;
                            if(docType ==='Passport' || docType === 'Aadhar Card' || docType === 'Pan Card')
                            {
            
                            }
                            else
                            {
                                e.remove();
                            }
                        });
                        result.forEach((e) => {
                            thereareresults=true;
                            if(e.Kyc_documentType__c == 'Aadhar Card' && nationality=='INDIAN'){
                                console.log('heyyy');
                                const parent = document.querySelector('.aadhar_kyc_input_div_group');                                
                                parent.querySelector('#Kyc_documentType__c').value=e.Kyc_documentType__c ? e.Kyc_documentType__c:'';
                                parent.querySelector('#Kyc_nameOnDocument__c').value= e.Kyc_nameOnDocument__c ? e.Kyc_nameOnDocument__c:'';
                                parent.querySelector('#Kyc_documentNumber__c').value =e.Kyc_documentNumber__c ? e.Kyc_documentNumber__c:'';
                                parent.querySelector('#Kyc_remarks__c').value = e.Kyc_remarks__c ? e.Kyc_remarks__c : '';
                                parent.querySelector('#Kyc_Id').value = e.Id;
                                return;
                            }
                            else if (e.Kyc_documentType__c == 'Pan Card' && nationality=='INDIAN'){
                                console.log("heyyy pan");
                                const parent = document.querySelector('.pan_kyc_input_div_group');
                                parent.querySelector('#Kyc_documentType__c').value=e.Kyc_documentType__c ? e.Kyc_documentType__c:'';
                                parent.querySelector('#Kyc_nameOnDocument__c').value= e.Kyc_nameOnDocument__c ? e.Kyc_nameOnDocument__c:'';
                                parent.querySelector('#Kyc_documentNumber__c').value =e.Kyc_documentNumber__c ? e.Kyc_documentNumber__c:'';
                                parent.querySelector('#Kyc_remarks__c').value = e.Kyc_remarks__c ? e.Kyc_remarks__c:'';
                                parent.querySelector('#Kyc_Id').value = e.Id;
                                return;
                            }
                            else if(e.Kyc_documentType__c == 'Passport')
                            {
                                const parent = document.querySelector('.passport_kyc_input_div_group');
                                parent.querySelector('#Kyc_documentType__c').value=e.Kyc_documentType__c ? e.Kyc_documentType__c:'';
                                parent.querySelector('#Kyc_nameOnDocument__c').value= e.Kyc_nameOnDocument__c ? e.Kyc_nameOnDocument__c:'';
                                parent.querySelector('#Kyc_documentNumber__c').value =e.Kyc_documentNumber__c ? e.Kyc_documentNumber__c:'';
                                parent.querySelector('#Kyc_remarks__c').value = e.Kyc_remarks__c ? e.Kyc_remarks__c:'';
                                parent.querySelector('#Kyc_expDate').value = e.Kyc_expDate__c ? e.Kyc_expDate__c:'';
                                parent.querySelector('#Kyc_Id').value = e.Id;
                                return;
                            }
                            else
                            {
                                const ifscVisibility = (e.Kyc_documentType__c == 'Bank Account (ICICI)' ? true : false);
                                const expDateVisibility = (e.Kyc_documentType__c == 'Passport' ? true : false);
                                const html = `<div class="input_div_group" >
                                <div class="input_div ">
                                    <label for="">Document Type</label><br/>
                                        <select name="Document type" id="Kyc_documentType__c" class="Kyc_documentType__c">
                                            <option value="Bank Account (ICICI)" ${e.Kyc_documentType__c === 'Bank Account (ICICI)' ? 'selected' : ''}>Bank Account (ICICI)</option>
                                            <option value="Aadhar Card" ${e.Kyc_documentType__c === 'Aadhar Card' ? 'selected' : ''}>Aadhar Card</option>
                                            <option value="Pan Card" ${e.Kyc_documentType__c === 'Pan Card' ? 'selected' : ''}>Pan Card</option>
                                            <option value="Voter Card" ${e.Kyc_documentType__c === 'Voter Card' ? 'selected' : ''}>Voter Card</option>
                                            <option value="ESIC Card" ${e.Kyc_documentType__c === 'ESIC Card' ? 'selected' : ''}>ESIC Card</option>
                                            <option value="Ration Card" ${e.Kyc_documentType__c === 'Ration Card' ? 'selected' : ''}>Ration Card</option>
                                            <option value="Passport" ${e.Kyc_documentType__c === 'Passport' ? 'selected' : ''}>Passport</option>
                                            <option value="UAN" ${e.Kyc_documentType__c === 'UAN' ? 'selected' : ''}>UAN</option>
                                        </select>  
                                        <p class="respective_errors" id="Kyc_documentType__c_error"></p>                                                  
                                </div>
                                <div class="input_div">
                                    <label for="Kyc_nameOnDocument__c">Name as on document</label><br/>
                                    <input type="text" id="Kyc_nameOnDocument__c" class="input" value="${e.Kyc_nameOnDocument__c ?e.Kyc_nameOnDocument__c:'' }"/>
                                    <p class="respective_errors" id="Kyc_nameOnDocument__c_error"></p>    
                                </div>
                                <div class="input_div">
                                    <label for="Kyc_documentNumber__c">Document no</label><br/>
                                    <input type="text" class="input" name="Kyc_documentNumber__c" id="Kyc_documentNumber__c" value="${e.Kyc_documentNumber__c ?e.Kyc_documentNumber__c:'' }"/>
                                    <p class="respective_errors" id="Kyc_documentNumber__c_error"></p>
                                </div>
                                <div class="input_div IFSC_input_div" style="display:${ifscVisibility?'block':'none'}">
                                    <label for="">IFSC</label><br/>
                                    <input class="input" type="text" name="" id="Kyc_ifscCode" value='${e.Kyc_ifscCode__c ? e.Kyc_ifscCode__c :''}' />
                                    <p class="respective_errors" id="Kyc_ifscCode__c_error"></p>
                                </div>
                                <div class="input_div Passport_exp_input_div" style="display:${expDateVisibility?'block':'none'}">
                                    <label for="">Expiry date</label><br/>
                                    <input class="input" type="text" name="" id="Kyc_expDate" value='${e.Kyc_expDate__c ? e.Kyc_expDate__c : ''}' />
                                    <p class="respective_errors" id="Kyc_expDate__c_error"></p>
                                </div>
                                <div class=" address">
                                    <label for="remarks">Remarks if any</label><br/>
                                    <input type="text" name="remarks" class="input" id="Kyc_remarks__c" value="${e.Kyc_remarks__c ? e.Kyc_remarks__c :''}"cols="30" rows="10"/>
                                </div>
                                <input type="hidden" id="Kyc_Id" value="${e.Id}" class="Id"/>
                                <div class="btn-container">
                                    <div class="button_container">
                                        <button class="deletebtn" ><i class="fa-solid fa-trash" ></i></button>
                                    </div>
                                    <div class="deleteConfirm" style="display:none">
                                            <p style="color:black">Are you sure?</p>
                                            <button class="cofirmdeletebtn">Yes</button>
                                            <button class="notcofirmdeletebtn">No</button>
                                    </div>
                                </div>`;
                                document.querySelector('.kyc_form').firstElementChild.insertAdjacentHTML('afterend', html);
                            }
                        });
                });
                });
            }
            // verification logic for final submission
            if (performance.navigation.type === 1 || performance.navigation.type === 0) {
                document.querySelector('.buffer').style.display='block';
                fetchEmployeeInfo();
                fetchFamilyInfo();
                fetchEducationalInfo();
                fetchWorkExpInfo();
                fetchDocumentCheckList();
            }
         </script>
      </body>
   </html>
</apex:page>